id: 2fed0668-6d43-4c78-87e6-510f96f12145
name: Phishing link click observed in None Microsoft Network device
description: |
  'The purpose of this content is to identify successful phishing links accessed by users. Once a user clicks on a phishing link, we observe successful network activity originating from non-Microsoft network devices. These devices may include Palo Alto Networks, Fortinet, Check Point, and Zscaler devices.'
severity: Medium
requiredDataConnectors:
  - connectorId:  OfficeATP
    dataTypes:
    - SecurityAlert
  - connectorId:  PaloAltoNetworks
    dataTypes:
    - CommonSecurityLog (PaloAlto)
  - connectorId:  Fortinet
    dataTypes:
    - CommonSecurityLog (Fortinet)
  - connectorId:  CheckPoint
    dataTypes:
    - CommonSecurityLog (CheckPoint)
  - connectorId:  Zscaler
    dataTypes:
    - CommonSecurityLog (Zscaler)
queryFrequency: 1d
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - InitialAccess
relevantTechniques:
  - T1566
query: |
    //Finding security alerts and extracting the Entities 
    SecurityAlert
    |where AlertName in~ ('Phishing link click observed in Network Traffic')
    //extracting Alert Entities 
    | extend Entities = parse_json(Entities)
    | mv-apply Entity = Entities on
    (
    where Entity.Type == 'account'
    | extend EntityUPN = iff(isempty(Entity.UserPrincipalName), tostring(strcat(Entity.Name, "@", tostring (Entity.UPNSuffix))), tostring(Entity.UserPrincipalName))
    )
    | mv-apply Entity = Entities on
    (
    where Entity.Type == 'ip'|extend EntityIp = tostring(Entity.Address)
    )
    | mv-apply Entity = Entities on
    (
    where Entity.Type == 'host'| extend EntityHost = tostring(Entity.HostName)
    )
    | mv-apply Entity = Entities on
    (
    where Entity.Type == 'url'
    | extend EntityUrl = tostring(Entity.Url)
    )
    | where not(ipv4_is_private(EntityIp))
    | summarize
    AccountUpn=take_any(EntityUPN),IPAddress=take_any(EntityIp),HostName=take_any(EntityHost),Url=tostring(tolower(take_any(EntityUrl))),AlertTime= min(TimeGenerated)by SystemAlertId, ProductName
    // filtering 3pnetwork devices 
    | join kind= inner (CommonSecurityLog
    | where DeviceVendor has_any  ("Palo Alto Networks", "Fortinet", "Check Point", "Zscaler")
    | where DeviceAction != "Block"
    | where DeviceProduct in~ ('Fortigate',
    'FortiGate-501E',
    'FortiGate-100E',
    'FortiGate-2600F',
    'FortiGate-1801F',
    'FortiGate-2200E',
    'FortiGate-1500D',
    'FortiGate-61F',
    'FortiGate-601E',
    'FortiGate-101F',
    'FortiGate-VM64-KVM',
    'FortiGate-VM64-AWS',
    'FortiGate-81F',
    'FortiGate-300E',
    'FortiGate-200F',
    'FortiGate-600E',
    'FortiGate-3240C',
    'FortiGate-201E',
    'FortiGate-200E',
    'FortiGate-61E',
    'FortiGate-2000E',
    'FortiGate-80E',
    'FortiGate-40F',
    'FortiGate-VM64',
    'FortiGate-201F',
    'FortiGate-1200D',
    'FortiGate-51E',
    'FortiGate-60E',
    'FortiGate-90E',
    'FortiClient-EMS',
    'VPN-1 & FireWall-1',
    'HTTPS Inspection',
    'Application Control',
    'URL Filtering',
    'Identity Awareness',
    'Log Update',
    'Firewall',
    'VPN-1 & FireWall-1 AND Content Awareness',
    'FG',
    'Threat Emulation',
    'Application Control AND URL Filtering',
    'FG AND VPN-1 & FireWall-1',
    'VPN-1 & FireWall-1 AND FG',
    'SmartDefense',
    'New Anti Virus',
    'CloudGuard IaaS',
    'CME',
    'ESOD',
    'NSSWeblog',
    'NSSFWlog',
    'NSSDNSlog',
    'ZPA',
    'â€‹PAN-OS',
    'PAN-OS',
    'PAN-DATA',
    'GP-Version',
    'Application Control AND Content Awareness',
    'Identity Logging',
    'FortiGate-3000D',
    'FortiGate-100F',
    'FortiGate-2201E',
    'FortiGate-1000D',
    'FortiGate-VM64-AZURE',
    'FortiGate-3301E',
    'FortiGate-1101E',
    'FortiWeb',
    'FortiNAC-VM-CA',
    'PAN-OS ',
    'System Monitor',
    'FortiGate-VM64-AZUREONDEMAND',
    'FortiWiFi-60E',
    'FortiGate-1100E',
    'FortiGate-60F',
    'FortiGate-500E',
    'FortiGate-1800F',
    'FortiGate-80F',
    'FortiWiFi-60F',
    'FortiWiFi-40F-3G4G',
    'FortiManager-VM',
    'FortiGate-101E',
    'FortiWiFi-51E',
    'FortiWeb-600D',
    'FortiAuthenticator-VM',
    'FortiGate-30E',
    'FortiGate-100D',
    'FortiWiFi-50E',
    'FortiGate-50E',
    'Linux OS',
    'Security Gateway/Management',
    'IPS',
    'PAN-WILDFIRE',
    'FortiWiFi-61E',
    'FortiGate-301E',
    'FortiWiFi-60D',
    'Anti-Malware',
    'URL Filtering AND Application Control',
    'WEB_API',
    'Zero Phishing',
    'FortiGate-600F',
    'FortiWiFi-80F-2R',
    'Content Awareness AND Application Control AND URL Filtering',
    'VPN-1 & FireWall-1 AND Identity Awareness',
    'FortiGate-400F',
    'FortiGate-300D',
    'Identity Awareness AND VPN-1 & FireWall-1',
    'Threat Emulation AND VPN-1 & FireWall-1',
    'CPMI Client',
    'FortiGate-VM64-HV',
    'FortiGate-60E-POE',
    'FortiGate-60D',
    'FortiGate-60D-POE',
    'FortiNAC-CA-VM',
    'FortiGate-400E',
    'SmartDefense AND VPN-1 & FireWall-1',
    'DLP',
    'FortiWiFi-40F',
    'LSSZPALog',
    'FortiGate-600D',
    'FortiGate-800D',
    'FortiGate-80D',
    'FortiGate-40F-3G4G',
    'FortiWeb-VM',
    'FortiGate-401E',
    'Cortex XDR',
    'Content Awareness AND Application Control',
    'FortiGate-3200D',
    'FortiMail-VM',
    'FortiGate-VM64-Xen',
    'PAN-OSks',
    'Anti Spam',
    'FortiManager-VM64',
    'SmartConsole',
    'PAN-Orks',
    'Threat Extraction',
    'SmartEvent Client',
    'Compliance Blade',
    'Networks',
    'NSSAuditlog',
    'Domain Management Server',
    'PANworks',
    'New Anti Virus AND VPN-1 & FireWall-1',
    'VPN-1 Embedded Connector',
    'Security Management Server',
    'Compliance',
    'FortiNAC-VM-M',
    'Anti-Bot',
    'license-mgmt',
    'PAN-CONFIG',
    'PAN-OSN-OS',
    'Check Point Security Management Server',
    'PAPAN-OS',
    'VPN-1 & FireWall-1 AND Application Control',
    'GRCApp',
    'CPM Server')
    | where isnotempty(DestinationHostName) 
    | where isnotempty(RequestURL)
    | project
    3plogTime=TimeGenerated,
    DeviceVendor,
    DeviceProduct,
    Activity,
    DestinationHostName,
    DestinationIP,
    RequestURL=tostring(tolower(RequestURL)),
    MaliciousIP,
    Name = tostring(split(SourceUserName,"@")[0]),
    UPNSuffix =tostring(split(SourceUserName,"@")[1]),
    SourceUserName,
    IndicatorThreatType,
    ThreatSeverity,AdditionalExtensions,
    ThreatConfidence)on $left.Url == $right.RequestURL
    // Applied the condition where alert trigger 1st and then the 3p Network activity execution 
    | where AlertTime between ((3plogTime - 1h) .. (3plogTime + 1h))
entityMappings:
    - entityType: Account
      fieldMappings:
      - identifier: Name
        columnName: Name
      - identifier: UPNSuffix
        columnName: UPNSuffix
    - entityType: IP
      fieldMappings:
      - identifier: Address
        columnName: DestinationIP
    - entityType: DNS
      fieldMappings:
      - identifier: DomainName
        columnName: DestinationHostName	
version: 1.0.0
kind: Scheduled
