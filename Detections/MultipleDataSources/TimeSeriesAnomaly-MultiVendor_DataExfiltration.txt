// Name: Time Series Anomaly detection for size of data transferred to Public Internet
// Description: This query will identify anamalous data transfer to public networks. 
// The query leverages KQL built-in anomaly detection algorithm find large deviations from baseline pattern. 
// Any sudden increase in data transferred to unknown public networks will be an indication of data exfiltration attempts and should be investigated.
//
// Id: f2dd4a3a-ebac-4994-9499-1a859938c947
//
// DataSource: #VMConnection, #CommonSecurityLog
//
// Tactics: #Exfiltration
//
let starttime = 30d;
let endtime = 1d;
let timeframe = 1h;
let PrivateIPregex = @'^127\.|^10\.|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-1]\.|^192\.168\.';
let TimeSeriesData = (union isfuzzy=true
(
VMConnection
| where TimeGenerated between (ago(starttime)..ago(endtime))
| where isnotempty(DestinationIP) and isnotempty(SourceIP)
| extend DestinationIpType = iff(DestinationIp matches regex PrivateIPregex,"private" ,"public" )
| where DestinationIpType =="public"
| project TimeGenerated,BytesSent, DeviceVendor
| make-series TotalBytesSent=sum(BytesSent) on TimeGenerated from ago(starttime) to ago(endtime) step timeframe by DeviceVendor
),
(
CommonSecurityLog 
| where TimeGenerated between (ago(starttime)..ago(endtime))
| where isnotempty(DestinationIP) and isnotempty(SourceIP)
| extend DestinationIpType = iff(DestinationIP matches regex PrivateIPregex,"private" ,"public" )
| where DestinationIpType =="public"
| project TimeGenerated, SentBytes,DeviceVendor
| make-series TotalBytesSent=sum(SentBytes) on TimeGenerated from ago(starttime) to ago(endtime) step timeframe by DeviceVendor
)
);
TimeSeriesData
| extend (anomalies, score, baseline) = series_decompose_anomalies(TotalBytesSent, 1.5, -1, 'linefit')
| mv-expand TotalBytesSent to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)
| where anomalies > 0
| project DeviceVendor,TimeGenerated, TotalBytesSent, baseline, anomalies, score