id: b725d62c-eb77-42ff-96f6-bdc6745fc6e0
name: New UserAgent observed in last 24 hours
description: |
  'Identifies new UserAgents observed in the last 24 hours versus the previous 14 days. These new UserAgents could be benign. 
  However, in normally stable environments, these new UserAgents could provide a starting point for investigating malicious activity.'
severity: Low
requiredDataConnectors:
  - connectorId: AWS
    dataTypes:
      - AWSCloudTrail
  - connectorId: Office365
    dataTypes:
     - OfficeActivity
  - connectorId: WAF
    dataTypes:
     - AzureDiagnostics
  - dataTypes:
    - W3CIISLog
queryFrequency: 1d
queryPeriod: 14d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - InitialAccess
  - CommandAndControl
  - Execution
relevantTechniques:
  - T1189
  - T1071
  - T1203
query: |

  let starttime = 14d;
  let endtime = 1d;
  let UserAgentAll =
  (union isfuzzy=true
  (OfficeActivity
  | where TimeGenerated >= ago(starttime) 
  | extend UserAgent = extractjson("$[0].Value", ExtendedProperties, typeof(string))
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by SourceIP = ClientIP, Account = UserId, Type
  ),
  (
  AzureDiagnostics
  | where TimeGenerated >= ago(starttime) 
  | extend UserAgent = replace(@'\+', @' ', userAgent_s)
  | where isnotempty(UserAgent)
  | parse msg_s with * 'HTTPS request from' SourceIP ':' * 
  | where isnotempty(SourceIP)
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by UserAgent, SourceIP, Type
  ),
  (
  W3CIISLog
  | where TimeGenerated >= ago(starttime) 
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by UserAgent = csUserAgent, SourceIP = cIP, Account = csUserName, Type
  ),
  (
  AWSCloudTrail
  | where TimeGenerated >= ago(starttime) 
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by UserAgent, SourceIP = SourceIpAddress, Account = UserIdentityUserName, Type
  ));
  UserAgentAll
  | where StartTimeUtc < ago(endtime)
  | summarize IP = dcount(SourceIP) by tostring(UserAgent), Account, Type
  | join kind=rightanti
  (
  UserAgentAll
  | where StartTimeUtc >= ago(endtime) 
  | summarize StartTimeUtc = min(StartTimeUtc), EndTimeUtc = max(EndTimeUtc), IP = dcount(SourceIP) by tostring(UserAgent), SourceIP, Account, Type
  ) on UserAgent, Account, Type
  //| project UserAgent, SourceIP
  | extend timestamp = StartTimeUtc, IPCustomEntity = SourceIP, AccountCustomEntity = Account
