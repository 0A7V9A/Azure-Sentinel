// Name: Login attempts using Legacy Auth
// Id: b7918a0a-c6fe-4b6d-9111-b0b0c477f1a8
//
// Description: This query over Azure AD sign-in activity highlights use of legacy authentication
// protocol in the  environment. Because conditional access policies are not evaluated when legacy 
// authentication is used, legacy authentication can be used to circumvent all Azure Conditional Access policies. 
//
// DataSource: #SigninLogs
//
// Severity: Medium
//
// QueryFrequency: 24
//
// QueryPeriod: 24
//
// AlertTriggerOperator: gt
//
// AlertTriggerThreshold: 0
//
// Techniques: #InitialAccess
//
let timeRange = ago(1d);
let legacyAuthentications =
SigninLogs
// success logons only
| where ResultType == 0
|extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,"Unknown" ,ClientAppUsed)
|extend isLegacyAuth = case(ClientAppUsed contains "Browser", "No", ClientAppUsed contains "Mobile Apps and Desktop clients", "No", ClientAppUsed contains "Exchange ActiveSync", "No", ClientAppUsed contains "Other clients", "Yes", "Unknown")
|where isLegacyAuth=="Yes";
legacyAuthentications | where TimeGenerated >= timeRange
// Don't alert for accounts already seen using legacy auth in prior 7 days
| join kind=leftanti (
   legacyAuthentications | where TimeGenerated between((timeRange - 7d) .. timeRange)
) on UserPrincipalName , ClientAppUsed
| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
| extend locationString= strcat(tostring(LocationDetails["countryOrRegion"]), "/", tostring(LocationDetails["state"]), "/", tostring(LocationDetails["city"]))
|summarize count() by isLegacyAuth, UserPrincipalName, ClientAppUsed , tostring(OS) , tostring(Browser) , locationString
|sort by count_  desc