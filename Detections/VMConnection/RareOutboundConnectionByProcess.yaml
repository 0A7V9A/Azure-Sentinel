id: 1c408090-0320-44d5-aba8-e55500c2cfad
name: Rare Outbound connections from VMs by Process and Location
description: |
  'Identifies if there is unusual connections to an unexpected remote location from a VM when compared with the last 14 days.
  This may indicate connection to a C2 or data exfiltration from the associated VM.
  It is recommended that you understand what the associated process is and whether or not this is expected.'
severity: Low
requiredDataConnectors:
  - dataTypes:
      - VMConnection
queryFrequency: 1d
queryPeriod: 14d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CommandAndControl
  - Exfiltration
relevantTechniques:
  - T1105
  - T1048
query: |

  let f_lookBack = 14d;
  let s_lookBack = 7d;
  let endtime = 1d;
  let countryThreshold = 5;
  let ipBlockThreshold = 7;
  // gather a list of common countries connections come from for previous 14d and include only above countryThreshold
  let CountryCount = VMConnection 
  | where TimeGenerated >= ago(f_lookBack) and TimeGenerated < ago(endtime) 
  | where isnotempty(RemoteCountry)
  | where Direction == "outbound" 
  | summarize count() by RemoteCountry 
  | where count_ > countryThreshold; 
  // gather the connections for Today with all details
  let FullData = VMConnection
  | where TimeGenerated >= ago(endtime) 
  | where isnotempty(RemoteCountry) 
  | where Direction == "outbound"
  // exclude internal to internal 
  | where SourceIp !startswith "192.168." and DestinationIp !startswith "192.168."  
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), sum(BytesSent), sum(BytesReceived) 
    by Computer, Direction, ProcessName, SourceIp, DestinationIp, DestinationPort, Protocol, RemoteCountry, MaliciousIp;
  // build IP blocks from Today
  let Today = VMConnection 
  | where TimeGenerated >= ago(endtime) 
  | where isnotempty(RemoteCountry) 
  | where Direction == "outbound" 
  // exclude internal to internal 
  | where SourceIp !startswith "192.168." and DestinationIp !startswith "192.168."  
  | summarize countToday = count() by ProcessName, SourceIp, DestinationIp, RemoteCountry;
  // build IP blocks from last week and include only above ipBlockThreshold
  let lastweek = VMConnection 
  | where TimeGenerated >= ago(s_lookBack) and TimeGenerated < ago(endtime)
  | where isnotempty(RemoteCountry)  
  | where Direction == "outbound" 
  // exclude internal to internal 
  | where SourceIp !startswith "192.168." and DestinationIp !startswith "192.168."  
  | summarize SourceIpCount = count() by ProcessName, SourceIp, DestinationIp, RemoteCountry
  | where SourceIpCount > ipBlockThreshold;
  // exclude connections from last week that come from the same IP block
  let New = Today | join kind= leftanti (
    lastweek 
  ) on ProcessName, SourceIp, DestinationIp, RemoteCountry;
  // exclude countries above the countryThreshold
  let RemoveCommonCountry = New | join kind= leftanti (
    CountryCount 
  ) on RemoteCountry;
  // join back to FullData to indicate new or rare IP and Country combinations
  RemoveCommonCountry | join kind= innerunique (FullData) on RemoteCountry, SourceIp, DestinationIp
  | project StartTimeUtc, EndTimeUtc, RemoteCountry, Computer, SourceIp, DestinationIp, Direction, ProcessName, DestinationPort, Protocol, countToday, sum_BytesSent, sum_BytesReceived
  | order by countToday desc nulls last 
  | extend timestamp = StartTimeUtc, HostCustomEntity = Computer, IPCustomEntity = SourceIp
