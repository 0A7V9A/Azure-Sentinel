SchemaVersion: '1.0'
Type: KQL
Provider: Sentinel
DataTypes:
  - DataType: Heartbeat
  - DataType: VMConnection
  - DataType: VMComputer
  - DataType: ServiceMapComputer_CL
  - DataType: WireData
  - DataType: ProtectionStatus
  - DataType: DeviceNetworkInfo
  - DataType: DeviceNetworkEvents
  - DataType: AzureNetworkAnalytics_CL
  - DataType: DnsEvents
  - DataType: CommonSecurityLog
  - DataType: Event
  - DataType: SecurityEvent
  - DataType: Syslog
EntitiesFilter: 
 Host_OsFamily: []
RequiredInputFieldsSets: 
 - - IP_Address
BaseQuery: |  
  let GetIPStats = (IP_Address:string){
  //checking time span to lock to 7 days or less for Entity page usage
  let start = datetime('{{Start_Time_ISO}}');
  let end = datetime('{{End_Time_ISO}}');
  let end_start = datetime_diff('day',end,start);
  let start_time = iff(end_start > 7, end - 7d, start);
  let end_time = end;
  let IpStats = (union isfuzzy=true
  (
  VMConnection
  | where TimeGenerated between (start_time..end_time)
  | where SourceIp =~ IP_Address
  | where SourceIp != DestinationIp
  | where Direction =~ "outbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), OutboundCount = countif(Direction =~ "outbound") by IPAddress = SourceIp, Type, RemoteIPAddress = DestinationIp, Direction, SentBytes = tolong(BytesSent), ReceivedBytes = tolong(BytesReceived)
  ),
  (
  VMConnection
  | where TimeGenerated between (start_time..end_time)
  | where DestinationIp =~ IP_Address
  | where SourceIp != DestinationIp
  | where Direction =~ "inbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), InboundCount = countif(Direction =~ "inbound") by IPAddress = DestinationIp, Type, RemoteIPAddress = SourceIp, Direction, SentBytes = tolong(BytesSent), ReceivedBytes = tolong(BytesReceived)
  ),
  (
  WireData
  | where TimeGenerated between (start_time..end_time)
  | where LocalIP =~ IP_Address
  | where LocalIP != RemoteIP
  | where Direction =~ "outbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), OutboundCount = countif(Direction =~ "outbound") by IPAddress = LocalIP, Type, RemoteIPAddress = RemoteIP, Direction
  ),
  (
  WireData
  | where TimeGenerated between (start_time..end_time)
  | where RemoteIP =~ IP_Address
  | where LocalIP != RemoteIP
  | where Direction =~ "inbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), InboundCount = countif(Direction =~ "inbound") by IPAddress = RemoteIP, Type, RemoteIPAddress = LocalIP, Direction
  ),
  (
  DeviceNetworkEvents
  | where TimeGenerated between (start_time..end_time)
  | where LocalIP =~ IP_Address
  | where LocalIP != RemoteIP
  | extend Direction = "outbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), OutboundCount = countif(ActionType =~ "ConnectionSuccess") by IPAddress = LocalIP, Type, RemoteIPAddress = RemoteIP, Direction
  ),
  (
  DeviceNetworkEvents
  | where TimeGenerated between (start_time..end_time)
  | where RemoteIP =~ IP_Address
  | where LocalIP != RemoteIP
  | extend Direction = "inbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), InboundCount = countif(ActionType =~ "InboundConnectionAccepted") by IPAddress = RemoteIP, Type, RemoteIPAddress = LocalIP, Direction
  ),
  (
  AzureNetworkAnalytics_CL
  | where TimeGenerated between (start_time..end_time)
  | where SrcIP_s =~ IP_Address
  | where isnotempty(SrcIP_s) and isnotempty(DestPublicIPs_s)
  | extend DestPublicIPs_s = split(DestPublicIPs_s, ' ')
  | mv-expand DestPublicIPs_s
  | extend DestPublicIPs_s = tostring(split(DestPublicIPs_s, '|')[0])
  | where SrcIP_s != DestPublicIPs_s
  | extend Direction = "outbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), OutboundCount = count() by IPAddress = SrcIP_s, Type, RemoteIPAddress = DestPublicIPs_s, Direction, SentBytes = tolong(OutboundBytes_d), ReceivedBytes = tolong(InboundBytes_d)
  ),
  (
  AzureNetworkAnalytics_CL
  | where TimeGenerated between (start_time..end_time)
  | where DestIP_s =~ IP_Address
  | where isnotempty(DestIP_s) and isnotempty(SrcPublicIPs_s)
  | extend SrcPublicIPs_s = split(SrcPublicIPs_s, ' ')
  | mv-expand SrcPublicIPs_s
  | extend SrcPublicIPs_s = tostring(split(SrcPublicIPs_s, '|')[0])
  | where DestIP_s != SrcPublicIPs_s
  | extend Direction = "inbound"
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), InboundCount = count() by IPAddress = DestIP_s, Type, RemoteIPAddress = SrcPublicIPs_s, Direction, SentBytes = tolong(OutboundBytes_d), ReceivedBytes = tolong(InboundBytes_d)
  ),
  (
  CommonSecurityLog
  | where TimeGenerated between (start_time..end_time)
  | where SourceIP =~ IP_Address
  | where SourceIP != DestinationIP
  //| where DeviceAction has_any ('allow', 'allowed', 'accept', 'built', 'start', 'connect', '')
  //| where not(DeviceAction has_any ('built','deny', 'denied', 'rst', 'blocked', 'teardown'))
  | extend Direction = iff(CommunicationDirection !in~ ('outbound','0') or CommunicationDirection !in~ ('inbound','1'), 'NotAvailable', CommunicationDirection)
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), InboundCount = countif(Direction in~ ('Inbound','1')), OutboundCount = countif(Direction in~ ('Outbound', '0')), UnknownDirection = countif(Direction =~ 'NotAvailable') by IPAddress = SourceIP, Type = strcat(Type,':', DeviceVendor,'-', DeviceProduct), RemoteIPAddress = DestinationIP, Direction, SentBytes = tolong(SentBytes), ReceivedBytes = tolong(ReceivedBytes)
  ),
  (
  CommonSecurityLog
  | where TimeGenerated between (start_time..end_time)
  | where DestinationIP =~ IP_Address
  | where SourceIP != DestinationIP
  //| where DeviceAction has_any ('allow', 'allowed', 'accept', 'built', 'start', 'connect', '')
  //| where not(DeviceAction has_any ('built','deny', 'denied', 'rst', 'blocked', 'teardown'))
  | extend Direction = iff(CommunicationDirection !in~ ('outbound','0') or CommunicationDirection !in~ ('inbound','1'), 'NotAvailable', CommunicationDirection)
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), InboundCount = countif(Direction in~ ('Inbound','1')), OutboundCount = countif(Direction in~ ('Outbound', '0')), UnknownDirection = countif(Direction =~ 'NotAvailable') by IPAddress = DestinationIP, Type = strcat(Type,':', DeviceVendor,'-', DeviceProduct), RemoteIPAddress = SourceIP, Direction, SentBytes = tolong(SentBytes), ReceivedBytes = tolong(ReceivedBytes)
  )
  );
  IpStats
  | join kind=inner (ThreatIntelligenceIndicator | where TimeGenerated < ago(1m)
  | where Active = true and isnotempty(NetworkIP)
  | summarize arg_max(TimeGenerated, *) by ThreatIntelMatch = Description, ThreatType, NetworkIP) on $left.RemoteIPAddress == $right.NetworkIP
  };
  GetIPStats('{{IP_Address}}')

Insights:
 Id: 340e5f6f-d218-4a11-8638-09e1af7847cc
 DisplayName: "IP address remote connections with TI match"
 Description: |
  'Provides the threat intelligence related hits for the remote IP address. Note due to potential performance impact, data is limited to a 7 day max window.'
 DefaultTimeRange: 
  BeforeRange: 12h
  AfterRange: 12h
 TableQuery:
  ColumnsDefinitions:
  - Header: "Direction"
    OutputType: String
    SupportDeepLink: false
  - Header: "IPAddress"
    OutputType: String
    SupportDeepLink: true
  - Header: "RemoteIP"
    OutputType: String
    SupportDeepLink: true
  - Header: "ThreatType"
    OutputType: String
    SupportDeepLink: false
  QueriesDefinitions:
  # Inbound TI Hits
  - Filter:    "project IPAddress, RemoteIPAddress, InboundCount, ThreatType"
    Summarize: "summarize Inbound = sum(InboundCount) by IPAddress, RemoteIPAddress, ThreatType | where Inbound > 0"
    Project:   "project Direction = 'In', IPAddress, RemoteIP = RemoteIPAddress, ThreatType"
    LinkColumnsDefinitions:
    - ProjectedName: Direction
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: IPAddress
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: RemoteIP
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: ThreatType
      Query: "{{BaseQuery}} | {{RowFilter}}"
  # Outbound TI Hits
  - Filter:    "project IPAddress, RemoteIPAddress, OutboundCount, ThreatType"
    Summarize: "summarize Outbound = sum(OutboundCount) by IPAddress, RemoteIPAddress, ThreatType | where Outbound > 0"
    Project:   "project Direction = 'Out', IPAddress, RemoteIP = RemoteIPAddress, ThreatType"
    LinkColumnsDefinitions:
    - ProjectedName: Direction
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: IPAddress
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: RemoteIP
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: ThreatType
      Query: "{{BaseQuery}} | {{RowFilter}}"
  # Direction Unknown TI Hits
  - Filter:    "project IPAddress, RemoteIPAddress, UnknownDirection, ThreatType"
    Summarize: "summarize UnknownCount = sum(UnknownDirection) by IPAddress, RemoteIPAddress, ThreatType | where UnknownCount > 0"
    Project:   "project Direction = 'Unknown', IPAddress, RemoteIP = RemoteIPAddress, ThreatType"
    LinkColumnsDefinitions:
    - ProjectedName: Direction
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: IPAddress
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: RemoteIP
      Query: "{{BaseQuery}} | {{RowFilter}}"
    - ProjectedName: ThreatType
      Query: "{{BaseQuery}} | {{RowFilter}}"

 ChartQuery: 
  Title: "Connection Count to IP in TI"
  DataSets: 
   - Query: "summarize Count = max(InboundCount) by Time = bin(StartTime, 1d), RemoteIPAddress = strcat(RemoteIPAddress,' - In') | where isnotempty(Count) and Count > 0"
     XColumnName: Time
     YColumnName: Count
     LegendColumnName: RemoteIPAddress
   - Query: "summarize Count = max(OutboundCount) by Time = bin(StartTime, 1d), RemoteIPAddress = strcat(RemoteIPAddress,' - Out') | where isnotempty(Count) and Count > 0"
     XColumnName: Time
     YColumnName: Count
     LegendColumnName: RemoteIPAddress
   - Query: "summarize Count = max(UnknownDirection) by Time = bin(StartTime, 1d), RemoteIPAddress = strcat(RemoteIPAddress,' - UnknownDirection') | where isnotempty(Count) and Count > 0"
     XColumnName: Time
     YColumnName: Count
     LegendColumnName: RemoteIPAddress
  Type: BarChart

 AdditionalQuery: 
  Text: "See All connections"
  Query: "project StartTime, EndTime, IPAddress, RemoteIPAddress, InboundCount, OutboundCount, ReceivedBytes, SentBytes, UnknownDirection, Type, ThreatType, ThreatIntelMatch"