--- 
BaseQuery: |-
    let UserPrincipalName = strcat('{{Account_Name}}','@', '{{Account_UPNSuffix}}');
     let GetTerminatedWatchlist = _GetWatchlist('TerminatedEmployees') | where (['User AAD Object Id'] != '' and ['User AAD Object Id'] == '{{Account_AadUserId}}') or (['User Principal Name'] != '' and ['User Principal Name'] == UserPrincipalName) or (['User On-Prem Sid'] != '' and ['User On-Prem Sid'] == '{{Account_Sid}}') or (['User Identifier'] != '' and ['User Identifier'] == '{{Account_AadUserId}}') | extend ['Watchlist Insight'] = iff(now() > todatetime(['Termination date']), Text = 'User is terminated', iff (now() > todatetime(['Notification date']), Text='User has been noticied on termination', 'User has not been noticied on termination')) | extend  ['Additional Data'] = strcat('Notification Data:', ' ', ['Notification date'], ' ','Termination date:',' ',['Termination date']) | project ['Watchlist Insight'],['Additional Data'],Tags;
     let GetVIPWatchlist = _GetWatchlist('VIPUsers')  | where (['User AAD Object Id'] != '' and ['User AAD Object Id'] == '{{Account_AadUserId}}') or  (['User Principal Name'] != '' and ['User Principal Name'] == UserPrincipalName) or  (['User On-Prem Sid'] != '' and ['User On-Prem Sid'] == '{{Account_Sid}}') or  (['User Identifier'] != '' and ['User Identifier'] == '{{Account_AadUserId}}') | extend ['Watchlist Insight'] = 'User is tagged as VIP'| extend ['Additional Data'] = strcat('Last Update Time: ',LastUpdatedTimeUTC)| project ['Watchlist Insight'],['Additional Data'],Tags;
     let GetOwnedServiceAccountWatchlist = _GetWatchlist('ServiceAccounts') | where (['Owner User AAD Object Id'] != '' and ['Owner User AAD Object Id'] == '{{Account_AadUserId}}') or (['Owner User Principal Name'] != '' and ['Owner User Principal Name'] == UserPrincipalName) or (['Owner User On-Prem Sid'] != '' and ['Owner User On-Prem Sid'] == '{{Account_Sid}}') or (['Owner User Identifier'] != '' and ['Owner User Identifier'] == '{{Account_AadUserId}}') | extend ServicAccount = pack('Service Identifier', ['Service Identifier'],'Service On-Prem Sid',['Service On-Prem Sid'],'Service AAD Object Id',['Service AAD Object Id'],'Service UPN', ['Service Principal Name'], 'Tags', Tags) | summarize ServicAccounts = make_list(ServicAccount) by tostring(['Owner User AAD Object Id']), ['Owner User Principal Name'], ['Owner User On-Prem Sid'], tostring(['Owner User Identifier'])| mv-expand kind=array ServicAccounts| extend ['Watchlist Insight'] = 'User is an owner of a serivce account'| extend ['Additional Data'] = case( isnotempty(ServicAccounts.['Service UPN']), strcat('Service UPN: ', ServicAccounts.['Service UPN']),'')| extend ['Additional Data'] = case( isnotempty(ServicAccounts.['Service AAD Object Id']), strcat(['Additional Data'],', ','Service AAD Object Id: ', ServicAccounts.['Service AAD Object Id']),['Additional Data'])| extend ['Additional Data'] = case( isnotempty(ServicAccounts.['Service On-Prem Sid']), strcat(['Additional Data'],', ','Service On-Prem Sid: ', ServicAccounts.['Service On-Prem Sid']),['Additional Data'])| extend ['Additional Data'] = case( isnotempty(ServicAccounts.['Service Identifier']),strcat(['Additional Data'],', ','Service Identifier: ', ServicAccounts.['Service Identifier']),['Additional Data'])| project ['Watchlist Insight'],['Additional Data'],['Tags']=tostring(ServicAccounts.Tags);
     let GetServiceAccountWatchlist = _GetWatchlist('ServiceAccounts') | where (['Service AAD Object Id'] != '' and ['Service AAD Object Id'] == '{{Account_AadUserId}}') or (['Service Principal Name'] != '' and ['Service Principal Name'] == UserPrincipalName) or (['Service On-Prem Sid'] != '' and ['Service On-Prem Sid'] == '{{Account_Sid}}') or (['Service Identifier'] != '' and ['Service Identifier'] == '{{Account_AadUserId}}')| extend owner = pack('Owner User Id', ['Owner User Identifier'],'Owner User On-Prem Sid',['Owner User On-Prem Sid'],'Owner User AAD Object Id',['Owner User AAD Object Id'],'Owner UPN', ['Owner User Principal Name'], 'Tags', Tags) | summarize Owners = make_list(owner) by ['Service AAD Object Id'], ['Service Principal Name'], ['Service On-Prem Sid'], tostring(['Service Identifier'])| mv-expand kind=array Owners| extend ['Watchlist Insight'] = 'This account is a service account'| extend  ['Additional Data'] = case( isnotempty(Owners.['Owner UPN']), strcat('Owner UPN: ', Owners.['Owner UPN']),'')| extend  ['Additional Data'] = case( isnotempty(Owners.['Owner User AAD Object Id']), strcat(['Additional Data'],', ','Owner User AAD Object Id: ', Owners.['Owner User AAD Object Id']),['Additional Data'])| extend  ['Additional Data'] = case( isnotempty(Owners.['Owner User On-Prem Sid']), strcat(['Additional Data'],', ','Owner User On-Prem Sid: ', Owners.['Owner User On-Prem Sid']),['Additional Data'])| extend  ['Additional Data'] = case( isnotempty(Owners.['Owner User Id']),strcat(['Additional Data'],', ','Owner User Id: ', Owners.['Owner User Id']),['Additional Data'])| project ['Watchlist Insight'],['Additional Data'],['Tags']=tostring(Owners.Tags);
     let GetRelatedAccounts = _GetWatchlist('IdentityCorrelation') | where (['User AAD Object Id'] != '' and ['User AAD Object Id'] == '{{Account_AadUserId}}') or  (['User Principal Name'] != '' and ['User Principal Name'] == UserPrincipalName) or  (['User On-Prem Sid'] != '' and ['User On-Prem Sid'] == '{{Account_Sid}}') or  (['User Identifier'] != '' and ['User Identifier'] == '{{Account_AadUserId}}') | summarize RelatedAccounts = make_bag(pack('Email',Email,'Employee Id',['Employee Id'],'Tags',Tags,'Associated Privileged Account',['Associated Privileged Account'],'Associated Privileged Account ID',['Associated Privileged Account ID'])) by ['User Principal Name'],['User On-Prem Sid'],['User AAD Object Id'],['User Identifier']| extend Tags = RelatedAccounts.Tags| extend ['Watchlist Insight'] = 'Related Account Identifier' | mv-expand kind=array   RelatedAccounts | where RelatedAccounts[1] != ''| where RelatedAccounts[0] != 'Tags'| extend ['Additional Data']= strcat(RelatedAccounts[0],': ',RelatedAccounts[1]) | where ['Additional Data'] != '' | project ['Watchlist Insight'],['Additional Data'],tostring(Tags);
     let GetAccountOwner = _GetWatchlist('IdentityCorrelation') | where (['Associated Privileged Account ID'] != '' and ['Associated Privileged Account ID'] == '{{Account_AadUserId}}') or  (['Associated Privileged Account'] != '' and ['Associated Privileged Account'] == UserPrincipalName)| summarize RelatedAccounts = make_bag(pack('User Principal Name',['User Principal Name'],'User On-Prem Sid',['User On-Prem Sid'],'User AAD Object Id',['User AAD Object Id'],'User Identifier',['User Identifier'],'Email',Email,'Employee Id',['Employee Id'],'Tags',Tags)) by ['User Principal Name'],['User On-Prem Sid'],['User AAD Object Id'],['User Identifier'] | extend Tags = RelatedAccounts.Tags| extend ['Watchlist Insight'] = 'Owner Account Identifier' | mv-expand kind=array   RelatedAccounts | where RelatedAccounts[1] != ''| where RelatedAccounts[0] != 'Tags'| extend ['Additional Data']= strcat(RelatedAccounts[0],': ',RelatedAccounts[1]) | where ['Additional Data'] != '' | project ['Watchlist Insight'],['Additional Data'],tostring(Tags);
     GetAccountOwner | union GetOwnedServiceAccountWatchlist, GetVIPWatchlist, GetTerminatedWatchlist, GetServiceAccountWatchlist, GetRelatedAccounts
DataTypes: 
  - 
    DataType: "Watchlist templates"
EntitiesFilter: {}
Insights: 
  DefaultTimeRange: 
    AfterRange: 0d
    BeforeRange: 0d
  Description: |-
      ### Description
       ___ 
      This insight aggregates data from the watchlists templates (Terminated Employees, VIP Users, Service Accounts & Identity Correlation) regarding the account.
  DisplayName: "Watchlist Insights (Preview)"
  Id: 3834647e-ac3e-4fb4-a5f8-0dd50ba2b66a
  ReferenceTimeRange: 
    BeforeRange: 0d
  SingleValuesQuery: {}
  TableQuery: 
    ColumnsDefinitions: 
      - 
        Header: "Watchlist Insight"
        OutputType: string
        SupportDeepLink: false
      - 
        Header: "Additional Data"
        OutputType: string
        SupportDeepLink: false
      - 
        Header: Tags
        OutputType: string
        SupportDeepLink: false
    QueriesDefinitions: 
      - 
        Filter: ""
        Project: ""
        Summarize: ""
Provider: Sentinel
RequiredInputFieldsSets: 
  - 
    - Account_AadUserId
  - 
    - Account_Sid
  - 
    - Account_Name
    - Account_UPNSuffix
SchemaVersion: "1.0"
Type: KQL
