// Name: HostName with accociated Accounts
// Description: The hostname usage by a given Account 
//
// Entity: HostName
// Input: Host, Hostname
// Output: Account, IP Address
//
// QueryPeriod:  +-1d default, change as needed
//
// Data Source: #SigninLogs
//
// Tactics: #Discovery, #LateralMovement, #Collection
//
let GetAccountsFromHost = (suspiciousEventTime:datetime, v_Host:string){
let v_StartTime = suspiciousEventTime-1d;
let v_EndTime = suspiciousEventTime+1d;
SigninLogs
| where TimeGenerated between (v_StartTime .. v_EndTime)
| extend RemoteHost = tolower(tostring(DeviceDetail.displayName))
| where RemoteHost == tolower(v_Host)
| extend OS = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser), TrustType = tostring(DeviceDetail.trustType)
| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)
| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)
| summarize min(TimeGenerated), max(TimeGenerated), count() by RemoteHost , UserDisplayName, UserPrincipalName, AppDisplayName, ClientAppUsed, OS, Browser, IPAddress, ResultType, ResultDescription, Location, State, City, StatusCode, StatusDetails
//| top 10 by count_ asc nulls last 
| project StartTimeUtc = min_TimeGenerated, EndTimeUtc = max_TimeGenerated, RemoteHost, UserDisplayName, UserPrincipalName, AppDisplayName, ClientAppUsed, OS, Browser , IPAddress, ResultType, ResultDescription, Location, State, City, StatusCode, StatusDetails, count_ 
};
// change datetime value and <hostname> value below
GetAccountsFromHost(datetime('2019-02-05T10:36:07Z'), "<hostname>")