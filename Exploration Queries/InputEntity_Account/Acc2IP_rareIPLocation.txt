// Id: 2db8cac9-d2ce-4494-93bf-4678cd872ce4
// Name: IPs From Rare Locatoins Used By Account
// Description: IPs with rare location (less than 10 per cent of user's activity) during the range of +1w and -1w
// InputEntityType: Account
// InputFields: [Name, UPNSuffix, AadUserId]
// OutputEntityTypes: [IP]
// QueryPeriodBefore: 1w
// QueryPeriodAfter: 1w
// DataSource: SigninLogs
// Tactics: #CredentialAccess, #Collection

let IPsFromRareLocations = (v_Account_Name:string, v_Account_UPNSuffix:string, v_Account_AadUserId:string){
	let LocationPrevalence = 
		SigninLogs
		| parse UserPrincipalName with Account_Name "@" Account_UPNSuffix
		| project-rename Account_AadUserId = UserId 
		| where ((Account_Name != "" and Account_Name == v_Account_Name and Account_UPNSuffix == v_Account_UPNSuffix) or
				(Account_AadUserId != "" and Account_AadUserId == v_Account_AadUserId)
				)
		| summarize LocationCount = count() by Location
		| extend Joiner =1;
	let TotalActivity = 
		LocationPrevalence
		| summarize totalActivity = sum(LocationCount)
		| extend Joiner =1;
	let RareLocations = 
		TotalActivity
		| join LocationPrevalence on Joiner
		| extend likelyhood = 100*LocationCount/totalActivity
		| where likelyhood < 10
		| summarize makeset(Location);
	SigninLogs
		| parse UserPrincipalName with Account_Name "@" Account_UPNSuffix
		| project_rename Account_AadUserId = UserId 
		| where ((v_Account_Name != "" and Account_Name == v_Account_Name and Account_UPNSuffix == v_Account_UPNSuffix) or
				(v_Account_AadUserId != "" and Account_AadUserId == v_Account_AadUserId)
				)
		| where Location in (RareLocations)
		| summarize Count = count() by IPAddress, Location
		| top 10 by Count asc nulls last
		| project_rename IP_Address = IPAddress, IP_Location = Location
};
IPsFromRareLocations('<Name>', '<UPNSuffix>', '<AadUserId>')