// Id: 4c541df8-a680-4da5-96c9-74456927213f
// DisplayName: Hosts The Account Failed to Log-in to Most
// Description: Hosts The Account Failed to Log-in to Most during the range of -1d and +1d
// InputEntityType: Account
// InputFields: [Name, UPNSuffix, AadUserId]
// OutputEntityTypes: [Host]
// QueryPeriodBefore: 1d
// QueryPeriodAfter: 1d
// DataSource: SecurityEvent
// Tactics : #Persistence, #Discovery, #LateralMovement, #Collection

let MostFailedLogins = (v_Name:string, v_NTDomain:string, v_UPNSuffix:string){
	SecurityEvent
	| where Account contains v_Name // Basic sanity for performance
	// parse Account sections
	| extend acc =  split(Account,"@") 
		| extend usr = split(tostring(acc[0]),"\\")
		| extend Account_Name = usr[1], Account_NTDomain = usr[0], Account_UPNSuffix = acc[1]
	// filter by account
	| where (Account_Name != "" and tolower(Account_Name) == tolower(v_Name)) 
		and ((Account_NTDomain != "" and tolower(v_NTDomain) == tolower(Account_NTDomain) ) or 
			 (Account_UPNSuffix != "" and tolower(v_UPNSuffix) == tolower(Account_UPNSuffix))
			)
	| summarize Success = sum(EventID==EVENTID_SUCCESSFUL_LOGIN), Host_Aux_NumberOfFailedLoginsByAccount	= sum((EventID==EVENTID_FAILED_LOGIN and 
															tolower(SubStatus)==FailedLoginWithCorrectUser)) 
				by Computer, Account
	| where Success > 0
	| top EXPLR_LEN by Host_Aux_NumberOfFailedLoginsByAccount
	| parse Computer with Host_NTDomain "\\" *
	| extend Host_HostName = tostring(split(Computer,'.')[0]), 
			Host_DnsDomain = strcat_array(array_slice(split(Computer,'.'),1,256),'.')
	};
MostFailedLogins(<Name>, <NTDomain>,<UPNSuffix>)