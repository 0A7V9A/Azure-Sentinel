{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "7429044022652610499"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "biceptest"
    },
    "logicAppName": {
      "type": "string",
      "defaultValue": "IngestionCostAlert"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "teamsGroupId": {
      "type": "string",
      "defaultValue": "0b119fea-49f5-4cd7-b4b6-b7ca747eb391"
    },
    "teamsChannelId": {
      "type": "string",
      "defaultValue": "19:cdf3ecb0942e44efad002f1126358a8f@thread.tacv2"
    },
    "sendEmailTo": {
      "type": "string",
      "defaultValue": "email@domain.com"
    },
    "connections": {
      "type": "array",
      "defaultValue": [
        "azuremonitorlogs",
        "office365",
        "teams"
      ]
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[format('{0}-azuremonitorlogs', parameters('prefix'))]",
      "location": "[parameters('location')]",
      "kind": "V1",
      "properties": {
        "displayName": "[format('{0}-azuremonitorlogs', parameters('prefix'))]",
        "customParameterValues": {},
        "api": {
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, parameters('location'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[format('{0}-office365', parameters('prefix'))]",
      "location": "[parameters('location')]",
      "kind": "V1",
      "properties": {
        "displayName": "[format('{0}-office365', parameters('prefix'))]",
        "customParameterValues": {},
        "api": {
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/office365', subscription().subscriptionId, parameters('location'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[format('{0}-teams', parameters('prefix'))]",
      "location": "[parameters('location')]",
      "kind": "V1",
      "properties": {
        "displayName": "[format('{0}-teams', parameters('prefix'))]",
        "customParameterValues": {},
        "api": {
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/teams', subscription().subscriptionId, parameters('location'))]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[format('{0}-{1}', parameters('prefix'), parameters('logicAppName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 6,
                "timeZone": "Eastern Standard Time"
              },
              "evaluatedRecurrence": {
                "frequency": "Hour",
                "interval": 6,
                "timeZone": "Eastern Standard Time"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Days_in_a_month": {
              "runAfter": {
                "Price_Per_GB": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "days_in_month",
                    "type": "integer",
                    "value": 31
                  }
                ]
              }
            },
            "For_each": {
              "foreach": "@body('Run_query_and_list_results')?['value']",
              "actions": {
                "Condition": {
                  "actions": {
                    "Post_a_message_in_a_Teams_channel": {
                      "runAfter": {
                        "Send_an_email_": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "messageBody": "The daily cost budget of @{variables('max_per_day')} has been exceeded !",
                          "messageTitle": "Daily Budget Exceeded",
                          "recipient": {
                            "channelId": "[parameters('teamsChannelId')]"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams_1']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/flowbot/actions/notification/recipienttypes/channel",
                        "queries": {
                          "groupId": "[parameters('teamsGroupId')]"
                        }
                      }
                    },
                    "Send_an_email_": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p>The daily cost budget of @{variables('max_per_day')} has been exceeded !</p>",
                          "Importance": "High",
                          "Subject": "Daily Budget Exceeded",
                          "To": "[parameters('sendEmailTo')]"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365_1']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@items('For_each')?['AggregatedValue']",
                          "@variables('max_per_day')"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Run_query_and_list_results": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Monthly_budget": {
              "runAfter": {
                "Days_in_a_month": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "monthly_budget",
                    "type": "float",
                    "value": 10
                  }
                ]
              }
            },
            "Price_Per_GB": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "price_per_GB",
                    "type": "float",
                    "value": "4.3"
                  }
                ]
              }
            },
            "Run_query_and_list_results": {
              "runAfter": {
                "Threshold_per_day": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "let price_per_GB = @{variables('price_per_GB')}  ;\nlet how_many_days = @{variables('days_in_month')}   ;\nlet total_funding = @{variables('monthly_budget')} ;\nlet max_per_day = toreal(@{variables('monthly_budget')}) / toreal(@{variables('days_in_month')});\nUsage\n| where TimeGenerated > startofday(ago(1d))\n| where IsBillable == true\n| summarize AggregatedValue= sum(Quantity) * price_per_GB / 1024\n| where AggregatedValue > max_per_day",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/queryData",
                "queries": {
                  "resourcegroups": "CxE-inwafula",
                  "resourcename": "[resourceGroup().name]",
                  "resourcetype": "Log Analytics Workspace",
                  "subscriptions": "[subscription().subscriptionId]",
                  "timerange": "Set in query"
                }
              }
            },
            "Threshold_per_day": {
              "runAfter": {
                "Monthly_budget": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "max_per_day",
                    "type": "float",
                    "value": 5
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuremonitorlogs": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('{0}-azuremonitorlogs', parameters('prefix')))]",
                "connectionName": "azuremonitorlogs",
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, parameters('location'))]"
              },
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('{0}-office365', parameters('prefix')))]",
                "connectionName": "office365",
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/office365', subscription().subscriptionId, parameters('location'))]"
              },
              "teams": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('{0}-teams', parameters('prefix')))]",
                "connectionName": "teams",
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/teams', subscription().subscriptionId, parameters('location'))]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', format('{0}-azuremonitorlogs', parameters('prefix')))]",
        "[resourceId('Microsoft.Web/connections', format('{0}-office365', parameters('prefix')))]",
        "[resourceId('Microsoft.Web/connections', format('{0}-teams', parameters('prefix')))]"
      ]
    }
  ]
}