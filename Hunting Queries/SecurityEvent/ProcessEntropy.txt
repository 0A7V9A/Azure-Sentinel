// Name: Entropy for Processes for a given Host
// Description: Entropy calculation used to help identify Hosts where they have a high variety of processes(a high entropy process list on a given Host over time).
// This helps us identify rare processes on a given Host. Rare here means a process shows up on the Host relatively few times in the the last 7days.
// The Weight is calculated based on the Entropy, Process Count and Distinct Hosts with that Process. The lower the Weight/ProcessEntropy the, more interesting.
// The Weight calculation increases the Weight if the process executes more than once on the Host or has executed on more than 1 Hosts.
// In general, this should identify processes on a Host that are rare and rare for the environment.
//
// References: https://medium.com/udacity/shannon-entropy-information-gain-and-picking-balls-from-buckets-5810d35d54b4
// https://en.wiktionary.org/wiki/Shannon_entropy
//
// Id: 05208917-82de-46f7-a190-a65739a690f4
//
// DataSource: ##SecurityEvent
//
// Tactics: #Execution
//
// May need to reduce the number of days if the environment is very large.  Try 3-5 days, but less accuracy.
let end = startofday(now());
let start = end - 7d;
let Exclude = SecurityEvent
// Timeframe is set so that results do not change during the same day (UTC time)
| where TimeGenerated >= start and TimeGenerated <= end
| where EventID == 4688
| summarize count() by Process 
// Removing noisy processes for an environment, adjust as needed
| where count_ >= 100000;
let AllSecEvents = SecurityEvent
| where TimeGenerated >= start and TimeGenerated <= end
| where EventID == 4688
| where Process !in~ ("conhost.exe")
| project Computer, Process;
// Removing noisy process from full list
let Include = Exclude | join kind= rightanti (
AllSecEvents
) on Process;
// Identifying prevalence for a given process in the environment
let DCwPC = Include | summarize DistinctComputersWithProcessCount = dcount(Computer) by Process
| join kind=inner (
Include 
) on Process
| distinct Computer, Process, DistinctComputersWithProcessCount;
// Getting the Total process count on each host to use as the denominator in the entropy calc
let TPCoH = Include | summarize TotalProcessCountOnHost = count(Process) by Computer
| join kind=inner (
Include 
) on Computer
| distinct Computer, Process, TotalProcessCountOnHost
//Getting a decimal value for later computation
| extend TPCoHValue = TotalProcessCountOnHost*1.0;
// Need the count of each class in my bucket or also said as count of ProcName(Class) per Host(Bucket) for use in the entropy calc
let PCoH = Include | summarize ProcessCountOnHost = count(Process) by Computer, Process
| join kind=inner (
Include
) on Computer,Process
| distinct Computer, Process, ProcessCountOnHost
//Getting a decimal value for later computation
| extend PCoHValue = ProcessCountOnHost*1.0;
let Combined = DCwPC | join ( TPCoH ) on Computer, Process | join ( PCoH ) on Computer, Process; 
let Results = Combined
// Entropy calculation
| extend ProcessEntropy = -log2(PCoHValue/TPCoHValue)*(PCoHValue/TPCoHValue)
// Calculating Weight, see details in description
| extend Weight = toreal((ProcessEntropy*100000)*ProcessCountOnHost*DistinctComputersWithProcessCount)
| where Weight <= 100
| project Computer, Process, Weight , ProcessEntropy, TotalProcessCountOnHost, ProcessCountOnHost, DistinctComputersWithProcessCount;
// Join back full entry
Results | join kind= inner (
    SecurityEvent
    | where TimeGenerated >= start and TimeGenerated <= end
    | where EventID == 4688
    | where Process !in~ ("conhost.exe")
    | project TimeGenerated, EventID, Computer, SubjectUserSid, Account, AccountType, Process, NewProcessName, CommandLine, ParentProcessName
) on Computer, Process
| project TimeGenerated, EventID, Computer, SubjectUserSid, Account, Weight, ProcessEntropy, Process, NewProcessName, CommandLine, ParentProcessName, TotalProcessCountOnHost, ProcessCountOnHost, DistinctComputersWithProcessCount
| sort by Weight asc, ProcessEntropy asc, NewProcessName asc