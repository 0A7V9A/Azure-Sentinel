id: 36abe031-962d-482e-8e1e-a556ed99d5a3
name: Cscript script daily summary breakdown (Normalized Process)
description: |
  'breakdown of scripts running in the environment'
requiredDataConnectors: []
tactics:
  - Execution
query: |

  let ProcessCreationEvents=() {
  let processEvents=imProcessCreation
  | project EventTime=TimeGenerated, ComputerName=DvcHostName,AccountName=ActorUserName, AccountDomain=ActorUserDomain,
  FileName=tostring(split(TargetProcessFilePath, '\\')[-1]),  ProcessCommandLine = TargetProcessCommandLine, 
  InitiatingProcessFileName=ActingProcessFileName,InitiatingProcessCommandLine="",InitiatingProcessParentFileName="", EventVendor, EventProduct;
  processEvents;
  };
  // Daily summary of cscript activity - extracting script name and parameters from commandline:
  ProcessCreationEvents 
  | where FileName =~ "cscript.exe"
  // remove commandline switches
  | project EventTime, ComputerName, AccountName, removeSwitches = replace(@"/+[a-zA-Z0-9:]+", "", ProcessCommandLine), EventVendor, EventProduct
  // remove the leading cscript.exe process name 
  | project EventTime, ComputerName, AccountName, CommandLine = trim(@"[a-zA-Z0-9\\:""]*cscript(.exe)?("")?(\s)+", removeSwitches), EventVendor, EventProduct
  // extract the script name:
  | project EventTime, ComputerName, AccountName, 
  // handle case where script name is enclosed in " characters or is not enclosed in quotes 
  ScriptName= iff(CommandLine startswith @"""", 
  extract(@"([:\\a-zA-Z_\-\s0-9\.()]+)(""?)", 0, CommandLine), 
  extract(@"([:\\a-zA-Z_\-0-9\.()]+)(""?)", 0, CommandLine)), CommandLine , EventVendor, EventProduct
  | project EventTime, ComputerName, AccountName, ScriptName=trim(@"""", ScriptName) , ScriptNameLength=strlen(ScriptName), CommandLine , EventVendor, EventProduct
  // extract remainder of commandline as script parameters: 
  | project EventTime, ComputerName, AccountName, ScriptName, ScriptParams = iff(ScriptNameLength < strlen(CommandLine), substring(CommandLine, ScriptNameLength +1), ""), EventVendor, EventProduct
  | summarize min(EventTime), count() by ComputerName, AccountName, ScriptName, ScriptParams, EventVendor, EventProduct
  | order by count_ asc nulls last 
  | extend timestamp = min_EventTime, HostCustomEntity = ComputerName, AccountCustomEntity = AccountName×©