id: f18c4dfb-4fa6-4a9d-9bd3-f7569d1d685a
name: GitHub User Grants Access and Other User Grants Access
description: |
  'This hunting query identifies Accounts in GitHub that have granted access to another account which then grants access to yet another account that may be a sign of compromise.'
requiredDataConnectors:
  - connectorId: CustomConnector
    dataTypes:
      - GitHub_CL
tactics:
  - Persistence
relevantTechniques:
  - T1098
query: |

  GitHub_CL
  | extend TimeGenerated = node_createdAt_t
  | where node_userLogin_s != ""
  | where node_action_s == "org.invite_member" or node_action_s == "org.add_member" or node_action_s == "team.add_member" or node_action_s == "repo.add_member"
  | distinct node_userLogin_s, TimeGenerated, node_actorLogin_s
  | project-rename firstUserAdded = node_userLogin_s, firstEventTime = TimeGenerated, firstAdderUser = node_actorLogin_s
  | join kind= innerunique (
    GitHub_CL
    | extend TimeGenerated = node_createdAt_t
    | where node_userLogin_s != ""
    | where node_action_s == "org.invite_member" or node_action_s == "org.add_member" or node_action_s == "team.add_member" or node_action_s == "repo.add_member"
    | distinct node_userLogin_s, TimeGenerated, node_actorLogin_s
    | project-rename secondUserAdded = node_userLogin_s, secondEventTime = TimeGenerated, secondAdderUser = node_actorLogin_s
  ) on $right.secondAdderUser == $left.firstUserAdded
  | where secondEventTime between (firstEventTime .. (firstEventTime + 1h))
