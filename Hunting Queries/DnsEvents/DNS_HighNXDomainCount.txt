// Name: DNS high NXDomain count
// Id:543e1ec6-ee5e-4368-aaa6-405f0551ba5c
// 
// Description: Clients with a high NXDomain count could be indicative of a DGA (cycling through possible C2 domains
// where most C2s are not live). 
//
// DataSource: #DnsEvents
//
// Tactics: #C2, #Exfiltration
//
// NXDomain events, with some likely uninteresting records filtered out
//
let nxDomainDnsEvents = Dns
| where ResultCode == "3" 
| where QueryType in ("A", "AAAA")
| where ClientIP != "127.0.0.1"
| where Name !contains "/"
| where Name contains "."
| extend mytld = tostring(split(Name, '.')[-1])
| where mytld !in ("arris","ati","virtusa","unknowndomain","onion","corp","domain","local","localdomain","host","home","gateway","lan","services","hub","domain.name","WirelessAP","Digicom-ADSL","OpenDNS","dlinkrouter","Dlink","ASUS","device","router","Belkin","DHCP","Cisco");
//
let firstQT = (nxDomainDnsEvents
| where TimeGeneratedUtc between (ago(7d)..ago(2d))
| summarize domainCount = count(Name) by ClientIP, bin(TimeGeneratedUtc, 1d)
| project SearchList = (domainCount), ClientIP
| summarize percentiles(SearchList, 25) by ClientIP);
//
let thirdQT = (nxDomainDnsEvents
| where TimeGeneratedUtc between (ago(7d)..ago(2d))
| summarize domainCount = count(Name) by ClientIP, bin(TimeGeneratedUtc, 1d)
| project SearchList = (domainCount), ClientIP
| summarize percentiles(SearchList, 75) by ClientIP);
//
let threshold = (firstQT
| join thirdQT on ClientIP
| extend IPthreshold = percentile_SearchList_75 + (1.5*(percentile_SearchList_75 - percentile_SearchList_25))
| project ClientIP, IPthreshold);
//
let Tab1 = (
nxDomainDnsEvents
| where TimeGeneratedUtc > ago(1d)
| summarize TotalNXLookups=count(Name) by ClientIP
| sort by TotalNXLookups desc
| join ['threshold'] on ClientIP
| where TotalNXLookups > IPthreshold // Comment this line in order to view results filtered by Global Threshold only. 
| join kind = leftouter (nxDomainDnsEvents
    | where TimeGeneratedUtc > ago(1d)
    | extend SearchList = iff((strlen(Name) - indexof(Name, tostring(split(Name, ".")[-2])) ) >= 7, strcat(tostring(split(Name, ".")[-2]), ".", tostring(split(Name, ".")[-1])) , strcat(tostring(split(Name, ".")[-3]), ".", tostring(split(Name, ".")[-2]), ".", tostring(split(Name, ".")[-1])))
    | summarize domainCount=count() by SearchList, ClientIP
    | sort by domainCount desc
    | project SearchList = strcat(SearchList," (",tostring(domainCount),")"), ClientIP
    ) on ClientIP
| summarize SLDs_TotalLookups = makelist(SearchList) by ClientIP, TotalNXLookups, IPthreshold
| sort by TotalNXLookups desc);
//
let thirdQ = toscalar (nxDomainDnsEvents
| where TimeGeneratedUtc > ago(1d)
| summarize count(Name) by ClientIP
| summarize event_count = count() by count_Name 
| sort by count_Name asc
| summarize percentilesw(count_Name, event_count, 75)); 
//
let firstQ = toscalar(nxDomainDnsEvents
| where TimeGeneratedUtc > ago(1d)
| summarize count(Name) by ClientIP
| summarize event_count = count() by count_Name
| sort by count_Name asc
| summarize perc2 = percentilesw(count_Name, event_count, 25));
//
let GlobalThreshold = toscalar(thirdQ + (1.5*exp(3)*(thirdQ - firstQ)));
//
let Tab2 = (
nxDomainDnsEvents
| where TimeGeneratedUtc > ago(1d)
| summarize TotalNXLookups = count(Name) by ClientIP
| sort by TotalNXLookups desc
| where TotalNXLookups > GlobalThreshold // Comment this line in order to view results filtered by IPThreshold only. 
| join kind = leftouter (nxDomainDnsEvents
    | where TimeGeneratedUtc > ago(1d)
    | extend truncatedDomain = iff((strlen(Name) - indexof(Name, tostring(split(Name, ".")[-2])) ) >= 7, strcat(tostring(split(Name, ".")[-2]), ".", tostring(split(Name, ".")[-1])) , strcat(tostring(split(Name, ".")[-3]), ".", tostring(split(Name, ".")[-2]), ".", tostring(split(Name, ".")[-1])))
    | summarize domainCount=count() by truncatedDomain, ClientIP
    | sort by domainCount desc
    | project truncatedDomain= strcat(truncatedDomain," (",tostring(domainCount),")"), ClientIP
    ) on ClientIP
| summarize SLDs_TotalLookups = makelist(truncatedDomain), UniqueSLDsCount=count(truncatedDomain) by ClientIP, TotalNXLookups, GlobalThreshold
| sort by TotalNXLookups desc);
Tab1
| join Tab2 on ClientIP
| project ClientIP, TotalNXLookups, IPthreshold, GlobalThreshold, SLDs_TotalLookups, UniqueSLDsCount

