id: dc5adcc9-70ab-4fba-8690-f57767e8ca02
name: SQL Alert Correlation with CommonSecurityLogs and AuditLogs
description: |
  'This query combines different SQL alerts with CommonSecurityLogs and AuditLogs helping analysts /investigate any possible SQL related attacks faster
   thus reducing MTTR'
requiredDataConnectors:
  - connectorId: PaloAltoNetworks
    dataTypes:
      - CommonSecurityLog
  - connectorId: AzureActiveDirectory
    dataTypes:
      - AuditLogs
tactics:
  - InitialAccess
  - Discovery
  - CommandAndControl
  - Impact
relevantTechniques:
  - T1190
  - TA0005
  - T1078
query: |

    let TimeFrame = ago(05min);
    SecurityAlert
    | where AlertName has_any ('Potential SQL Injection', 'Traffic detected from IP addresses recommended for blocking', 'A possible vulnerability to SQL Injection')
    | extend TimeGenerated1 = TimeGenerated
    | extend EntitiesDynamicArray = parse_json(Entities)
    | mv-expand EntitiesDynamicArray
    // Parsing relevant entity column extract hostname and IP address
    | extend EntityType = tostring(parse_json(EntitiesDynamicArray).Type), EntityAddress = tostring(EntitiesDynamicArray.Address)
    | extend IpAddress = iif(EntityType == 'ip', EntityAddress, '')
    | join kind=inner (
    CommonSecurityLog 
    | where TimeGenerated > ago(10min)
    | where DeviceVendor == "Palo Alto Networks" and Activity == "TRAFFIC" and DeviceAction != "deny"
    | where SourcePort in ('1433', '1434', '3306', '4333', '5432')
    | summarize count() by DeviceName, SourceIP, DestinationIP, DestinationPort, Protocol, SourcePort
    //| extend TimeGenerated2 = TimeGenerated
    )
    on $left.IpAddress == $right.SourceIP
    | join kind=inner (
    AuditLogs
    | where LoggedByService =~ "Core Directory"
    | where Category =~ "RoleManagement"
    | mv-expand TargetResources
    | extend modProps = parse_json(TargetResources).modifiedProperties
    | mv-expand bagexpansion=array modProps
    | evaluate bag_unpack(modProps)
    | extend initByApp = parse_json(InitiatedBy).app, initByUser = parse_json(InitiatedBy).user
    | extend AppId = initByApp.appId,
        ServicePrincipalId = initByApp.servicePrincipalId,
        ServicePrincipalName = initByApp.servicePrincipalName,
        UserId = initByUser.id,
        IpAddress = tostring(initByUser.ipAddress),
        UserRoles = initByUser.roles,
        UserPrincipalName = initByUser.userPrincipalName
    | project TimeGenerated, AADOperationType, Category, OperationName, AADTenantId, AppId, ServicePrincipalId, ServicePrincipalName, UserId, IpAddress, UserRoles, UserPrincipalName
    )
    on IpAddress
    | summarize count () by TimeGenerated, tostring(UserId), tostring(UserRoles), IpAddress, SourcePort, DestinationPort,AccountCustomEntity =tostring(UserPrincipalName)
     
entityMappings:
 - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IpAddress