id: b7918a0a-c6fe-4b6d-9111-b0b0c477f1a8
name: Login attempts using Legacy Auth
description: |
  'This query over Azure AD sign-in activity highlights use of legacy authentication protocol in the
  environment. Because conditional access policies are not evaluated when legacy authentication is used,
  legacy authentication can be used to circumvent all Azure Conditional Access policies.'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
  - connectorId: BehaviorAnalytics
    dataTypes:
      - BehaviorAnalytics
  - connectorId: IdentityInfo
    dataTypes:
      - IdentityInfo
tactics:
  - InitialAccess
  - Persistence
relevantTechniques:
  - T1078
  - T1098
query: |

  let starttime = todatetime('{{StartTimeISO}}');
  let endtime = todatetime('{{EndTimeISO}}');
  let lookback = totimespan((endtime-starttime)*7);
  let legacy_auth_protocols = dynamic(["Authenticated SMTP", "AutoDiscover", "Exchange ActiveSync", "Exchange Online PowerShell", "Exchange Web Services", "IMAP4", "MAPI Over HTTP", "Outlook Anywhere (RPC over HTTP)", "Outlook Service", "POP3", "Reporting Web Services", "Other clients"]);
  let legacyAuthentications =
  SigninLogs
  | where TimeGenerated >= ago(lookback)
  // success logons only
  | where ResultType == 0
  | extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,"Unknown" ,ClientAppUsed)
  | extend isLegacyAuth = iff(ClientAppUsed in (legacy_auth_protocols), "Yes", "No")
  | where isLegacyAuth=="Yes";
  legacyAuthentications
  | where TimeGenerated >= starttime
  // Don't alert for accounts already seen using legacy auth in prior 7 days
  | join kind=leftanti (
     legacyAuthentications
     | where TimeGenerated between(ago(lookback)..starttime)
  ) on UserPrincipalName, ClientAppUsed, AppDisplayName, IPAddress
  | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
  | extend LocationString= strcat(tostring(LocationDetails["countryOrRegion"]), "/",
  tostring(LocationDetails["state"]), "/", tostring(LocationDetails["city"]))
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AttemptCount = count()
  by UserPrincipalName, ClientAppUsed, AppDisplayName, IPAddress, isLegacyAuth, tostring(OS), tostring(Browser), LocationString
  | sort by AttemptCount desc nulls last
  | extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress
  | join kind=leftouter (
      IdentityInfo
      | summarize LatestReportTime = arg_max(TimeGenerated, *) by AccountUPN
      | extend BlastRadiusInt = iif(BlastRadius == "High", 1, 0)
      | project AccountUPN, Tags, JobTitle, GroupMembership, AssignedRoles, UserType, IsAccountEnabled, BlastRadiusInt
      | summarize
          Tags = make_set(Tags),
          GroupMembership = make_set(GroupMembership),
          AssignedRoles = make_set(AssignedRoles),
          BlastRadiusInt = sum(BlastRadiusInt),
          UserType = make_set(UserType),
          UserAccountControl = make_set(UserType)
      by AccountUPN
      | extend UserPrincipalName=tolower(AccountUPN)
  ) on UserPrincipalName
  | join kind=leftouter (
      BehaviorAnalytics
      | where ActivityType in ("FailedLogOn", "LogOn")
      | where isnotempty(SourceIPAddress)
      | project UsersInsights, DevicesInsights, ActivityInsights, InvestigationPriority, SourceIPAddress
      | project-rename IPAddress = SourceIPAddress
      | summarize
          UsersInsights = make_set(UsersInsights, 1000),
          DevicesInsights = make_set(DevicesInsights, 1000),
          IPInvestigationPriority = sum(InvestigationPriority)
      by IPAddress
  ) on IPAddress
  | extend UEBARiskScore = BlastRadiusInt + IPInvestigationPriority
  | where InvestigationPriority > 10 //Can be adjusted based on volume of results
  | sort by UEBARiskScore desc

entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity
version: 2.0.0
metadata:
    source:
        kind: Community
    author:
        name: Shain
    support:
        tier: Community
    categories:
        domains: [ "Security - Other", "Identity" ]