Parser:
  Title: Web Session ASIM parser for Fortinet FortiGate
  Version: '0.1'
  LastUpdated: Jul 03, 2023
Product:
  Name: Fortinet FortiGate
Normalization:
  Schema: WebSession
  Version: '0.2.6'
References:
- Title: ASIM Web Session Schema
  Link: https://aka.ms/ASimWebSessionDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
- Title: web log fields
  Link: https://docs.fortinet.com/document/fortigate/7.4.0/fortios-log-message-reference/400992  
- Title: Fortinet FortiGate CEF setup
  Link: https://community.fortinet.com/t5/FortiGate/Technical-Tip-Integrate-FortiGate-with-Microsoft-Sentinel/ta-p/199709
- Title: Fortinet FortiGate syslogd documentation
  Link: https://docs.fortinet.com/document/fortigate/7.2.0/cli-reference/450620/config-log-syslogd-setting
- Title: Fortinet FortiGate extended logging for user agent, http method and x-forwarded-for
  Link: https://docs.fortinet.com/document/fortigate/7.4.0/fortios-log-message-reference/496081/enabling-extended-logging
Description: |
  This ASIM parser supports filtering and normalizing Fortinet FortiGate logs produced by the Microsoft Sentinel Fortinet connector to the ASIM Web Session normalized schema.
ParserName: ASimWebSessionFortinetFortiGate
EquivalentBuiltInParser: _ASim_WebSession_FortinetFortiGate
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let EventLookup=datatable(DeviceAction:string,DvcAction:string,EventResult:string)
  [
    "passthrough","Allow","Success"
    , "blocked","Deny","Failure"
  ];
  // -- See https://docs.fortinet.com/document/fortigate/7.2.4/fortios-log-message-reference/671442/cef-priority-levels
  let SeverityLookup = datatable (EventOriginalSeverity:string, EventSeverity:string)
  [
    "1", "Informational", // Debug
    "2", "Informational", // Information
    "3", "Informational", // Notification
    "4", "Low", // Warning
    "5", "Low", // Error
    "6", "High", // Critical
    "7", "Medium", // Alert
    "8", "High" // Emergency
  ];
  let parser=(disabled:bool=false){
    CommonSecurityLog
    | where not(disabled)
    | where DeviceVendor == "Fortinet" 
        and DeviceProduct startswith "FortiGate"
        and (Activity == "webfilter utm passthrough"
            or Activity == "webfilter utm blocked")
    | extend EventResultDetails = "NA"
    | lookup EventLookup on DeviceAction 
    | project Activity,AdditionalExtensions,DestinationIP,DestinationPort,DeviceAction,DeviceInboundInterface,DeviceOutboundInterface,DeviceProduct,DeviceVersion,LogSeverity,Protocol,ReceivedBytes,SentBytes,SourceIP,SourcePort,TimeGenerated, DeviceExternalID, Type, _ItemId, Computer, EventResult, EventResultDetails, DvcAction, RequestURL, RequestContext
    | project-rename 
      Url = RequestURL
      ,UrlCategory = RequestContext
      ,DstBytes = ReceivedBytes
      , DstInterfaceName = DeviceOutboundInterface
      , DstIpAddr = DestinationIP
      , DstPortNumber = DestinationPort
      , Dvc = Computer
      , EventMessage = Activity
      , EventOriginalSeverity = LogSeverity
      , EventProduct = DeviceProduct
      , EventProductVersion = DeviceVersion
      , SrcBytes = SentBytes
      , SrcInterfaceName = DeviceInboundInterface
      , SrcIpAddr = SourceIP
      , SrcPortNumber = SourcePort
      , DvcId = DeviceExternalID
      , EventUid = _ItemId
    | invoke _ASIM_ResolveNetworkProtocol ('Protocol')
    | project-rename DvcOriginalAction = DeviceAction
    | parse-kv AdditionalExtensions as (
            httpmethod:string,
            agent:string
        ) with (pair_delimiter=';', kv_delimiter='=', quote='"')
    | project-rename
        HttpRequestMethod       = httpmethod,
        HttpUserAgent           = agent
    | parse-kv AdditionalExtensions as (
            referralurl:string,
            FortinetFortiGatestart:datetime,
            FortinetFortiGatesrcintfrole:string,
            FortinetFortiGatedstintfrole:string,
            FortinetFortiGateexternalID:string,
            FortinetFortiGatepolicyid:int,
            FortinetFortiGatedstcountry:string,
            FortinetFortiGatesrccountry:string,
            FortinetFortiGatecrscore:string,
            FortinetFortiGateduration:int,
            FortinetFortiGatesentpkt:long,
            FortinetFortiGatercvdpkt:long
        ) with (pair_delimiter=';', kv_delimiter='=')
    | parse AdditionalExtensions with * "x-forwarded-for=" HttpRequestXff:string ";" *
    | project-rename
        HttpReferrer            = referralurl,
        EventStartTime          = FortinetFortiGatestart,
        SrcZone                 = FortinetFortiGatesrcintfrole,
        DstZone                 = FortinetFortiGatedstintfrole,
        NetworkSessionId        = FortinetFortiGateexternalID,
        RuleNumber              = FortinetFortiGatepolicyid,
        NetworkDuration         = FortinetFortiGateduration,
        DstGeoCountry           = FortinetFortiGatedstcountry,
        SrcGeoCountry           = FortinetFortiGatesrccountry,
        ThreatOriginalRiskLevel = FortinetFortiGatecrscore,
        SrcPackets              = FortinetFortiGatesentpkt,
        DstPackets              = FortinetFortiGatercvdpkt
    | extend EventCount = int(1)
      , EventSchema = "WebSession"
      , EventSchemaVersion = "0.2.6"
      , EventType = "HTTPsession"
      , EventVendor = "Fortinet"
      , DvcIdType = "Other"
      , NetworkBytes = DstBytes + SrcBytes
      , EventEndTime = TimeGenerated
      , EventStartTime = coalesce(EventStartTime, TimeGenerated)
      , NetworkProtocolVersion = case(DstIpAddr contains ".", "IPv4"
          , DstIpAddr contains ":", "IPv6"
          , "")
      , NetworkPackets = DstPackets + SrcPackets
      , UserAgent = HttpUserAgent
    | lookup SeverityLookup on EventOriginalSeverity
    | extend 
        Src = SrcIpAddr,
        Dst = DstIpAddr,
        SessionId = NetworkSessionId,
        IpAddr = SrcIpAddr,
        Duration = NetworkDuration,
        Rule = tostring(RuleNumber)
    | project-away Protocol, AdditionalExtensions, NetworkProtocolNumber
  };
  parser (disabled=disabled)