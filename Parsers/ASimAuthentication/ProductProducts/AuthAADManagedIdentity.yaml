Parser:
  Title: Azure active directory managed identity authentication
  Version: '0.0'
  LastUpdated: June 3, 2021
Product:
  Name: Azure active directory managed identity signin logs
Normalization:
  Schema: Authentication
  Version: '1.0.0'
References:
- Title: Using functions
  Link: https://docs.microsoft.com/azure/azure-monitor/log-query/function
- Title: Authentication schema documentation
  Link: https://aka.ms/AzSentinelAuthenticationDoc
Description: |
      This Query Parser maps Azure Active Directory Non Interactive sign in logs (AADNonInteractiveUserSignInLogs) to the Azure Sentinel Information Model authenticaion schema.
ParserName: vimAuthAADManagedIdentitySignInLogs
ParserQuery: |
  let FailedReason=datatable(ResultType:string, EventResultDetails:string)[
    '0', 'Success',
    '53003', 'Logon violates policy',
    '50034', 'No such user or password',
    '50059', 'No such user or password',
    '50053', 'User locked',
    '50055', 'Password expired',
    '50056', 'Incorrect password',
    '50057', 'User disabled',
    '50058', 'Logon violates policy',
    '50011', 'Logon violates policy', // Application
    '50064', 'No such user or password',
    '50076', 'Logon violates policy',
    '50079', 'Logon violates policy',
    '50105', 'Logon violates policy',
    '50126', 'No such user or password',
    '50126', 'No such user or password',
    '50132', 'Password expired',
    '50133', 'Password expired',
    '50144', 'Password expired',
    '50173', 'Password expired', // Token expired
    '80012', 'Logon violates policy',
    '51004', 'No such user or password',
    '50072', 'Logon violates policy',
    '50005', 'Logon violates policy',
    '50020', 'Logon violates policy',
    '50074', 'Logon violates policy', // Failed MFA
    '70008', 'Password expired',
    '700016',  'No such user or password', // Application was not found in the directory. This can happen if the application has not been insta
    '500011', 'No such user or password' // The resource principal was not found in the tenant. This can happen if the application has not been installed by t
    ];
  let AADMIAuthentication=(){
    AADManagedIdentitySignInLogs
    | extend
        EventVendor = 'Microsoft Azure'
        , EventProduct = 'AAD Managed Identity'
        , EventCount=1
        , EventSchemaVersion='1.0.0'
        , EventResult = iff (ResultType ==0, 'Success', 'Failure')
        //, EventOriginalResultDetails = ResultType
        , EventOriginalResultDetails = coalesce(ResultDescription, ResultType)
        , EventStartTime = TimeGenerated
        , EventEndTime= TimeGenerated
        , EventType= 'Logon'
        , SrcGeoCity=tostring(todynamic(LocationDetails).city)
        , SrcGeoCountry=tostring(todynamic(LocationDetails).countryOrRegion)
        , SrcGeoLocationLatitude=tostring(todynamic(LocationDetails).geoCoordinates.latitude)
        , SrcGeoLocationLongitude=tostring(todynamic(LocationDetails).geoCoordinates.longitude)
        , TargetResourceId = ResourceIdentity // Overriding the tables ResourceId which is not an interesting value
        , TargetResourceName=ResourceDisplayName
        , TargetUserType='ServicePrincipal'
      , TargetUsername=ServicePrincipalName
      , TargetUserId=ServicePrincipalId
      , TargetUsernameType='Name'
      , TargetUserIdType='AADID'
    | project-rename
        EventOriginalUid =Id
        , TargetSessionId=CorrelationId
        , SessionDuration= DurationMs
        , SrcIpAddr=IPAddress
        , TargetAppId = AppId
    | project-reorder
        TimeGenerated
        ,EventProduct
        , EventOriginalUid
        , EventResult
        //, EventOriginalResultDetails 
        , EventOriginalResultDetails
        , EventStartTime
        , EventEndTime
        , TargetSessionId
        , SessionDuration
        , SrcGeoCountry
        , SrcGeoCity
        , TargetAppId
        | lookup FailedReason on ResultType
        // Aliases
        | extend 
          Username=TargetUsername
        , AuthTarget=ResourceIdentity
        , Dvc=EventVendor
        };
  AADMIAuthentication