{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string"
        },
        "location": {
          "type": "string"
        }
    },
    "resources": [
      {
        "type": "Microsoft.OperationalInsights/workspaces",
        "apiVersion": "2017-03-15-preview",
        "name": "[parameters('workspaceName')]",
        "location": "[parameters('location')]",
        "resources": [
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "vimMSNonInteractive",
              "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
              ],
              "properties": {
                "etag": "*",
                "displayName": "Vendor Information Model Authentication - Microsoft AAD Non Interactive Sign In",
                "category": "Security",
                "FunctionAlias": "vimMSNonInteractive",
                "query": "let AADNIAuthentication=(){\n  AADNonInteractiveUserSignInLogs\n  | extend\n      EventVendor = 'Microsoft'\n      , EventProduct = 'Azure Active Directory'\n      , EventResult = iff (ResultType ==0, 'Success', 'Failure')\n      , EventResultDetails= ResultType\n      , EventOriginalResultDetails = ResultDescription\n      , EventStartTime = TimeGenerated\n      , EventEndTime= TimeGenerated\n      , EventType= 'Logon'\n      , SrcHostId=tostring(todynamic(DeviceDetail).deviceId)\n      , SrcHostname=tostring(todynamic(DeviceDetail).displayName)\n      , SrcHostOs=tostring(todynamic(DeviceDetail).operatingSystem)\n      , HttpUserAgent=UserAgent\n      , SrcBrowser= tostring(todynamic(DeviceDetail).browser)\n      , SrcGeoCity=tostring(todynamic(LocationDetails).city)\n      , SrcGeoCountry=tostring(todynamic(LocationDetails).countryOrRegion)\n      , SrcGeoLocationLatitude=tostring(todynamic(LocationDetails).geoCoordinates.latitude)\n      , SrcGeoLocationLongitude=tostring(todynamic(LocationDetails).geoCoordinates.longitude)\n      , TargetResourceId = ResourceIdentity // Overriding the tables ResourceId which is not an interesting value\n      , TargetUserType='NonInteractive'\n      , TargetUserNameType='Upn'\n      , TargetUserIdType='AADID'\n      , TargetResourceName=ResourceDisplayName\n        , AuthTarget=ResourceIdentity\n  | project-rename\n      EventOriginalUid =Id\n      , AuthMethod = AuthenticationRequirement\n      , TargetSessionId=CorrelationId\n      , SessionDuration= DurationMs\n      , TargetUserId = UserId\n      , TargetUserName=UserPrincipalName\n      , SrcIpAddr=IPAddress\n    , AppName=AppDisplayName\n  | project-reorder\n      TimeGenerated\n      ,EventProduct\n      , EventOriginalUid\n      , EventResult\n      , EventResultDetails\n      , EventOriginalResultDetails\n      , EventStartTime\n      , EventEndTime\n      , AuthMethod \n      , TargetSessionId\n      , SessionDuration\n      , TargetUserId\n      , TargetUserName\n      , SrcHostId\n      , SrcHostname\n      , SrcHostOs\n      , HttpUserAgent \n      , SrcBrowser\n      , SrcGeoCountry\n      , SrcGeoCity\n      , AppId\n      , AppName};\nAADNIAuthentication\n",
                "version": 1
            }
          }
        ]
      }
    ]
  }