Parser:
  Title: Microsoft Windows Logon 
  Version: '0.0'
  LastUpdated: June 3, 2021
Product:
  Name: Microsoft Windows
Normalization:
  Schema: Authentication
  Version: '1.0.0'
References:
- Title: Using functions
  Link: https://docs.microsoft.com
- Title: Tech Community
  Link: https://techcommunity.microsoft.com
Description: |
  TODO
ParserName: vimMSWindows
ParserQuery: |
  let LogonEvents=dynamic([4624,4625]);
  let LogoffEvents=dynamic([4634,4647]);
  let LogonTypes=datatable(LogonType:int, EventSubType:string)[
    2, 'Interactive',
    3, 'Network',
    4, 'Batch',
    5, 'Service',
    7, 'Unlock',
    8, 'NetworkCleartext',
    9, 'NewCredentials',
    10, 'RemoteInteractive',
    11, 'CachedInteractive'
  ];
  let LogonStatus=datatable 
    (EventResultDetails:string,EventOriginalResultDetails:string)[
    "0x80090325", "SEC_E_UNTRUSTED_ROOT",
    "0xc0000008", "STATUS_INVALID_HANDLE",
    "0xc0000022", "STATUS_ACCESS_DENIED",
    "0xc0000064", "STATUS_NO_SUCH_USER",
    "0xc000006a", "STATUS_WRONG_PASSWORD",
    "0xc000006d", "STATUS_LOGON_FAILURE",
    "0xc000006e", "STATUS_ACCOUNT_RESTRICTION",
    "0xc000006f", "STATUS_INVALID_LOGON_HOURS",
    "0xc0000070", "STATUS_INVALID_WORKSTATION",
    "0xc0000071", "STATUS_PASSWORD_EXPIRED",
    "0xc0000072", "STATUS_ACCOUNT_DISABLED",
    "0xc0000073", "STATUS_NONE_MAPPED",
    "0xc00000dc", "STATUS_INVALID_SERVER_STATE",
    "0xc0000133", "STATUS_TIME_DIFFERENCE_AT_DC",
    "0xc000018d", "STATUS_TRUSTED_RELATIONSHIP_FAILURE",
    "0xc0000193", "STATUS_ACCOUNT_EXPIRED",
    "0xc0000380", "STATUS_SMARTCARD_WRONG_PIN",
    "0xc0000381", "STATUS_SMARTCARD_CARD_BLOCKED",
    "0xc0000382", "STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED",
    "0xc0000383", "STATUS_SMARTCARD_NO_CARD",
    "0xc0000384", "STATUS_SMARTCARD_NO_KEY_CONTAINER",
    "0xc0000385", "STATUS_SMARTCARD_NO_CERTIFICATE",
    "0xc0000386", "STATUS_SMARTCARD_NO_KEYSET",
    "0xc0000387", "STATUS_SMARTCARD_IO_ERROR",
    "0xc0000388", "STATUS_DOWNGRADE_DETECTED",
    "0xc0000389", "STATUS_SMARTCARD_CERT_REVOKED",
    "0x80090302", "SEC_E_UNSUPPORTED_FUNCTION",
    "0x80090308", "SEC_E_INVALID_TOKEN",
    "0x8009030e", "SEC_E_NO_CREDENTIALS",
    "0xc0000008", "STATUS_INVALID_HANDLE",
    "0xc0000017", "STATUS_NO_MEMORY",
    "0xc0000022", "STATUS_ACCESS_DENIED",
    "0xc0000034", "STATUS_OBJECT_NAME_NOT_FOUND",
    "0xc000005e", "STATUS_NO_LOGON_SERVERS",
    "0xc000006a", "STATUS_WRONG_PASSWORD",
    "0xc000006d", "STATUS_LOGON_FAILURE",
    "0xc000006e", "STATUS_ACCOUNT_RESTRICTION",
    "0xc0000073", "STATUS_NONE_MAPPED",
    "0xc00000fe", "STATUS_NO_SUCH_PACKAGE",
    "0xc000009a", "STATUS_INSUFFICIENT_RESOURCES",
    "0xc00000dc", "STATUS_INVALID_SERVER_STATE",
    "0xc0000106", "STATUS_NAME_TOO_LONG",
    "0xc000010b", "STATUS_INVALID_LOGON_TYPE",
    "0xc000015b", "STATUS_LOGON_TYPE_NOT_GRANTED",
    "0xc000018b", "STATUS_NO_TRUST_SAM_ACCOUNT",
    "0xc0000224", "STATUS_PASSWORD_MUST_CHANGE",
    "0xc0000234", "STATUS_ACCOUNT_LOCKED_OUT",
    "0xc00002ee", "STATUS_UNFINISHED_CONTEXT_DELETED"];
  let WinLogon=(){
    SecurityEvent 
    | where EventID in (LogonEvents) or 
            EventID in (LogoffEvents)
    // ************************** Mandataory
    | project-rename 
       EventProduct = EventSourceName
       , EventMessage = Activity
       , ActorSessionId=SubjectLogonId
       , TargetSessionId=TargetLogonId
       , ActorUserId=SubjectUserSid
       , TargetUserId =TargetUserSid
       , TargetUserType=AccountType
       , SrcDvcHostname = WorkstationName
       , TargetHostId = SourceComputerId
       , TargetHostname = Computer
       , EventOriginUid = EventOriginId
       , AuthenticationProtocol=AuthenticationPackageName
       , SrcIpAddr=IpAddress
       , SrcPortNumber=IpPort
    | extend EventOriginId=EventID | project-away EventID // Cannot use rename to overwrite an existing column
    | extend EventResult = iff(EventOriginId == 4625, "Failure", "Success")
      , ActorUserIdType='SID'
      , TargetUserIdType='SID'
      , EventVendor="Microsoft"  
      , EventStartTime =TimeGenerated
      , EventEndTime=TimeGenerated
      , EventType=iff(EventOriginId in (LogoffEvents), "Logoff", "Logon")
    , ActorUserName = iff (SubjectDomainName == '-', SubjectUserName, SubjectAccount)
    , ActorUserNameType= iff(SubjectDomainName == '-','Simple', 'Windows' )
    , TargetUserName = iff (TargetDomainName == '-', trim(@'\\',TargetUserName), trim(@'\\',TargetAccount))
    , TargetUserNameType=iff (TargetDomainName == '-', 'Simple', 'Windows')
    , SrcDvcOs = "Windows"
    , ActingProcessId=ProcessId
    , ActingProcessName=ProcessName   
    // , ActingProcessName=Process // Only process Name
    , EventResultDetails= iff(SubStatus=='0x0',Status,SubStatus)
    | lookup LogonStatus on EventResultDetails
    | lookup LogonTypes  on LogonType
    | project-reorder 
        TimeGenerated
        , EventProduct
        , EventMessage
        , EventResult
        , EventResultDetails
        , EventStartTime
        , EventEndTime
        , EventType
        , EventSubType
        , ActorSessionId
        , TargetSessionId
        , ActorUserId
        , ActorUserName
        , TargetUserId
        , TargetUserName
        , TargetUserType
        , SrcDvcOs
        , ActingProcessId
        , ActingProcessName
        , TargetHostId
        , TargetHostname
        , EventOriginalResultDetails
        , AuthenticationProtocol
        , ImpersonationLevel
    /// ***** alias 
    | extend
        UserId=TargetUserId
        , UserName=TargetUserName
        , HostId=TargetHostId
        , Hostname=TargetHostname
    };
  WinLogon