Parser:
  Title: ASIM Sysmon/Event Process Termination Parser
  Version: '0.1.0'
  LastUpdated: May 30, 2021
Product:
  Name: Windows Events Sysmon
Normalization:
  Schema: ProcessEvents
  Version: '0.1.0'
References:
- Title: ASIM Process Schema
  Link: https://aka.ms/AzSentinelProcessEventsDoc
- Title: ASIM
  Link: https:/aka.ms/AzSentinelNormalization
Description: ASIM process termination parser for Sysmon/Event  (event number 5)
ParserName: vimProcessTermianteMicrosftSysmon
ParserQuery: | 
            let ParsedProcessEvent=(){
                // Create the raw table from the raw XML file structure
                Event 
                | where Source == "Microsoft-Windows-Sysmon" and EventID==5
                | parse EventData with * '<Data Name="RuleName">'RuleName'</Data>'
                         '<Data Name="UtcTime">'UtcTime'</Data>'
                         '<Data Name="ProcessGuid">{'ProcessGuid'}</Data>'
                         '<Data Name="ProcessId">'ProcessId'</Data>'
                         '<Data Name="Image">'Image'</Data>' *
                | extend 
                        EventType = "ProcessTerminated",
                        EventStartTime = todatetime(TimeGenerated),
                        EventEndTime = todatetime(TimeGenerated),
                        EventCount = int(1),
                        EventVendor = "Microsoft",
                        EventSchemaVersion = "0.1.0",
                        EventProduct = "Event",
                        DvcOs = "Windows",
                        ActorUsernameType = "Windows"
                | project-rename
                        DvcHostName = Computer,
                        ActorUsername = UserName,

                        TargetProcessName = Image,
                        TargetProcessId = ProcessId,
                        TargetProcessGuid = ProcessGuid,
                        EventOriginalId=EventID

                 //***** Aliases ******
                | extend
                       User = ActorUsername,
                       Process = TargetProcessName,
                       Dvc = DvcHostName
                }; ParsedProcessEvent
