{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "workspaceName": {
          "type": "string"
      },
      "location": {
        "type": "string"
      }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimProcessEventsMicrosft365D",
            "dependsOn": [
              "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Azure Information Model Process - Defender for EndPoints process events",
              "category": "Security",
              "FunctionAlias": "vimProcessEventsMicrosft365D",
              "query":"let ProcessEvents_M365D=() { DeviceProcessEvents | extend EventOriginalUid = tostring(ReportId), EventCount = int(1), EventProduct = 'M365 Defender for Endpoint', EventVendor = 'Microsoft', EventSchemaVersion = '0.1.0', EventStartTime = todatetime(TimeGenerated), EventEndTime = todatetime(TimeGenerated), EventType = 'ProcessCreated', DvcHostname = DeviceName, DvcId = DeviceId, DvcOs = 'Windows', Dvc = DeviceName | extend ActorUsername = iff (InitiatingProcessAccountDomain == '', InitiatingProcessAccountName, strcat(InitiatingProcessAccountDomain, '\\', InitiatingProcessAccountName)), TargetUsername = iff (AccountDomain == '', AccountName, strcat(AccountDomain, '\\', AccountName)), TargetUsernameType = iff(AccountDomain == '','Simple', 'Windows'), ActorUsernameType = iff(InitiatingProcessAccountDomain == '','Simple', 'Windows'), ActorUserIdType = 'SID', TargetUserIdType = 'SID', ActorSessionId = tostring(InitiatingProcessLogonId), TargetUserSessionId = tostring(LogonId) | project-rename ActorUserId = InitiatingProcessAccountSid, ActorUserAadId = InitiatingProcessAccountObjectId, ActorUserUpn = InitiatingProcessAccountUpn, TargetUserId = AccountSid, TargetUserAadId = AccountObjectId, TargetUserUpn = AccountUpn | extend TargetProcessId = tostring(ProcessId), ActingProcessId = tostring(InitiatingProcessId), ParentProcessId = tostring(InitiatingProcessParentId) | project-rename ParentProcessName = InitiatingProcessParentFileName, ParentProcessCreationTime = InitiatingProcessParentCreationTime, TargetProcessName = FileName, TargetProcessCommandLine = ProcessCommandLine, TargetProcessMD5 = MD5, TargetProcessSHA1 = SHA1, TargetProcessSHA256 = SHA256, TargetProcessIntegrityLevel = ProcessIntegrityLevel, TargetProcessTokenElevation = ProcessTokenElevation, TargetProcessCreationTime = ProcessCreationTime, ActingProcessName = InitiatingProcessFileName, ActingProcessCommandLine = InitiatingProcessCommandLine, ActingProcessMD5 = InitiatingProcessMD5, ActingProcessSHA1 = InitiatingProcessSHA1, ActingProcessSHA256 = InitiatingProcessSHA256, ActingProcessIntegrityLevel = InitiatingProcessIntegrityLevel, ActingProcessTokenElevation = InitiatingProcessTokenElevation, ActingProcessCreationTime = InitiatingProcessCreationTime | extend User = coalesce(TargetUsername, ActorUsername), CommandLine = TargetProcessCommandLine, Process = TargetProcessName }; ProcessEvents_M365D",
               "version": 1
          }
        }
      ]
    }
  ]
}