Parser:
  Title: ASIM Sysmon/Event Registry Creation Event Parser
  Version: '0.1'
  LastUpdated: June 23, 2021
Product:
  Name: Microsoft Windows Events Sysmon
Normalization:
  Schema: RegistryEvent
  Version: '0.1.0'
References:
- Title: ASIM Registry Schema
  Link: https://aka.ms/AzSentinelRegistryEventsDoc
- Title: ASIM
  Link: https:/aka.ms/AzSentinelNormalization
  Description: ASIM Sysmon/Event Registry Creation Event Parser (event number 1)
ParserName: vimRegistryCreateMicrosoftSysmon
ParserQuery: | 
    let RegistryAction = datatable (EventType:string, NewEventType:string)
    [
      "CreateKey", "RegistryKeyCreated",
      "DeleteKey".	"RegistryKeyDeleted",
      "DeleteValue",  "RegistryValueDeleted", 
      "SetValue",	"RegistryValueSet",
      "RenameKey",	"RegistryKeyRenamed"
    ];     
    let ParsedRegistryEvent=(){
        // Create the raw table from the raw XML file structure
        Event 
        | where Source == "Microsoft-Windows-Sysmon" and EventID in (12, 13, 14)
        | parse EventData with * '<Data Name="RuleName">'RuleName // parsing the XML using the original fields name - for readibliy 
                            '</Data><Data Name="EventType">'EventType
                            '</Data><Data Name="UtcTime">'UtcTime
                            '</Data><Data Name="ProcessGuid">{'ProcessGuid
                            '}</Data><Data Name="ProcessId">'ProcessId
                            '</Data><Data Name="Image">'Image
                            '</Data><Data Name="TargetObject">'TargetObject
                            '</Data>' EventDataRemainder 
        | parse EventDataRemainder with * '">' Parameter '</Data>' *
          // End of XML parse
        | extend 
                    EventType = "RegistryCreated",
                    EventStartTime = todatetime(TimeGenerated),
                    EventEndTime = todatetime(TimeGenerated),
                    EventCount = int(1),
                    EventVendor = "Microsoft",
                    EventSchemaVersion = "0.1.0",
                    EventProduct = "Event",
                    DvcOs = "Windows",
                    TargetUserSessionId = toint(LogonId)  ,           
                    TargetUsernameType = "Windows",
                    ActorUsernameType = "Windows",
                    TargetUsername = User,
                    TargetProcessCommandLine = CommandLine

        | lookup RegistryAction on EventType 
        | project-rename EventOriginalSubType = EventType
        | proejct-rename EventType = NewEventType

        | project-rename 
                    EventMessage = RenderedDescription,
                    DvcHostName = Computer,

                    EventOriginalType = EventID,
                    TargetUserSessionGuid = LogonGuid, 

                    TargetProcessId = ProcessId,
                    TargetProcessGuid = ProcessGuid,
                    TargetProcessName = Image,
                    TargetProcessIntegrityLevel = IntegrityLevel,
                    
                    TargetProcessCompany = Company,
                    TargetProcessFileDescription = Description,
                    TargetProcessFileVersion = FileVersion,
                    TargetProcessFileProduct = Product,
                    
                    ActingProcessId = ParentProcessId,
                    ActingProcessGuid = ParentProcessGuid,                          
                    ActingProcessCommandLine = ParentCommandLine,
                    ActingProcessName = ParentImage,

                    ActorUsername = UserName

        | extend // aliases
                    // User = TargetUserName,
                    Process = TargetProcessName,
                    Dvc = DvcHostName,
                    Hash = coalesce(TargetProcessSHA256, TargetProcessSHA1, TargetProcessMD5) // which appears first - will be aliases to "Hash"
        }; ParsedRegistryEvent