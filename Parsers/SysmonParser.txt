// KQL Sysmon Event Parser
// Date: May 8, 2019
// Notes:
// 1. This parser works again the current version of events from Sysmon, it may need updates if Sysmon is updated.
// 2. technique_id and technique_name will only be parsed/available if deployed via a custom XML
//
let timeframe = ago(1d);
let EventData = Event
| where TimeGenerated >= timeframe
| where Source == "Microsoft-Windows-Sysmon"
| extend RenderedDescription = tostring(split(RenderedDescription, ":")[0]) //All
| project TimeGenerated, Source, EventID, Computer, UserName, EventData, RenderedDescription
| extend EvData = parse_xml(EventData)
| extend p = EvData.DataItem.EventData.Data
| project-away EventData, EvData
;
let SysmonEvent1=() {
let processEvents = EventData
| where EventID == 1
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], Image = p.[4].["#text"],
FileVersion = p.[5].["#text"], Description = p.[6].["#text"], Product = p.[7].["#text"], Company = p.[8].["#text"],
CommandLine = p.[9].["#text"], CurrentDirectory = p.[10].["#text"], User = p.[11].["#text"], LogonGuid = p.[12].["#text"],
LogonId = p.[13].["#text"], TerminalSessionId = p.[14].["#text"], IntegrityLevel = p.[15].["#text"], Hashes = p.[16].["#text"], 
ParentProcessGuid = p.[17].["#text"], ParentProcessId = p.[18].["#text"], ParentImage = p.[19].["#text"], ParentCommandLine = p.[20].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| parse Hashes with * 'SHA1=' SHA1 ',' * 'MD5=' MD5 ',' * 'SHA256=' SHA256 ',' * 'IMPHASH=' IMPHASH 
| project-away p, RuleName, Hashes
;
processEvents;
};
let SysmonEvent2=() {
let processEvents = EventData
| where EventID == 2
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], Image = p.[4].["#text"],
TargetFilename = p.[5].["#text"], CreationUtcTime = p.[6].["#text"], PreviousCreationUtcTime = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| parse Hashes with * 'SHA1=' SHA1 ',' * 'MD5=' MD5 ',' * 'SHA256=' SHA256 ',' * 'IMPHASH=' IMPHASH 
| project-away p, RuleName, Hashes
;
processEvents;
};
let SysmonEvent3=() {
let processEvents = EventData
| where EventID == 3
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], Image = p.[4].["#text"],
User = p.[5].["#text"], Protocol = p.[6].["#text"], Initiated = p.[7].["#text"], SourceIsIpv6 = p.[8].["#text"], SourceIp = p.[9].["#text"], 
SourceHostname = p.[10].["#text"], SourcePort = p.[11].["#text"], SourcePortName = p.[12].["#text"], DestinationIsIpv6 = p.[13].["#text"], 
DestinationIp = p.[14].["#text"], DestinationHostname = p.[15].["#text"], DestinationPort = p.[16].["#text"], DestinationPortName = p.[17].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| parse Hashes with * 'SHA1=' SHA1 ',' * 'MD5=' MD5 ',' * 'SHA256=' SHA256 ',' * 'IMPHASH=' IMPHASH 
| project-away p, RuleName, Hashes
;
processEvents;
};
let SysmonEvent4=() {
let processEvents = EventData
| where EventID == 4
| extend UtcTime = p.[0].["#text"], State = p.[1].["#text"], Schema = p.[2].["#text"], SchemaVersion = p.[3].["#text"]
| project-away p
;
processEvents;
};
let SysmonEvent5=() {
let processEvents = EventData
| where EventID == 5
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], Image = p.[4].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent6=() {
let processEvents = EventData
| where EventID == 6
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ImageLoaded = p.[2].["#text"], Hashes = p.[3].["#text"],
Signed = p.[4].["#text"], Signature = p.[5].["#text"], SignatureStatus = p.[6].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName
| parse Hashes with * 'SHA1=' SHA1 ',' * 'MD5=' MD5 ',' * 'SHA256=' SHA256 ',' * 'IMPHASH=' IMPHASH
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent7=() {
let processEvents = EventData
| where EventID == 7
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], Image = p.[4].["#text"], 
ImageLoaded = p.[5].["#text"], FileVersion = p.[6].["#text"], Description = p.[7].["#text"], Product = p.[8].["#text"], Company = p.[9].["#text"], 
Hashes = p.[10].["#text"], Signed = p.[11].["#text"], Signature = p.[12].["#text"], SignatureStatus = p.[13].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName
| parse Hashes with * 'SHA1=' SHA1 ',' * 'MD5=' MD5 ',' * 'SHA256=' SHA256 ',' * 'IMPHASH=' IMPHASH
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent8=() {
let processEvents = EventData
| where EventID == 8
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], SourceProcessGuid = p.[2].["#text"], SourceProcessId = p.[3].["#text"],
SourceImage = p.[4].["#text"], TargetProcessGuid = p.[5].["#text"], TargetProcessId = p.[6].["#text"], TargetImage = p.[7].["#text"],
NewThreadId = p.[8].["#text"], StartAddress = p.[9].["#text"], StartModule = p.[10].["#text"], StartFunction = p.[11].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent9=() {
let processEvents = EventData
| where EventID == 9
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], Image = p.[4].["#text"], Device = p.[5].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent10=() {
let processEvents = EventData
| where EventID == 10
| extend RuleName = p.[0].["#text"],UtcTime = p.[1].["#text"], SourceProcessGUID = p.[2].["#text"], SourceProcessId = p.[3].["#text"], 
SourceThreadId = p.[4].["#text"],SourceImage = p.[5].["#text"], TargetProcessGUID = p.[6].["#text"], TargetProcessId = p.[7].["#text"], 
TargetImage = p.[8].["#text"],GrantedAccess = p.[9].["#text"], CallTrace = p.[10].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent11=() {
let processEvents = EventData
| where EventID == 11
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"],
Image = p.[4].["#text"], TargetFilename = p.[5].["#text"], CreationUtcTime = p.[6].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent12=() {
let processEvents = EventData
| where EventID == 12
| extend RuleName = p.[0].["#text"], EventType = p.[1].["#text"], UtcTime = p.[2].["#text"], ProcessGuid = p.[3].["#text"],
ProcessId = p.[4].["#text"],Image = p.[5].["#text"],TargetObject = p.[6].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent13=() {
let processEvents = EventData
| where EventID == 13
| extend RuleName = p.[0].["#text"], EventType = p.[1].["#text"], UtcTime = p.[2].["#text"], ProcessGuid = p.[3].["#text"],
ProcessId = p.[4].["#text"],Image = p.[5].["#text"],TargetObject = p.[6].["#text"],Details = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent14=() {
let processEvents = EventData
| where EventID == 14
| extend RuleName = p.[0].["#text"], EventType = p.[1].["#text"], UtcTime = p.[2].["#text"], ProcessGuid = p.[3].["#text"],
ProcessId = p.[4].["#text"],Image = p.[5].["#text"],TargetObject = p.[6].["#text"],NewName = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent15=() {
let processEvents = EventData
| where EventID == 15
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"],
Image = p.[4].["#text"],TargetFileName = p.[5].["#text"],CreationUtcTime = p.[6].["#text"],Hash = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent16=() {
let processEvents = EventData
| where EventID == 16
| extend UtcTime = p.[0].["#text"], Configuration = p.[1].["#text"], ConfigurationFileHash = p.[2].["#text"]
| project-away p
;
processEvents;
};
let SysmonEvent17=() {
let processEvents = EventData
| where EventID == 17
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], PipeName = p.[4].["#text"], 
Image = p.[5].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent18=() {
let processEvents = EventData
| where EventID == 18
| extend RuleName = p.[0].["#text"], UtcTime = p.[1].["#text"], ProcessGuid = p.[2].["#text"], ProcessId = p.[3].["#text"], PipeName = p.[4].["#text"], 
Image = p.[5].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent19=() {
let processEvents = EventData
| where EventID == 19
| extend RuleName = p.[0].["#text"], EventType = p.[1].["#text"], UtcTime = p.[2].["#text"], Operation = p.[3].["#text"],
User = p.[4].["#text"],EventNamespace = p.[5].["#text"],Name = p.[6].["#text"],Query = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent20=() {
let processEvents = EventData
| where EventID == 20
| extend RuleName = p.[0].["#text"], EventType = p.[1].["#text"], UtcTime = p.[2].["#text"], Operation = p.[3].["#text"],
User = p.[4].["#text"],Name = p.[5].["#text"],Type = p.[6].["#text"],Destination = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
let SysmonEvent21=() {
let processEvents = EventData
| where EventID == 21
| extend RuleName = p.[0].["#text"], EventType = p.[1].["#text"], UtcTime = p.[2].["#text"], Operation = p.[3].["#text"],
User = p.[4].["#text"],Consumer = p.[5].["#text"],Type = p.[6].["#text"],Filter = p.[7].["#text"]
| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName 
| project-away p, RuleName 
;
processEvents;
};
(union isfuzzy=true
SysmonEvent1,SysmonEvent2,SysmonEvent3,SysmonEvent4,SysmonEvent5,SysmonEvent6,
SysmonEvent7,SysmonEvent8,SysmonEvent9,SysmonEvent10,SysmonEvent11,SysmonEvent12,
SysmonEvent13,SysmonEvent14,SysmonEvent15,SysmonEvent15,SysmonEvent17,SysmonEvent18,
SysmonEvent19,SysmonEvent20,SysmonEvent21)
