{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "TME - tme@vetcra.ai",
    "comments": "Solution template for VectraCloud"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "VectraCloud",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "vectracloud.vectracloud_sentinel",
    "_solutionId": "[variables('solutionId')]",
    "email": "tme@vetcra.ai",
    "_email": "[variables('email')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "uiConfigId1": "VectraCloud",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "VectraCloud",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "parserVersion1": "1.0.0",
    "parserContentId1": "VectraAccountDetection-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "VectraAccountDetection",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]",
    "parserVersion2": "1.0.0",
    "parserContentId2": "VectraAudits-Parser",
    "_parserContentId2": "[variables('parserContentId2')]",
    "parserName2": "VectraAudits",
    "_parserName2": "[concat(parameters('workspace'),'/',variables('parserName2'))]",
    "parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
    "_parserId2": "[variables('parserId2')]",
    "parserTemplateSpecName2": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId2')))]",
    "parserVersion3": "1.0.0",
    "parserContentId3": "VectraEntityScoring-Parser",
    "_parserContentId3": "[variables('parserContentId3')]",
    "parserName3": "VectraEntityScoring",
    "_parserName3": "[concat(parameters('workspace'),'/',variables('parserName3'))]",
    "parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
    "_parserId3": "[variables('parserId3')]",
    "parserTemplateSpecName3": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId3')))]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "VectraCloud",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "VectraCloud data connector with template",
        "displayName": "VectraCloud template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "VectraCloud data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Vectra Cloud (using Azure Function)",
                  "publisher": "Vectra",
                  "descriptionMarkdown": "The [Vectra](https://www.vectra.ai/) connector gives the capability to ingest Vectra Account Detection, Audits and Entity Scoring data into Microsoft Sentinel through the Vectra REST API. Refer to the API documentation: `https://support.vectra.ai/s/article/KB-VS-1629` for more information.",
                  "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. Follow the steps to use this Kusto functions alias **VectraAccountDetection** in queries and workbooks [Follow steps to get this VectraAccountDetection Kusto functions>](https://aka.ms/sentinel-VectraAccountDetection-parser), **VectraAudits** in queries and workbooks [Follow steps to get this VectraAudits Kusto functions>](https://aka.ms/sentinel-VectraAudits-parser) and **VectraEntityScoring** in queries and workbooks [Follow steps to get this VectraEntityScoring Kusto functions>](https://aka.ms/sentinel-VectraEntityScoring-parser).",
                  "graphQueries": [
                    {
                      "metricName": "Total Account Detection data received",
                      "legend": "Account_Detection_Data_CL",
                      "baseQuery": "Account_Detection_Data_CL"
                    },
                    {
                      "metricName": "Total Audits data received",
                      "legend": "Audits_Data_CL",
                      "baseQuery": "Audits_Data_CL"
                    },
                    {
                      "metricName": "Total Entity Scoring data received",
                      "legend": "Entity_Scoring_Data_CL",
                      "baseQuery": "Entity_Scoring_Data_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Vectra Account Detection Events - All Account Detection Events.",
                      "query": "Account_Detection_Data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Vectra Audits Events - All Audits Events.",
                      "query": "Audits_Data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Vectra Entity Scoring Events - All Entity Scoring Events.",
                      "query": "Entity_Scoring_Data_CL\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Account_Detection_Data_CL",
                      "lastDataReceivedQuery": "Account_Detection_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Audits_Data_CL",
                      "lastDataReceivedQuery": "Audits_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Entity_Scoring_Data_CL",
                      "lastDataReceivedQuery": "Entity_Scoring_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Account_Detection_Data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Audits_Data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Entity_Scoring_Data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "REST API Credentials/permissions",
                        "description": "**Vectra Client ID** and **Client Secret** is required.  See the documentation to learn more about API on the `https://support.vectra.ai/s/article/KB-VS-1629`."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the Vectra API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. Follow these steps for [Account Detection Parser](https://aka.ms/sentinel-VectraAccountDetection-parser), [Audits Parser](https://aka.ms/sentinel-VectraAudits-parser) and [Entity Scoring Parser](https://aka.ms/sentinel-VectraEntityScoring-parser) to create the Kusto functions alias, **VectraAccountDetection**, **VectraAudits** and **VectraEntityScoring**"
                    },
                    {
                      "description": "**STEP 1 - Configuration steps for the Vectra API Credentials**\n\n Follow these instructions to create a Vectra Client ID and Client Secret.\n 1. Log into your Vectra portal\n 2. Navigate to Manage -> API Clients\n 3. From the API Clients page, select 'Add API Client' to create a new client.\n 4. Add Client Name, select Role and click on Generate Credentials to obtain your client credentials. \n 5. Be sure to record your Client ID and Secret Key for safekeeping. You will need these two pieces of information to obtain an access token from the Vectra API. An access token is required to make requests to all of the Vectra API endpoints."
                    },
                    {
                      "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Vectra data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.., as well as the Vectra API Authorization Credentials",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the Vectra connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-VectraCloud-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tVectra Base URL (https://<vectra-portal-url>) \n\t\tVectra Client ID \n\t\tVectra Client Secret \n\t\tStartTime (in MM/DD/YYYY HH:MM:SS Format) \n\t\tAudits Table Name \n\t\tAccount Detection Table Name \n\t\tEntity Scoring Table Name \n\t\tLog Level (Default: INFO) \n\t\tAccount Detection Schedule \n\t\tAudits Schedule \n\t\tEntity Scoring Schedule \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the Vectra data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-VectraCloudAPI-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. VECTRAXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                    },
                    {
                      "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tVectra Base URL (https://<vectra-portal-url>) \n\t\tVectra Client ID \n\t\tVectra Client Secret \n\t\tStartTime (in MM/DD/YYYY HH:MM:SS Format) \n\t\tAudits Table Name \n\t\tAccount Detection Table Name \n\t\tEntity Scoring Table Name \n\t\tLog Level (Default: INFO) \n\t\tAccount Detection Schedule \n\t\tAudits Schedule \n\t\tEntity Scoring Schedule \n\t\tlogAnalyticsUri (optional) \n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "VectraCloud",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "TME",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra Support",
                  "email": "support@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "VectraCloud",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "TME",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra Support",
          "email": "support@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Vectra Cloud (using Azure Function)",
          "publisher": "Vectra",
          "descriptionMarkdown": "The [Vectra](https://www.vectra.ai/) connector gives the capability to ingest Vectra Account Detection, Audits and Entity Scoring data into Microsoft Sentinel through the Vectra REST API. Refer to the API documentation: `https://support.vectra.ai/s/article/KB-VS-1629` for more information.",
          "graphQueries": [
            {
              "metricName": "Total Account Detection data received",
              "legend": "Account_Detection_Data_CL",
              "baseQuery": "Account_Detection_Data_CL"
            },
            {
              "metricName": "Total Audits data received",
              "legend": "Audits_Data_CL",
              "baseQuery": "Audits_Data_CL"
            },
            {
              "metricName": "Total Entity Scoring data received",
              "legend": "Entity_Scoring_Data_CL",
              "baseQuery": "Entity_Scoring_Data_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "Account_Detection_Data_CL",
              "lastDataReceivedQuery": "Account_Detection_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Audits_Data_CL",
              "lastDataReceivedQuery": "Audits_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Entity_Scoring_Data_CL",
              "lastDataReceivedQuery": "Entity_Scoring_Data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Account_Detection_Data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Audits_Data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Entity_Scoring_Data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Vectra Account Detection Events - All Account Detection Events.",
              "query": "Account_Detection_Data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Vectra Audits Events - All Audits Events.",
              "query": "Audits_Data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Vectra Entity Scoring Events - All Entity Scoring Events.",
              "query": "Entity_Scoring_Data_CL\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "REST API Credentials/permissions",
                "description": "**Vectra Client ID** and **Client Secret** is required.  See the documentation to learn more about API on the `https://support.vectra.ai/s/article/KB-VS-1629`."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the Vectra API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. Follow these steps for [Account Detection Parser](https://aka.ms/sentinel-VectraAccountDetection-parser), [Audits Parser](https://aka.ms/sentinel-VectraAudits-parser) and [Entity Scoring Parser](https://aka.ms/sentinel-VectraEntityScoring-parser) to create the Kusto functions alias, **VectraAccountDetection**, **VectraAudits** and **VectraEntityScoring**"
            },
            {
              "description": "**STEP 1 - Configuration steps for the Vectra API Credentials**\n\n Follow these instructions to create a Vectra Client ID and Client Secret.\n 1. Log into your Vectra portal\n 2. Navigate to Manage -> API Clients\n 3. From the API Clients page, select 'Add API Client' to create a new client.\n 4. Add Client Name, select Role and click on Generate Credentials to obtain your client credentials. \n 5. Be sure to record your Client ID and Secret Key for safekeeping. You will need these two pieces of information to obtain an access token from the Vectra API. An access token is required to make requests to all of the Vectra API endpoints."
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Vectra data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.., as well as the Vectra API Authorization Credentials",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the Vectra connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-VectraCloud-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tVectra Base URL (https://<vectra-portal-url>) \n\t\tVectra Client ID \n\t\tVectra Client Secret \n\t\tStartTime (in MM/DD/YYYY HH:MM:SS Format) \n\t\tAudits Table Name \n\t\tAccount Detection Table Name \n\t\tEntity Scoring Table Name \n\t\tLog Level (Default: INFO) \n\t\tAccount Detection Schedule \n\t\tAudits Schedule \n\t\tEntity Scoring Schedule \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Vectra data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-VectraCloudAPI-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. VECTRAXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tVectra Base URL (https://<vectra-portal-url>) \n\t\tVectra Client ID \n\t\tVectra Client Secret \n\t\tStartTime (in MM/DD/YYYY HH:MM:SS Format) \n\t\tAudits Table Name \n\t\tAccount Detection Table Name \n\t\tEntity Scoring Table Name \n\t\tLog Level (Default: INFO) \n\t\tAccount Detection Schedule \n\t\tAudits Schedule \n\t\tEntity Scoring Schedule \n\t\tlogAnalyticsUri (optional) \n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. Follow the steps to use this Kusto functions alias **VectraAccountDetection** in queries and workbooks [Follow steps to get this VectraAccountDetection Kusto functions>](https://aka.ms/sentinel-VectraAccountDetection-parser), **VectraAudits** in queries and workbooks [Follow steps to get this VectraAudits Kusto functions>](https://aka.ms/sentinel-VectraAudits-parser) and **VectraEntityScoring** in queries and workbooks [Follow steps to get this VectraEntityScoring Kusto functions>](https://aka.ms/sentinel-VectraEntityScoring-parser)."
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "VectraAccountDetection Data Parser with template",
        "displayName": "VectraAccountDetection Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "VectraAccountDetection Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "VectraAccountDetection",
                "category": "Samples",
                "functionAlias": "VectraAccountDetection",
                "query": "\nlet VectraAccountDetection_view  = view () { \r\n    Account_Detection_Data_CL\r\n    | extend \r\n                EventVendor=\"VectraAccountDetection\",\r\n                EventProduct=\"VectraAccountDetection\",\r\n                ID = column_ifexists('id_d', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                Threat = column_ifexists('threat_d', ''),\r\n                Certainty = column_ifexists('certainty_d', ''),\r\n                Triaged = column_ifexists('triaged_b', ''),\r\n                [\"Detection Type\"] = column_ifexists('detection_type_s', ''),\r\n                [\"D Type Vname\"] = column_ifexists('d_type_vname_s', ''),\r\n                [\"Detection ID\"] = column_ifexists('detection_id_d', ''),\r\n                [\"Detection href\"] = column_ifexists('detection_href_s', ''),\r\n                [\"Account ID\"] = column_ifexists('account_id_d', ''),\r\n                [\"Account href\"] = column_ifexists('account_href_s', ''),\r\n                href = column_ifexists('href_s', ''),\r\n                [\"Account UID\"] = column_ifexists('account_uid_s', ''),\r\n                [\"Src Account\"] = column_ifexists('src_account_s', ''),\r\n                [\"Event Timestamp\"] = column_ifexists('event_timestamp_t', ''),\r\n                IP = column_ifexists('ip_s', ''),\r\n                Details = column_ifexists('detail_s', ''),\r\n                Severity = column_ifexists('Severity', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                ID,\r\n                Category,\r\n                Threat,\r\n                Certainty,\r\n                Triaged,\r\n                [\"Detection Type\"],\r\n                [\"D Type Vname\"],\r\n                [\"Detection ID\"],\r\n                [\"Detection href\"],\r\n                [\"Account ID\"],\r\n                [\"Account href\"],\r\n                href,\r\n                [\"Account UID\"],\r\n                [\"Src Account\"],\r\n                [\"Event Timestamp\"],\r\n                IP,\r\n                Details,\r\n                Severity\r\n};\r\nVectraAccountDetection_view",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "VectraAccountDetection"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "VectraCloud",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "TME",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra Support",
                  "email": "support@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "VectraAccountDetection",
        "category": "Samples",
        "functionAlias": "VectraAccountDetection",
        "query": "\nlet VectraAccountDetection_view  = view () { \r\n    Account_Detection_Data_CL\r\n    | extend \r\n                EventVendor=\"VectraAccountDetection\",\r\n                EventProduct=\"VectraAccountDetection\",\r\n                ID = column_ifexists('id_d', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                Threat = column_ifexists('threat_d', ''),\r\n                Certainty = column_ifexists('certainty_d', ''),\r\n                Triaged = column_ifexists('triaged_b', ''),\r\n                [\"Detection Type\"] = column_ifexists('detection_type_s', ''),\r\n                [\"D Type Vname\"] = column_ifexists('d_type_vname_s', ''),\r\n                [\"Detection ID\"] = column_ifexists('detection_id_d', ''),\r\n                [\"Detection href\"] = column_ifexists('detection_href_s', ''),\r\n                [\"Account ID\"] = column_ifexists('account_id_d', ''),\r\n                [\"Account href\"] = column_ifexists('account_href_s', ''),\r\n                href = column_ifexists('href_s', ''),\r\n                [\"Account UID\"] = column_ifexists('account_uid_s', ''),\r\n                [\"Src Account\"] = column_ifexists('src_account_s', ''),\r\n                [\"Event Timestamp\"] = column_ifexists('event_timestamp_t', ''),\r\n                IP = column_ifexists('ip_s', ''),\r\n                Details = column_ifexists('detail_s', ''),\r\n                Severity = column_ifexists('Severity', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                ID,\r\n                Category,\r\n                Threat,\r\n                Certainty,\r\n                Triaged,\r\n                [\"Detection Type\"],\r\n                [\"D Type Vname\"],\r\n                [\"Detection ID\"],\r\n                [\"Detection href\"],\r\n                [\"Account ID\"],\r\n                [\"Account href\"],\r\n                href,\r\n                [\"Account UID\"],\r\n                [\"Src Account\"],\r\n                [\"Event Timestamp\"],\r\n                IP,\r\n                Details,\r\n                Severity\r\n};\r\nVectraAccountDetection_view",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "VectraCloud",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "TME",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra Support",
          "email": "support@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('parserTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "VectraAudits Data Parser with template",
        "displayName": "VectraAudits Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('parserTemplateSpecName2'),'/',variables('parserVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "VectraAudits Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName2')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "VectraAudits",
                "category": "Samples",
                "functionAlias": "VectraAudits",
                "query": "\nlet VectraAudits_view  = view () { \r\n    Audits_Data_CL\r\n    | extend \r\n                EventVendor=\"VectraAudits\",\r\n                EventProduct=\"VectraAudits\",\r\n                ID = column_ifexists('id_d', ''),\r\n                [\"User ID\"] = column_ifexists('user_id_d', ''),\r\n                Username = column_ifexists('username_s', ''),\r\n                [\"User Type\"] = column_ifexists('user_type_s', ''),\r\n                [\"User Role\"] = column_ifexists('user_role_s', ''),\r\n                Version = column_ifexists('version_s', ''),\r\n                [\"Source IP\"] = column_ifexists('source_ip_s', ''),\r\n                [\"Event Timestamp\"] = column_ifexists('event_timestamp_t', ''),\r\n                Message = column_ifexists('Message', ''),\r\n                [\"Result Status\"] = column_ifexists('result_status_s', ''),\r\n                [\"Event Data\"] = column_ifexists('event_data_s', ''),\r\n                [\"Event Object\"] = column_ifexists('event_object_s', ''),\r\n                [\"Event Action\"] = column_ifexists('event_action_s', ''),\r\n                [\"API Client ID\"] = column_ifexists('api_client_id_g', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                ID,\r\n                ['User ID'],\r\n                Username,\r\n                ['User Type'],\r\n                [\"User Role\"],\r\n                Version,\r\n                ['Source IP'],\r\n                ['Event Timestamp'],\r\n                Message,\r\n                ['Result Status'],\r\n                [\"Event Data\"],\r\n                ['Event Object'],\r\n                ['Event Action'],\r\n                ['API Client ID']\r\n};\r\nVectraAudits_view",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "VectraAudits"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName2')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
                "contentId": "[variables('_parserContentId2')]",
                "kind": "Parser",
                "version": "[variables('parserVersion2')]",
                "source": {
                  "name": "VectraCloud",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "TME",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra Support",
                  "email": "support@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName2')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "VectraAudits",
        "category": "Samples",
        "functionAlias": "VectraAudits",
        "query": "\nlet VectraAudits_view  = view () { \r\n    Audits_Data_CL\r\n    | extend \r\n                EventVendor=\"VectraAudits\",\r\n                EventProduct=\"VectraAudits\",\r\n                ID = column_ifexists('id_d', ''),\r\n                [\"User ID\"] = column_ifexists('user_id_d', ''),\r\n                Username = column_ifexists('username_s', ''),\r\n                [\"User Type\"] = column_ifexists('user_type_s', ''),\r\n                [\"User Role\"] = column_ifexists('user_role_s', ''),\r\n                Version = column_ifexists('version_s', ''),\r\n                [\"Source IP\"] = column_ifexists('source_ip_s', ''),\r\n                [\"Event Timestamp\"] = column_ifexists('event_timestamp_t', ''),\r\n                Message = column_ifexists('Message', ''),\r\n                [\"Result Status\"] = column_ifexists('result_status_s', ''),\r\n                [\"Event Data\"] = column_ifexists('event_data_s', ''),\r\n                [\"Event Object\"] = column_ifexists('event_object_s', ''),\r\n                [\"Event Action\"] = column_ifexists('event_action_s', ''),\r\n                [\"API Client ID\"] = column_ifexists('api_client_id_g', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                ID,\r\n                ['User ID'],\r\n                Username,\r\n                ['User Type'],\r\n                [\"User Role\"],\r\n                Version,\r\n                ['Source IP'],\r\n                ['Event Timestamp'],\r\n                Message,\r\n                ['Result Status'],\r\n                [\"Event Data\"],\r\n                ['Event Object'],\r\n                ['Event Action'],\r\n                ['API Client ID']\r\n};\r\nVectraAudits_view",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId2')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
        "contentId": "[variables('_parserContentId2')]",
        "kind": "Parser",
        "version": "[variables('parserVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "VectraCloud",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "TME",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra Support",
          "email": "support@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('parserTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "VectraEntityScoring Data Parser with template",
        "displayName": "VectraEntityScoring Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('parserTemplateSpecName3'),'/',variables('parserVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "VectraEntityScoring Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName3')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "VectraEntityScoring",
                "category": "Samples",
                "functionAlias": "VectraEntityScoring",
                "query": "\nlet VectraEntityScoring_view  = view () { \r\n    Entity_Scoring_Data_CL\r\n    | extend \r\n                EventVendor=\"VectraEntityScoring\",\r\n                EventProduct=\"VectraEntityScoring\",\r\n                ID = column_ifexists('id_d', ''),\r\n                [\"Entity ID\"] = column_ifexists('entity_id_d', ''),\r\n                [\"Active Detection Types\"] = column_ifexists('active_detection_types_s', ''),\r\n                [\"Breadth Contrib\"] = column_ifexists('breadth_contrib_d', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                [\"Entity Importance\"] = column_ifexists('entity_importance_d', ''),\r\n                [\"Entity Type\"] = column_ifexists('entity_type_s', ''),\r\n                [\"Event Timestamp\"] = column_ifexists('event_timestamp_t', ''),\r\n                [\"Is Prioritized\"] = column_ifexists('is_prioritized_b', ''),\r\n                [\"Last Detection ID\"] = column_ifexists('last_detection_id_d', ''),\r\n                [\"Last Detection Type\"] = column_ifexists('last_detection_type_s', ''),\r\n                [\"Last Detection URL\"] = column_ifexists('last_detection_url_s', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                Severity = column_ifexists('severity_s', ''),\r\n                [\"Urgency Score\"] = column_ifexists('urgency_score_d', ''),\r\n                URL = column_ifexists('url_s', ''),\r\n                [\"Velocity Contrib\"] = column_ifexists('velocity_contrib_d', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                ID,\r\n                ['Entity ID'],\r\n                Name,\r\n                ['Entity Importance'],\r\n                ['Entity Type'],\r\n                ['Is Prioritized'],\r\n                Severity,\r\n                [\"Urgency Score\"],\r\n                URL,\r\n                Category,\r\n                ['Last Detection URL'],\r\n                ['Last Detection Type'],\r\n                [\"Last Detection ID\"],\r\n                ['Active Detection Types'],\r\n                ['Event Timestamp'],\r\n                ['Breadth Contrib'],\r\n                ['Velocity Contrib']\r\n};\r\nVectraEntityScoring_view",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "VectraEntityScoring"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName3')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
                "contentId": "[variables('_parserContentId3')]",
                "kind": "Parser",
                "version": "[variables('parserVersion3')]",
                "source": {
                  "name": "VectraCloud",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "TME",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra Support",
                  "email": "support@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName3')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "VectraEntityScoring",
        "category": "Samples",
        "functionAlias": "VectraEntityScoring",
        "query": "\nlet VectraEntityScoring_view  = view () { \r\n    Entity_Scoring_Data_CL\r\n    | extend \r\n                EventVendor=\"VectraEntityScoring\",\r\n                EventProduct=\"VectraEntityScoring\",\r\n                ID = column_ifexists('id_d', ''),\r\n                [\"Entity ID\"] = column_ifexists('entity_id_d', ''),\r\n                [\"Active Detection Types\"] = column_ifexists('active_detection_types_s', ''),\r\n                [\"Breadth Contrib\"] = column_ifexists('breadth_contrib_d', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                [\"Entity Importance\"] = column_ifexists('entity_importance_d', ''),\r\n                [\"Entity Type\"] = column_ifexists('entity_type_s', ''),\r\n                [\"Event Timestamp\"] = column_ifexists('event_timestamp_t', ''),\r\n                [\"Is Prioritized\"] = column_ifexists('is_prioritized_b', ''),\r\n                [\"Last Detection ID\"] = column_ifexists('last_detection_id_d', ''),\r\n                [\"Last Detection Type\"] = column_ifexists('last_detection_type_s', ''),\r\n                [\"Last Detection URL\"] = column_ifexists('last_detection_url_s', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                Severity = column_ifexists('severity_s', ''),\r\n                [\"Urgency Score\"] = column_ifexists('urgency_score_d', ''),\r\n                URL = column_ifexists('url_s', ''),\r\n                [\"Velocity Contrib\"] = column_ifexists('velocity_contrib_d', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                ID,\r\n                ['Entity ID'],\r\n                Name,\r\n                ['Entity Importance'],\r\n                ['Entity Type'],\r\n                ['Is Prioritized'],\r\n                Severity,\r\n                [\"Urgency Score\"],\r\n                URL,\r\n                Category,\r\n                ['Last Detection URL'],\r\n                ['Last Detection Type'],\r\n                [\"Last Detection ID\"],\r\n                ['Active Detection Types'],\r\n                ['Event Timestamp'],\r\n                ['Breadth Contrib'],\r\n                ['Velocity Contrib']\r\n};\r\nVectraEntityScoring_view",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId3')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
        "contentId": "[variables('_parserContentId3')]",
        "kind": "Parser",
        "version": "[variables('parserVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "VectraCloud",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "TME",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra Support",
          "email": "support@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "VectraCloud Workbook with template",
        "displayName": "VectraCloud workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "VectraCloudWorkbook Workbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": ""
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"6f2383c9-5b86-4365-95b4-8ac7d2321e53\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Detect\",\"subTarget\":\"Detect\",\"preText\":\"Detect\",\"style\":\"link\"},{\"id\":\"ce743dcd-55b5-42f7-8553-a9d120b1d74b\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Audit\",\"subTarget\":\"Audit\",\"style\":\"link\"}]},\"name\":\"links - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"92ced0af-f421-44ab-9af8-b4faef3c4af7\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Entity\",\"subTarget\":\"Entity\",\"style\":\"link\"},{\"id\":\"592f3c92-9e4a-4b59-943f-fe239f83bdd8\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Detections\",\"subTarget\":\"Detections\",\"style\":\"link\"}]},\"name\":\"links - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c2e47223-15df-44b3-8040-0bfc72eeab0a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timerange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":604800000}},{\"id\":\"f909ea8d-ce5f-41a1-8b26-d2e34169f149\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"View\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"true\\\", \\\"label\\\":\\\"Prioritized\\\" },\\r\\n    { \\\"value\\\":\\\"false\\\", \\\"label\\\":\\\"Not Prioritized\\\" }\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"value\":[\"true\"]},{\"id\":\"732ba446-ecc2-49fd-be25-53ee45d3f9c2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DataSource\",\"label\":\"Data Source\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VectraEntityScoring\\r\\n| where ['Event Timestamp'] {timerange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by Name, URL\\r\\n| where ('*' in ({View}) or [\\\"Is Prioritized\\\"] in ({View}))\\r\\n| extend source = iff(isempty(tostring(split(Name,\\\":\\\")[0])),'NA',tostring(split(Name,\\\":\\\")[0]))\\r\\n| distinct source\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"e2fa7c64-c20c-4e7b-9557-81c64f2c5b58\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"EntityType\",\"label\":\"Entity Type\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VectraEntityScoring\\r\\n| where ['Event Timestamp'] {timerange} \\r\\n| summarize arg_max(['Event Timestamp'],*) by Name, URL\\r\\n| where ('*' in ({View}) or [\\\"Is Prioritized\\\"] in ({View}))\\r\\n| extend source = tostring(split(Name,\\\":\\\")[0])\\r\\n| extend source2 = iff(isempty(source),\\\"NA\\\",source)\\r\\n| where ('*' in ({DataSource}) or source2 in ({DataSource}))\\r\\n| summarize arg_max(TimeGenerated, *) by [\\\"Entity Type\\\"]\\r\\n| distinct ID, ['Entity Type']\\r\\n| extend splitted_entity_type = split(['Entity Type'],\\\"_\\\")\\r\\n| mv-expand splitted_entity_type = splitted_entity_type\\r\\n| extend cap = toupper(substring(splitted_entity_type,0,1)), rest_string = substring(splitted_entity_type,1)\\r\\n| extend joined_str = strcat(cap,rest_string)\\r\\n| distinct joined_str,ID,['Entity Type']\\r\\n| summarize joined_array = make_list(todynamic(joined_str)) by ID, ['Entity Type']\\r\\n| extend capitalized_Category = strcat_array(joined_array, \\\" \\\")\\r\\n| distinct ['Entity Type'], capitalized_Category\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraEntityScoring\\r\\n| where ['Event Timestamp'] {timerange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by Name, URL\\r\\n| where ('*' in ({View}) or [\\\"Is Prioritized\\\"] in ({View})) and ('*' in ({EntityType}) or [\\\"Entity Type\\\"] in ({EntityType}))\\r\\n| extend ['Data Source'] = tostring(split(Name,\\\":\\\")[0])\\r\\n| extend source2 = iff(isempty(['Data Source']),\\\"NA\\\",['Data Source'])\\r\\n| where ('*' in ({DataSource}) or source2 in ({DataSource}))\\r\\n| extend priority = case(\\r\\n    ['Is Prioritized'] == true, \\\"Prioritized\\\",\\r\\n    ['Is Prioritized'] == false, \\\"Not Prioritized\\\",\\r\\n    \\\"Unknown\\\"\\r\\n)\\r\\n| summarize count() by priority\\r\\n| order by priority desc\",\"size\":3,\"title\":\"Entity Count by Priority\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"priority\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Prioritized\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Not Prioritized\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true,\"size\":\"auto\"}},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraEntityScoring\\r\\n| where ['Event Timestamp'] {timerange} \\r\\n| summarize arg_max(['Event Timestamp'],*) by Name, URL\\r\\n| where ('*' in ({View}) or [\\\"Is Prioritized\\\"] in ({View})) and ('*' in ({EntityType}) or [\\\"Entity Type\\\"] in ({EntityType}))\\r\\n| extend ['Data Source'] = tostring(split(Name,\\\":\\\")[0])\\r\\n| extend source2 = iff(isempty(['Data Source']),\\\"NA\\\",['Data Source'])\\r\\n| where ('*' in ({DataSource}) or source2 in ({DataSource}))\\r\\n| sort by ['Urgency Score'] desc, ['Entity Importance'] desc\\r\\n| extend ['Entity Importance'] = case(\\r\\n    ['Entity Importance'] == 0, \\\"Low\\\",\\r\\n    ['Entity Importance'] == 1, \\\"Medium\\\",\\r\\n    ['Entity Importance'] == 2, \\\"High\\\",\\r\\n    \\\"Unknown\\\"\\r\\n), Velocity = case(\\r\\n    ['Velocity Contrib'] == 0, \\\"Low\\\",\\r\\n    ['Velocity Contrib'] == 1, \\\"Medium\\\",\\r\\n    ['Velocity Contrib'] == 2, \\\"High\\\",\\r\\n    \\\"Unknown\\\"\\r\\n)\\r\\n| project-rename ['Entity Name'] = Name, ['Deep Link'] = URL, ['Latest Update'] = ['Event Timestamp']\\r\\n| project ['Urgency Score'], ['Entity Name'], ['Entity Importance'], ['Data Source'], ['Deep Link'], ['Latest Update'],  Velocity\\r\\n// | project ['Urgency Score'], ['Entity Name'], ['Entity Importance'],\\\"Attack Rating\\\", \\\"Attack Profile\\\", \\\"Determiing Factor\\\", ['Data Source'], ['Deep Link'], ['Latest Update'],  Velocity, \\\"Assignment\\\"\",\"size\":0,\"showAnalytics\":true,\"title\":\"Entity View\",\"showRefreshButton\":true,\"exportFieldName\":\"Deep Link\",\"exportParameterName\":\"P_deep_url\",\"exportDefaultValue\":\"None\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Deep Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above Entity View grid to view more details_\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraEntityScoring\\r\\n| where ['Event Timestamp'] {timerange} \\r\\n| summarize arg_max(['Event Timestamp'],*) by Name, URL\\r\\n| where ('*' in ({View}) or [\\\"Is Prioritized\\\"] in ({View})) and ('*' in ({EntityType}) or [\\\"Entity Type\\\"] in ({EntityType}))\\r\\n| extend ['Data Source'] = tostring(split(Name,\\\":\\\")[0])\\r\\n| extend source2 = iff(isempty(['Data Source']),\\\"NA\\\",['Data Source'])\\r\\n| where ('*' in ({DataSource}) or source2 in ({DataSource})) and URL == '{P_deep_url}'\\r\\n| project ID, ['Entity ID'], Name, ['Entity Importance'], ['Entity Type'], ['Is Prioritized'], Severity, [\\\"Urgency Score\\\"], URL, Category, ['Last Detection URL'], ['Last Detection Type'], [\\\"Last Detection ID\\\"], ['Active Detection Types'], ['Event Timestamp'], ['Breadth Contrib'], ['Velocity Contrib']\",\"size\":4,\"showAnalytics\":true,\"title\":\"Selected Entity View data\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"conditionalVisibility\":{\"parameterName\":\"P_deep_url\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraAccountDetection\\r\\n| where ['Event Timestamp'] {timerange} and ['Account href'] == '{P_deep_url}'\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type']\\r\\n| extend ['Data Source'] = tostring(split(['Account UID'],\\\":\\\")[0])\\r\\n| extend Category = case(Category==\\\"info\\\",\\\"Info\\\",Category==\\\"command_and_control\\\",\\\"Command and Control\\\",Category==\\\"reconnaissance\\\",\\\"Reconnaissance\\\",Category==\\\"lateral_movement\\\",\\\"Lateral Movement\\\",Category==\\\"exfiltration\\\",\\\"Exfiltration\\\",\\\"Unknown\\\")\\r\\n| project-rename ['Detection Time'] = ['Event Timestamp'], ['Detection Name'] = ['Detection Type'], ['Deep Link'] = ['Detection href'], ['Detection Category'] = Category, ['Source IP'] = IP\\r\\n| project ['Detection Time'],  ['Detection Name'], ['Data Source'], ['Deep Link'], Triaged, ['Detection Category'], ['Source IP'], Severity\\r\\n// | project ['Detection Time'],  ['Detection Name'], ['Data Source'], ['Deep Link'], Triaged, ['Detection Category'], ['Source IP'], \\\"Destination IP\\\", Severity, \\\"Assignment\\\"\\r\\n| sort by ['Detection Time'] desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Detection List\",\"showRefreshButton\":true,\"exportFieldName\":\"Deep Link\",\"exportParameterName\":\"P_detection_url\",\"exportDefaultValue\":\"None\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Deep Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}}],\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"P_deep_url\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above Detection List grid to view more details_\"},\"conditionalVisibility\":{\"parameterName\":\"P_deep_url\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},\"name\":\"text - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraAccountDetection\\r\\n| where ['Event Timestamp'] {timerange} and ['Account href'] == '{P_deep_url}'\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type']\\r\\n| where ['Detection href'] == '{P_detection_url}'\\r\\n| extend Category = case(Category==\\\"info\\\",\\\"Info\\\",Category==\\\"command_and_control\\\",\\\"Command and Control\\\",Category==\\\"reconnaissance\\\",\\\"Reconnaissance\\\",Category==\\\"lateral_movement\\\",\\\"Lateral Movement\\\",Category==\\\"exfiltration\\\",\\\"Exfiltration\\\",\\\"Unknown\\\")\\r\\n| project ID, Category, Threat, Certainty, Triaged, [\\\"Detection Type\\\"], [\\\"D Type Vname\\\"], [\\\"Detection ID\\\"], [\\\"Detection href\\\"], [\\\"Account ID\\\"], [\\\"Account href\\\"], href, [\\\"Account UID\\\"], [\\\"Src Account\\\"], [\\\"Event Timestamp\\\"], IP, Details, Severity\",\"size\":4,\"showAnalytics\":true,\"title\":\"Selected Detection List Data\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"conditionalVisibilities\":[{\"parameterName\":\"P_deep_url\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},{\"parameterName\":\"P_detection_url\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"}],\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Entity\"},\"name\":\"Entity\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"8ba900f4-2667-4651-87ee-866de79ed08f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":604800000}},{\"id\":\"41b0ee6f-04db-423c-a0fd-babfda10e619\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DataSource\",\"label\":\"Data Source\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VectraAccountDetection\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type'], ['Account href']\\r\\n| extend source = tostring(split(['Account UID'],\\\":\\\")[0])\\r\\n| distinct source\\r\\n| sort by source asc\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"bd9a1ea9-0bec-457d-a24b-f84e15e1af42\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DetectionCategory\",\"label\":\"Detection Category\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\\"value\\\":\\\"info\\\", \\\"label\\\":\\\"Info\\\"},\\r\\n    {\\\"value\\\":\\\"command_and_control\\\",\\\"label\\\":\\\"Command and Control\\\"},\\r\\n    {\\\"value\\\":\\\"reconnaissance\\\",\\\"label\\\":\\\"Reconnaissance\\\"},\\r\\n    {\\\"value\\\":\\\"lateral_movement\\\",\\\"label\\\":\\\"Lateral Movement\\\"},\\r\\n    {\\\"value\\\":\\\"exfiltration\\\",\\\"label\\\":\\\"Exfiltration\\\"}\\r\\n]\",\"defaultValue\":\"value::all\",\"value\":[\"value::all\"]},{\"id\":\"1144f1b6-24e0-422c-bc8c-9bd87f6d258e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DetectionType\",\"label\":\"Detection Type\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VectraAccountDetection\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type'], ['Account href']\\r\\n| extend source = tostring(split(['Account UID'],\\\":\\\")[0])\\r\\n| where ('*' in ({DataSource}) or source in ({DataSource})) and ('*' in ({DetectionCategory}) or Category in ({DetectionCategory}))\\r\\n| distinct ['Detection Type']\\r\\n| sort by ['Detection Type'] asc\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"datatable (Count:long, Category:string, category_count:long) [0,\\\"Info\\\",1, 0,\\\"Command and Control\\\",2, 0,\\\"Reconnaissance\\\",3, 0,\\\"Lateral Movement\\\",4, 0,\\\"Exfiltration\\\",5]\\r\\n|union\\r\\n(\\r\\nVectraAccountDetection\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type'], ['Account href']\\r\\n| extend source = tostring(split(['Account UID'],\\\":\\\")[0])\\r\\n| where ('*' in ({DataSource}) or source in ({DataSource}))\\r\\n| where ('*' in ({DetectionCategory}) or Category in ({DetectionCategory})) and ('*' in ({DetectionType}) or ['Detection Type'] in ({DetectionType}))\\r\\n| extend Category = case(Category==\\\"info\\\",\\\"Info\\\",Category==\\\"command_and_control\\\",\\\"Command and Control\\\",Category==\\\"reconnaissance\\\",\\\"Reconnaissance\\\",Category==\\\"lateral_movement\\\",\\\"Lateral Movement\\\",Category==\\\"exfiltration\\\",\\\"Exfiltration\\\",\\\"Unknown\\\")\\r\\n| extend category_count=case(Category==\\\"Info\\\",1,Category==\\\"Command and Control\\\",2,Category==\\\"Reconnaissance\\\",3,Category==\\\"Lateral Movement\\\",4,Category==\\\"Exfiltration\\\",5,6)\\r\\n| summarize Count=count() by Category, category_count\\r\\n)\\r\\n| summarize Count=sum(Count) by Category, category_count\\r\\n| sort by category_count asc\",\"size\":3,\"title\":\"Detection Category Count\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Category\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Command and Control\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Exfiltration\",\"representation\":\"purple\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Lateral Movement\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Reconnaissance\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"showBorder\":true,\"size\":\"auto\"}},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraAccountDetection\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type'], ['Account href']\\r\\n| extend ['Data Source'] = tostring(split(['Account UID'],\\\":\\\")[0])\\r\\n| where ('*' in ({DataSource}) or ['Data Source'] in ({DataSource}))\\r\\n| where ('*' in ({DetectionCategory}) or Category in ({DetectionCategory})) and ('*' in ({DetectionType}) or ['Detection Type'] in ({DetectionType}))\\r\\n| extend Category = case(Category==\\\"info\\\",\\\"Info\\\",Category==\\\"command_and_control\\\",\\\"Command and Control\\\",Category==\\\"reconnaissance\\\",\\\"Reconnaissance\\\",Category==\\\"lateral_movement\\\",\\\"Lateral Movement\\\",Category==\\\"exfiltration\\\",\\\"Exfiltration\\\",\\\"Unknown\\\")\\r\\n| project-rename ['Detection Time'] = ['Event Timestamp'], ['Detection Name'] = ['Detection Type'], ['Deep Link'] = ['Detection href'], ['Source IP'] = IP\\r\\n| project ['Detection Time'], ['Account ID'], ['Detection Name'], ['Data Source'], ['Deep Link'], Triaged, ['Detection Category']=Category, ['Source IP'], Severity\\r\\n// | project ['Detection Time'],  ['Detection Name'], ['Data Source'], ['Deep Link'], Triaged, ['Detection Category'], ['Source IP'], \\\"Destination IP\\\", Severity, \\\"Assignment\\\"\\r\\n| sort by ['Detection Time'] desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Detection View\",\"showRefreshButton\":true,\"exportFieldName\":\"Deep Link\",\"exportParameterName\":\"P_detection_link\",\"exportDefaultValue\":\"None\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Deep Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above Detection View grid to view more details_\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraAccountDetection\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(['Event Timestamp'],*) by ['Detection Type'], ['Account href']\\r\\n| extend ['Data Source'] = tostring(split(['Account UID'],\\\":\\\")[0])\\r\\n| where ('*' in ({DataSource}) or ['Data Source'] in ({DataSource}))\\r\\n| where ('*' in ({DetectionCategory}) or Category in ({DetectionCategory})) and ('*' in ({DetectionType}) or ['Detection Type'] in ({DetectionType})) and ['Detection href'] == '{P_detection_link}'\\r\\n| extend Category = case(Category==\\\"info\\\",\\\"Info\\\",Category==\\\"command_and_control\\\",\\\"Command and Control\\\",Category==\\\"reconnaissance\\\",\\\"Reconnaissance\\\",Category==\\\"lateral_movement\\\",\\\"Lateral Movement\\\",Category==\\\"exfiltration\\\",\\\"Exfiltration\\\",\\\"Unknown\\\")\\r\\n| project ID, Category, Threat, Certainty, Triaged, [\\\"Detection Type\\\"], [\\\"D Type Vname\\\"], [\\\"Detection ID\\\"], [\\\"Detection href\\\"], [\\\"Account ID\\\"], [\\\"Account href\\\"], href, [\\\"Account UID\\\"], [\\\"Src Account\\\"], [\\\"Event Timestamp\\\"], IP, Details, Severity\",\"size\":4,\"showAnalytics\":true,\"title\":\"Selected Detection View Data\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"conditionalVisibility\":{\"parameterName\":\"P_detection_link\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Detections\"},\"name\":\"Detections\"},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 3\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Detect\"},\"name\":\"detect\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9b914837-bb6a-4932-92ce-9671341c2e55\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":604800000}},{\"id\":\"faf02ab6-e28d-4d11-84d7-3039ae73bb37\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ResultStatus\",\"label\":\"Result Status\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"success\\\", \\\"label\\\":\\\"Success\\\", \\\"selected\\\":true },\\r\\n    { \\\"value\\\":\\\"failure\\\", \\\"label\\\":\\\"Failure\\\" },\\r\\n    {\\\"value\\\":\\\"\\\",\\\"label\\\":\\\"NA\\\"}\\r\\n]\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraAudits\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(TimeGenerated,*) by ID\\r\\n| where ('*' in ({ResultStatus}) or ['Result Status'] in ({ResultStatus}))\\r\\n| extend ['Result Status'] = tolower(['Result Status'])\\r\\n| extend Result_status = case(\\r\\n    ['Result Status'] == \\\"success\\\", \\\"Success\\\",\\r\\n    ['Result Status'] == \\\"failure\\\", \\\"Failure\\\",\\r\\n    ['Result Status'] == \\\"\\\",\\\"NA\\\"\\r\\n    ,\\\"Unknown\\\"\\r\\n)\\r\\n| extend importance = case(\\r\\n    Result_status == \\\"Success\\\", 0,\\r\\n    Result_status == \\\"Failure\\\", 1,\\r\\n    Result_status == \\\"NA\\\",2\\r\\n    ,3\\r\\n)\\r\\n| summarize count() by Result_status, importance\\r\\n| sort by importance asc\",\"size\":3,\"title\":\"Audit Logs Count\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Result_status\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Success\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Failure\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"NA\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"showBorder\":true,\"size\":\"auto\"}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VectraAudits\\r\\n| where ['Event Timestamp'] {TimeRange}\\r\\n| summarize arg_max(TimeGenerated,*) by ID\\r\\n| where ('*' in ({ResultStatus}) or ['Result Status'] in ({ResultStatus}))\\r\\n| project-rename ['Time Generated'] = ['Event Timestamp'], User = Username, Role = ['User Role']\\r\\n| project ['Time Generated'], User, Role, ['Source IP'], Message, ['Result Status']\\r\\n| sort by ['Time Generated'] desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Audit View\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 3\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Audit\"},\"name\":\"audit\",\"styleSettings\":{\"margin\":\"10px\"}}]},\"name\":\"main\"}],\"fromTemplateId\":\"sentinel-VectraCloud\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": ".description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "VectraCloud",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "TME",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Vectra Support",
                  "email": "support@vectra.ai",
                  "tier": "Partner",
                  "link": "https://www.vectra.ai/support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "VectraCloud",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "TME",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Vectra Support",
          "email": "support@vectra.ai",
          "tier": "Partner",
          "link": "https://www.vectra.ai/support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId2')]",
              "version": "[variables('parserVersion2')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId3')]",
              "version": "[variables('parserVersion3')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2023-04-04",
        "lastPublishDate": "2023-04-04",
        "providers": [
          "Vectra"
        ],
        "categories": {
          "domains": [
            "Security - Network",
            "Security - Cloud Security"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
