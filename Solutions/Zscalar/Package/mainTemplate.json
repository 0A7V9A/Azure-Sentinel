{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Zscalar"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-test",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "Authentication": "Authentication",
    "_Authentication": "[variables('Authentication')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Authentication",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "Add-Url-To-Category": "Add-Url-To-Category",
    "_Add-Url-To-Category": "[variables('Add-Url-To-Category')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Add-Url-To-Category",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
    "Get-Sandbox-Report-For-Hash": "Get-Sandbox-Report-For-Hash",
    "_Get-Sandbox-Report-For-Hash": "[variables('Get-Sandbox-Report-For-Hash')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Get-Sandbox-Report-For-Hash",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Zscaler-Authentication-Playbook playbook",
        "displayName": "Zscaler-Authentication-Playbook playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Zscaler-Authentication-Playbook Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Zscaler-Authentication-Playbook",
              "type": "String",
              "metadata": {
                "description": "Name of the playbook, used as name for the resources. Use only letters and dashes."
              }
            },
            "Storage account name": {
              "defaultValue": "zscalerauthenticationsa",
              "type": "String",
              "metadata": {
                "description": "Name of the storage account, which will be created by the playbook."
              }
            },
            "Keyvault name": {
              "defaultValue": "zscalerauthenticationkv",
              "type": "String",
              "metadata": {
                "description": "Name of the Azure Keyvault, which will be created by the playbook. A vault's name must be between 3-24 alphanumeric characters. The name must begin with a letter, end with a letter or digit, and not contain consecutive hyphens."
              }
            },
            "Function App name": {
              "defaultValue": "zscalerauthenticationfa",
              "type": "String",
              "metadata": {
                "description": "Name of the Azure Function App, which will be created by the playbook."
              }
            },
            "Zscaler Admin Url": {
              "defaultValue": "https://admin.<zscaler_instance_domain>.net",
              "type": "string",
              "metadata": {
                "description": "Update to a valid Zscaler admin url."
              }
            },
            "Zscaler Key": {
              "defaultValue": "",
              "type": "securestring",
              "metadata": {
                "description": "Your Zscaler key."
              }
            },
            "Zscaler Username": {
              "defaultValue": "",
              "type": "securestring",
              "metadata": {
                "description": "Your Zscaler username."
              }
            },
            "Zscaler Password": {
              "defaultValue": "",
              "type": "securestring",
              "metadata": {
                "description": "Your Zscaler password."
              }
            }
          },
          "variables": {
            "functionAppName": "[[parameters('Function App name')]",
            "appServicePlanName": "[[parameters('Function App name')]",
            "keyvault_name": "[[toLower(parameters('Keyvault name'))]",
            "storageAccountName": "[[toLower(parameters('Storage account name'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2016-10-01",
              "name": "[[variables('keyvault_name')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('keyvault_name')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                },
                "parameterValues": {
                  "token:TenantId": "[[subscription().tenantId]",
                  "token:grantType": "code",
                  "vaultName": "[[variables('KeyVault_name')]"
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[[concat(variables('keyvault_name'), '/', 'Zscaler-Key')]",
              "dependsOn": [
                "[[resourceId('Microsoft.KeyVault/vaults', variables('keyvault_name'))]"
              ],
              "properties": {
                "value": "[[parameters('Zscaler Key')]",
                "contentType": "string",
                "attributes": {
                  "enabled": true
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[[concat(variables('keyvault_name'), '/', 'Zscaler-Username')]",
              "dependsOn": [
                "[[resourceId('Microsoft.KeyVault/vaults', variables('keyvault_name'))]"
              ],
              "properties": {
                "value": "[[parameters('Zscaler Username')]",
                "contentType": "string",
                "attributes": {
                  "enabled": true
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2016-10-01",
              "name": "[[concat(variables('keyvault_name'), '/', 'Zscaler-Password')]",
              "dependsOn": [
                "[[resourceId('Microsoft.KeyVault/vaults', variables('keyvault_name'))]"
              ],
              "properties": {
                "value": "[[parameters('Zscaler Password')]",
                "contentType": "string",
                "attributes": {
                  "enabled": true
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "name": "[[variables('storageAccountName')]",
              "apiVersion": "2021-01-01",
              "location": "[[variables('workspace-location-inline')]",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2018-11-01",
              "name": "[[variables('functionAppName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "functionapp",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/serverfarms',variables('appServicePlanName'))]"
              ],
              "properties": {
                "enabled": true,
                "hostNameSslStates": [
                  {
                    "name": "[[concat(variables('functionAppName'), '.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[[concat(variables('functionAppName'), '.scm.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                  }
                ],
                "serverFarmId": "[[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2018-11-01",
              "name": "[[concat(variables('functionAppName'), '/web')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ],
              "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$zsacler-fa",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                  {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": false
                  }
                ],
                "loadBalancing": "LeastRequests",
                "autoHealEnabled": false,
                "cors": {
                  "allowedOrigins": [
                    "https://functions.azure.com",
                    "https://functions-staging.azure.com",
                    "https://functions-next.azure.com"
                  ],
                  "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
              }
            },
            {
              "type": "Microsoft.Web/sites/functions",
              "apiVersion": "2018-11-01",
              "name": "[[concat(variables('functionAppName'), '/GetApiKey')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ],
              "properties": {
                "config": {
                  "bindings": [
                    {
                      "authLevel": "anonymous",
                      "name": "req",
                      "type": "httpTrigger",
                      "direction": "in"
                    },
                    {
                      "name": "res",
                      "type": "http",
                      "direction": "out"
                    }
                  ]
                },
                "files": {
                  "index.js": "module.exports = function (context, data) {  var input = data;    var timestamp = Date.now().toString();    var high = timestamp.substring(timestamp.length - 6);    var low = (parseInt(high) >> 1).toString();    var apiKey = '';    while (low.length < 6) {    low = '0' + low;    }    for (var i = 0; i < high.length; i++) {    apiKey += input.body.key.charAt(parseInt(high.charAt(i)));    }    for (var j = 0; j < low.length; j++) {    apiKey += input.body.key.charAt(parseInt(low.charAt(j)) + 2);    }    context.res = {    body: {      apiKey: apiKey,      timestamp: timestamp    }  };  context.done();};"
                }
              }
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2018-11-01",
              "name": "[[concat(variables('functionAppName'), '/', variables('functionAppName'), '.azurewebsites.net')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[[resourceId('Microsoft.Web/serverfarms',variables('appServicePlanName'))]"
              ],
              "properties": {
                "siteName": "zsacler-fa",
                "hostNameType": "Verified"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2018-02-01",
              "name": "[[variables('appServicePlanName')]",
              "location": "[[variables('workspace-location-inline')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic"
              },
              "kind": "functionapp",
              "properties": {
                "name": "[[variables('appServicePlanName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.KeyVault/vaults', variables('keyvault_name'))]",
                "[[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[[resourceId('Microsoft.Web/sites/functions', variables('functionAppName'),'GetApiKey')]",
                "[[resourceId('Microsoft.Web/serverfarms',variables('appServicePlanName'))]"
              ],
              "tags": {
                "hidden-SentinelTemplateName": "Zscaler-Authentication",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http"
                    }
                  },
                  "actions": {
                    "GetApiKey": {
                      "runAfter": {
                        "Get_Zscaler_Password": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "key": "@body('Get_Zscaler_Key')?['value']"
                        },
                        "function": {
                          "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('functionAppName'), '/functions/GetApiKey')]"
                        }
                      }
                    },
                    "Get_Zscaler_Key": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('Zscaler-Key')}/value"
                      },
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Get_Zscaler_Username": {
                      "runAfter": {
                        "Get_Zscaler_Key": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('Zscaler-Username')}/value"
                      },
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Get_Zscaler_Password": {
                      "runAfter": {
                        "Get_Zscaler_Username": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('Zscaler-Password')}/value"
                      },
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "outputs"
                          ]
                        }
                      }
                    },
                    "HTTP": {
                      "runAfter": {
                        "Parse_Response": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": {
                          "apiKey": "@{body('Parse_Response')?['apiKey']}",
                          "password": "@{body('Get_Zscaler_Password')?['value']}",
                          "timestamp": "@{body('Parse_Response')?['timestamp']}",
                          "username": "@{body('Get_Zscaler_Username')?['value']}"
                        },
                        "headers": {
                          "Cache-Control": "no-cache",
                          "Content-Type": "application/json"
                        },
                        "method": "POST",
                        "uri": "[[concat(parameters('Zscaler Admin Url'), '/api/v1/authenticatedSession')]"
                      }
                    },
                    "Parse_Headers": {
                      "runAfter": {
                        "HTTP": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@outputs('HTTP')['headers']",
                        "schema": {
                          "properties": {
                            "Connection": {
                              "type": "string"
                            },
                            "Content-Length": {
                              "type": "string"
                            },
                            "Content-Type": {
                              "type": "string"
                            },
                            "Date": {
                              "type": "string"
                            },
                            "Keep-Alive": {
                              "type": "string"
                            },
                            "Server": {
                              "type": "string"
                            },
                            "Set-Cookie": {
                              "type": "string"
                            },
                            "Strict-Transport-Security": {
                              "type": "string"
                            },
                            "X-Content-Type-Options": {
                              "type": "string"
                            },
                            "X-Frame-Options": {
                              "type": "string"
                            },
                            "X-XSS-Protection": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Response": {
                      "runAfter": {
                        "GetApiKey": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('GetApiKey')",
                        "schema": {
                          "properties": {
                            "apiKey": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Response": {
                      "runAfter": {
                        "Parse_Headers": [
                          "Succeeded"
                        ]
                      },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "body": {
                          "cookie": "@{body('Parse_Headers')?['Set-Cookie']}"
                        },
                        "headers": "@outputs('HTTP')['headers']",
                        "statusCode": "@outputs('HTTP')['statusCode']"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('keyvault_name'))]",
                        "connectionName": "keyvault",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId ,'/providers/Microsoft.Web/locations/', variables('workspace-location-inline') ,'/managedApis/keyvault')]"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscalar",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Zscaler API authentication",
            "description": "This playbook generates access token in Zscaler API. Call this playbook as a step in functional Zscaler playbooks. The output is a JSessionID which can be used to do other API actions",
            "prerequisites": [
              "Playbook templates leverage the Zscaler API. To use the Zscaler capabilities, you need a Zscaler API key. Refer this link: [API Developers Guide: Getting Started](https://help.zscaler.com/zia/api-getting-started)"
            ],
            "lastUpdateTime": "2021-07-28T00:00:00Z",
            "entities": [""],
            "tags": [
              "Utilities"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Zscaler-Add-Url-To-Category playbook",
        "displayName": "Zscaler-Add-Url-To-Category playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "Zscaler-Add-Url-To-Category Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Zscaler-Add-Url-To-Category",
              "type": "String",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            },
            "Zscaler Authentation Playbook": {
              "defaultValue": "Zscaler-Authentication-Playbook",
              "type": "String",
              "metadata": {
                "description": "Name of the Zscaler Authentication Playbook"
              }
            },
            "Zscaler Admin Url": {
              "defaultValue": "https://admin.<zscaler_instance_domain>.net",
              "type": "string",
              "metadata": {
                "description": "Update to a valid Zscaler admin url."
              }
            },
            "Block Category": {
              "defaultValue": "OTHER_MISCELLANEOUS",
              "type": "String",
              "metadata": {
                "description": "Zscaler block category"
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "ZscalerAuthenticationFlow": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Zscaler Authentation Playbook'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "BlockURL-Zscaler",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Set_Zscaler_Block_Category": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Category",
                            "type": "string",
                            "value": "[[parameters('Block Category')]"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_URLs": {
                      "runAfter": {
                        "Set_Zscaler_Block_Category": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/url"
                      }
                    },
                    "For_each": {
                      "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "Compose": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "[[concat('<p>@{outputs(''Compose'')}<br>Url @{items(''For_each'')?[''Url'']} has been added to category @{variables(''Category'')}</p>')]"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Compose": {
                          "runAfter": {
                            "HTTP_Activate_Changes": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose",
                          "inputs": "<img src=\"https://www.zscaler.com//themes/custom/zscaler/logo.svg\" alt=\"Zscaler\">"
                        },
                        "HTTP_Add_Url": {
                          "type": "Http",
                          "inputs": {
                            "body": {
                              "configuredName": "@{variables('Category')}",
                              "urls": [
                                "@{items('For_each')?['Url']}"
                              ]
                            },
                            "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                            "headers": {
                              "Cache-Control": "no-cache",
                              "Content-Type": "application/json"
                            },
                            "method": "PUT",
                            "uri": "[[uri(parameters('Zscaler Admin Url'), '/api/v1/urlCategories/@{variables(''Category'')}?action=ADD_TO_LIST')]"
                          }
                        },
                        "HTTP_Activate_Changes": {
                          "runAfter": {
                            "HTTP_Add_Url": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                            "method": "POST",
                            "uri": "[[uri(parameters('Zscaler Admin Url'), '/api/v1/status/activate')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_Authentication_Response": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "HTTP_Delete_Api_Session": {
                      "runAfter": {
                        "For_each": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                        "method": "DELETE",
                        "uri": "[[uri(parameters('Zscaler Admin Url'), '/api/v1/authenticatedSession')]"
                      }
                    },
                    "Parse_Authentication_Response": {
                      "runAfter": {
                        "zscaler": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('zscaler')",
                        "schema": {
                          "properties": {
                            "cookie": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "zscaler": {
                      "runAfter": {
                        "Entities_-_Get_URLs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "triggerName": "manual",
                          "workflow": {
                            "id": "[[variables('ZscalerAuthenticationFlow')]"
                          }
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscalar",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Block URL - Zscaler",
            "description": "This playbook allows blocks URLs in Zscaler by adding them to categories",
            "prerequisites": [
              "1. This playbook leverages a nested playbook: Zscaler authentication. Deploy this playbook before deploying this template in the same resource group.",
              "2. Create a block category in Zscaler, which this playbook will add IPs to."
            ],
            "lastUpdateTime": "2021-07-28T00:00:00Z",
            "entities": [
              "Url"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Zscaler-Get-Sandbox-Report-For-Hash playbook",
        "displayName": "Zscaler-Get-Sandbox-Report-For-Hash playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "Zscaler-Get-Sandbox-Report-For-Hash Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Zscaler-Get-Sandbox-Report-For-Hash",
              "type": "String",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            },
            "Zscaler Authentation Playbook": {
              "defaultValue": "Zscaler-Authentication-Playbook",
              "type": "String",
              "metadata": {
                "description": "Name of the Zscaler Authentication Playbook"
              }
            },
            "Zscaler Admin Url": {
              "defaultValue": "https://admin.<zscaler_instance_domain>.net",
              "type": "string",
              "metadata": {
                "description": "Update to a valid Zscaler admin url."
              }
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "ZscalerAuthenticationFlow": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Zscaler Authentation Playbook'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "FileHashEnrichment-Zscaler",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_FileHashes": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      }
                    },
                    "For_each": {
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "actions": {
                        "Append_to_Result_variable": {
                          "runAfter": {
                            "Parse_Result": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToStringVariable",
                          "inputs": {
                            "name": "Result",
                            "value": "Summary: @{body('Parse_Result')?['Summary']}<br/>"
                          }
                        },
                        "Compose": {
                          "runAfter": {
                            "Append_to_Result_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose",
                          "inputs": "<img src=\"https://www.zscaler.com//themes/custom/zscaler/logo.svg\" alt=\"Zscaler\">"
                        },
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "Compose": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>@{outputs('Compose')}<br>\nFileHash report from Zscaler playbook:<br>\n<br>\nSummary:<br>\nStatus: @{body('Parse_Result')?['Summary']?['Summary']?['Status']}<br>\nCategory: @{body('Parse_Result')?['Summary']?['Summary']?['Category']}<br>\nFileType: @{body('Parse_Result')?['Summary']?['Summary']?['FileType']}<br>\n<br>\nClassification:<br>\nType: @{body('Parse_Result')?['Summary']?['Classification']?['Type']}<br>\nCategory: @{body('Parse_Result')?['Summary']?['Classification']?['Category']}<br>\nScore: @{body('Parse_Result')?['Summary']?['Classification']?['Score']}<br>\nDetected Malware: @{body('Parse_Result')?['Summary']?['Classification']?['DetectedMalware']}<br>\n<br>\nFile properties:<br>\nFile type: @{body('Parse_Result')?['Summary']?['FileProperties']?['FileType']}<br>\nFile size: @{body('Parse_Result')?['Summary']?['FileProperties']?['FileSize']}<br>\nMD5: @{body('Parse_Result')?['Summary']?['FileProperties']?['MD5']}<br>\nSHA1: @{body('Parse_Result')?['Summary']?['FileProperties']?['SHA1']}<br>\nSha256: @{body('Parse_Result')?['Summary']?['FileProperties']?['Sha256']}<br>\nIssuer: @{body('Parse_Result')?['Summary']?['FileProperties']?['Issuer']}<br>\nDigital certificate: @{body('Parse_Result')?['Summary']?['FileProperties']?['DigitalCerificate']}<br>\nSSDeep: @{body('Parse_Result')?['Summary']?['FileProperties']?['SSDeep']}<br>\nRootCA: @{body('Parse_Result')?['Summary']?['FileProperties']?['RootCA']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "HTTP": {
                          "type": "Http",
                          "inputs": {
                            "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                            "headers": {
                              "Cache-Control": "no-cache",
                              "Content-Type": "application/json"
                            },
                            "method": "GET",
                            "uri": "[[uri(parameters('Zscaler Admin Url'), '/api/v1/sandbox/report/@{items(''For_each'')?[''Value'']}?details=summary')]"
                          }
                        },
                        "Parse_Result": {
                          "runAfter": {
                            "HTTP": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('HTTP')",
                            "schema": {
                              "properties": {
                                "Summary": {
                                  "properties": {
                                    "Classification": {
                                      "properties": {
                                        "Category": {
                                          "type": "string"
                                        },
                                        "DetectedMalware": {
                                          "type": "string"
                                        },
                                        "Score": {
                                          "type": "integer"
                                        },
                                        "Type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "FileProperties": {
                                      "properties": {
                                        "DigitalCerificate": {
                                          "type": "string"
                                        },
                                        "FileSize": {
                                          "type": "integer"
                                        },
                                        "FileType": {
                                          "type": "string"
                                        },
                                        "Issuer": {
                                          "type": "string"
                                        },
                                        "MD5": {
                                          "type": "string"
                                        },
                                        "RootCA": {
                                          "type": "string"
                                        },
                                        "SHA1": {
                                          "type": "string"
                                        },
                                        "SSDeep": {
                                          "type": "string"
                                        },
                                        "Sha256": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "Summary": {
                                      "properties": {
                                        "Category": {
                                          "type": "string"
                                        },
                                        "Duration": {
                                          "type": "integer"
                                        },
                                        "FileType": {
                                          "type": "string"
                                        },
                                        "StartTime": {
                                          "type": "integer"
                                        },
                                        "Status": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_Response_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "HTTP_Delete_Api_Session": {
                      "runAfter": {
                        "For_each": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                        "method": "DELETE",
                        "uri": "[[uri(parameters('Zscaler Admin Url'), '/api/v1/authenticatedSession')]"
                      }
                    },
                    "Initialize_Response_variable": {
                      "runAfter": {
                        "Parse_Authentication_Response": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Result",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Parse_Authentication_Response": {
                      "runAfter": {
                        "zscaler": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('zscaler')",
                        "schema": {
                          "properties": {
                            "cookie": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "zscaler": {
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "triggerName": "manual",
                          "workflow": {
                            "id": "[[variables('ZscalerAuthenticationFlow')]"
                          }
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Zscalar",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "FileHash Enrichment - Zscaler",
            "description": "This playbook post a Zscaler Sandbox report for each FileHash found in the incident.",
            "prerequisites": [
              "1. This playbook leverages a nested playbook: Zscaler authentication. Deploy this playbook before deploying this template in the same resource group.",
              "2. Create a block category in Zscaler, which this playbook will add IPs to."
            ],
            "lastUpdateTime": "2021-07-28T00:00:00Z",
            "entities": [
              "FileHash"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Zscalar",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_Authentication')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Add-Url-To-Category')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Get-Sandbox-Report-For-Hash')]",
              "version": "[variables('playbookVersion3')]"
            }
          ]
        },
        "firstPublishDate": "2022-06-27",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security – Insider Threat"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
