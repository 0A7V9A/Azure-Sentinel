{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Ariela Silberstein - ariela.silberstein@bitsighttech.com",
    "comments": "Solution template for BitSight"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "BitSightWorkbook",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "bitsight_technologies_Inc.bitsight_sentinel",
    "_solutionId": "[variables('solutionId')]",
    "email": "ariela.silberstein@bitsighttech.com",
    "_email": "[variables('email')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "BitSightWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "d8844f11-3a36-4b97-9062-1e6d57c00e37",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "a1275c5e-0ff4-4d15-a7b7-96018cd979f5",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "d68b758a-b117-4cb8-8e1d-dcab5a4a2f21",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
    "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId3')))]",
    "analyticRuleVersion4": "1.0.0",
    "analyticRulecontentId4": "161ed3ac-b242-4b13-8c6b-58716e5e9972",
    "_analyticRulecontentId4": "[variables('analyticRulecontentId4')]",
    "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
    "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId4')))]",
    "analyticRuleVersion5": "1.0.0",
    "analyticRulecontentId5": "b11fdc35-6368-4cc0-8128-52cd2e2cdda0",
    "_analyticRulecontentId5": "[variables('analyticRulecontentId5')]",
    "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
    "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId5')))]",
    "analyticRuleVersion6": "1.0.0",
    "analyticRulecontentId6": "a5526ba9-5997-47c6-bf2e-60a08b681e9b",
    "_analyticRulecontentId6": "[variables('analyticRulecontentId6')]",
    "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId6'))]",
    "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId6')))]",
    "analyticRuleVersion7": "1.0.0",
    "analyticRulecontentId7": "f65bfcdd-4da8-41fd-bca1-de6599400cd7",
    "_analyticRulecontentId7": "[variables('analyticRulecontentId7')]",
    "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId7'))]",
    "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId7')))]",
    "analyticRuleVersion8": "1.0.0",
    "analyticRulecontentId8": "511863ea-a5b4-4d2a-a7a4-2c0ccb2372fc",
    "_analyticRulecontentId8": "[variables('analyticRulecontentId8')]",
    "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId8'))]",
    "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId8')))]",
    "analyticRuleVersion9": "1.0.0",
    "analyticRulecontentId9": "53000762-286c-4fc6-b6fd-dca2338a38f1",
    "_analyticRulecontentId9": "[variables('analyticRulecontentId9')]",
    "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId9'))]",
    "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId9')))]",
    "analyticRuleVersion10": "1.0.0",
    "analyticRulecontentId10": "54e77434-2184-435f-bc87-52b832ee451f",
    "_analyticRulecontentId10": "[variables('analyticRulecontentId10')]",
    "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId10'))]",
    "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId10')))]",
    "GetWFHData": "GetWFHData",
    "_GetWFHData": "[variables('GetWFHData')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "GetWFHData",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "blanks": "[replace('b', 'b', '')]",
    "parserVersion1": "1.0.0",
    "parserContentId1": "BitSightAlerts-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "BitSightAlerts",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]",
    "parserVersion2": "1.0.0",
    "parserContentId2": "BitSightBreaches-Parser",
    "_parserContentId2": "[variables('parserContentId2')]",
    "parserName2": "BitSightBreaches",
    "_parserName2": "[concat(parameters('workspace'),'/',variables('parserName2'))]",
    "parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
    "_parserId2": "[variables('parserId2')]",
    "parserTemplateSpecName2": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId2')))]",
    "parserVersion3": "1.0.0",
    "parserContentId3": "BitSightCompanyDetails-Parser",
    "_parserContentId3": "[variables('parserContentId3')]",
    "parserName3": "BitSightCompanyDetails",
    "_parserName3": "[concat(parameters('workspace'),'/',variables('parserName3'))]",
    "parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
    "_parserId3": "[variables('parserId3')]",
    "parserTemplateSpecName3": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId3')))]",
    "parserVersion4": "1.0.0",
    "parserContentId4": "BitSightCompanyRatings-Parser",
    "_parserContentId4": "[variables('parserContentId4')]",
    "parserName4": "BitSightCompanyRatings",
    "_parserName4": "[concat(parameters('workspace'),'/',variables('parserName4'))]",
    "parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
    "_parserId4": "[variables('parserId4')]",
    "parserTemplateSpecName4": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId4')))]",
    "parserVersion5": "1.0.0",
    "parserContentId5": "BitSightDiligenceHistoricalStatistics-Parser",
    "_parserContentId5": "[variables('parserContentId5')]",
    "parserName5": "BitSightDiligenceHistoricalStatistics",
    "_parserName5": "[concat(parameters('workspace'),'/',variables('parserName5'))]",
    "parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName5'))]",
    "_parserId5": "[variables('parserId5')]",
    "parserTemplateSpecName5": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId5')))]",
    "parserVersion6": "1.0.0",
    "parserContentId6": "BitSightDiligenceStatistics-Parser",
    "_parserContentId6": "[variables('parserContentId6')]",
    "parserName6": "BitSightDiligenceStatistics",
    "_parserName6": "[concat(parameters('workspace'),'/',variables('parserName6'))]",
    "parserId6": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName6'))]",
    "_parserId6": "[variables('parserId6')]",
    "parserTemplateSpecName6": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId6')))]",
    "parserVersion7": "1.0.0",
    "parserContentId7": "BitSightFindingsData-Parser",
    "_parserContentId7": "[variables('parserContentId7')]",
    "parserName7": "BitSightFindingsData",
    "_parserName7": "[concat(parameters('workspace'),'/',variables('parserName7'))]",
    "parserId7": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName7'))]",
    "_parserId7": "[variables('parserId7')]",
    "parserTemplateSpecName7": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId7')))]",
    "parserVersion8": "1.0.0",
    "parserContentId8": "BitSightFindingsSummary-Parser",
    "_parserContentId8": "[variables('parserContentId8')]",
    "parserName8": "BitSightFindingsSummary",
    "_parserName8": "[concat(parameters('workspace'),'/',variables('parserName8'))]",
    "parserId8": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName8'))]",
    "_parserId8": "[variables('parserId8')]",
    "parserTemplateSpecName8": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId8')))]",
    "parserVersion9": "1.0.0",
    "parserContentId9": "BitSightGraphData-Parser",
    "_parserContentId9": "[variables('parserContentId9')]",
    "parserName9": "BitSightGraphData",
    "_parserName9": "[concat(parameters('workspace'),'/',variables('parserName9'))]",
    "parserId9": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName9'))]",
    "_parserId9": "[variables('parserId9')]",
    "parserTemplateSpecName9": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId9')))]",
    "parserVersion10": "1.0.0",
    "parserContentId10": "BitSightIndustrialStatistics-Parser",
    "_parserContentId10": "[variables('parserContentId10')]",
    "parserName10": "BitSightIndustrialStatistics",
    "_parserName10": "[concat(parameters('workspace'),'/',variables('parserName10'))]",
    "parserId10": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName10'))]",
    "_parserId10": "[variables('parserId10')]",
    "parserTemplateSpecName10": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId10')))]",
    "parserVersion11": "1.0.0",
    "parserContentId11": "BitSightObservationStatistics-Parser",
    "_parserContentId11": "[variables('parserContentId11')]",
    "parserName11": "BitSightObservationStatistics",
    "_parserName11": "[concat(parameters('workspace'),'/',variables('parserName11'))]",
    "parserId11": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName11'))]",
    "_parserId11": "[variables('parserId11')]",
    "parserTemplateSpecName11": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId11')))]",
    "parserVersion12": "1.0.0",
    "parserContentId12": "BitSightWorkFromHome-Parser",
    "_parserContentId12": "[variables('parserContentId12')]",
    "parserName12": "BitSightWorkFromHome",
    "_parserName12": "[concat(parameters('workspace'),'/',variables('parserName12'))]",
    "parserId12": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName12'))]",
    "_parserId12": "[variables('parserId12')]",
    "parserTemplateSpecName12": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId12')))]",
    "uiConfigId1": "BitSight",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "BitSight",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "BitSight Workbook with template",
        "displayName": "BitSight workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "BitSightWorkbookWorkbook Workbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": ""
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"31e17dc1-4fc9-4264-a123-0b939a98cd27\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"My Company\",\"subTarget\":\"My Company\",\"preText\":\"My Company\",\"style\":\"link\"},{\"id\":\"24a68167-dc60-44a2-a2b1-04382fe0ed0c\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Work from Home - Remote Office\",\"subTarget\":\"Work from Home - Remote Office\",\"preText\":\"Work from Home - Remote Office\",\"style\":\"link\"}]},\"name\":\"links - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# My Company\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"df9ebd46-967c-445f-9328-d3538237ba3b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"company\",\"label\":\"Company Name\",\"type\":2,\"isRequired\":true,\"query\":\"BitSightCompanyDetails\\r\\n| distinct Name\",\"typeSettings\":{\"showDefault\":false},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":\"Kati Communications, Inc.\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"parameters - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"ae71f2b2-2245-4937-827e-20960f9ae3b8\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Timer\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":604800000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let latest_Rating = toscalar(BitSightGraphData\\r\\n| where todatetime(RatingDate) {Timer} and CompanyName == '{company}'\\r\\n| distinct CompanyName, RatingDate, Rating\\r\\n| summarize High = max(Rating), Low = min(Rating), any(RatingDate, Rating)\\r\\n| order by any_RatingDate desc\\r\\n| project strcat_delim(\\\"-\\\",any_Rating, High, Low)\\r\\n| limit 1);\\r\\nBitSightCompanyDetails\\r\\n| where Name == '{company}'\\r\\n| sort by TimeGenerated\\r\\n| extend LatestRating = toint(todecimal(split(latest_Rating, \\\"-\\\")[0])), High = toint(todecimal(split(latest_Rating, \\\"-\\\")[1])), Low = toint(todecimal(split(latest_Rating, \\\"-\\\")[2]))\\r\\n| project-rename Name = Name, Subscription = SubscriptionType , Industry = Industry, [\\\"Customer Monitoring Count\\\"] = CustomerMonitoringCount, [\\\"Latest Rating\\\"] = LatestRating\\r\\n| project Name, [\\\"Latest Rating\\\"], High, Low, Industry, [\\\"Customer Monitoring Count\\\"]\\r\\n| limit 1\",\"size\":4,\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\",\"styleSettings\":{\"margin\":\"0px\",\"padding\":\"0px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightGraphData\\r\\n| where todatetime(RatingDate) {Timer} and CompanyName == '{company}'\\r\\n| distinct CompanyName, RatingDate, Rating\\r\\n| project CompanyName, RatingDate, Rating\\r\\n| order by RatingDate asc\",\"size\":0,\"aggregation\":4,\"title\":\"Security Ratings Over Time\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"chartSettings\":{\"xAxis\":\"RatingDate\",\"createOtherGroup\":0,\"showDataPoints\":true,\"ySettings\":{\"min\":300,\"max\":850}}},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}'\\r\\n| summarize count() by RiskVectorLabel\\r\\n| order by count_ desc\",\"size\":0,\"title\":\"Count of Observations by Risk Vector\",\"exportFieldName\":\"x\",\"exportParameterName\":\"SelectedRiskVectorLabel\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\",\"chartSettings\":{\"xAxis\":\"RiskVectorLabel\",\"createOtherGroup\":0,\"showLegend\":true}},\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}'\\r\\n| where RiskVectorLabel == '{SelectedRiskVectorLabel}'\\r\\n| project-away EventVendor, EventProduct\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"sortBy\":[{\"itemKey\":\"RemediationHistoryLastRefreshStatusDate\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"RemediationHistoryLastRefreshStatusDate\",\"sortOrder\":2}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedRiskVectorLabel\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 16\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}' and RiskCategory == \\\"Compromised Systems\\\"\\r\\n| extend Date = format_datetime(todatetime(LastSeen), 'yyyy-MM')\\r\\n| summarize count() by RiskVectorLabel,Date\\r\\n| project Date, count_, RiskVectorLabel\\r\\n| order by Date asc\\r\\n\",\"size\":0,\"aggregation\":4,\"title\":\"Compromised Systems by Risk Vector Over Time\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Date\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"count_\"],\"group\":\"RiskVectorLabel\",\"showDataPoints\":true}},\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}' and RiskCategory == \\\"User Behavior\\\"\\r\\n| extend Date = format_datetime(todatetime(LastSeen), 'yyyy-MM')\\r\\n| summarize count() by RiskVectorLabel,Date\\r\\n| project Date, count_, RiskVectorLabel\\r\\n| order by Date asc\\r\\n\",\"size\":0,\"aggregation\":4,\"title\":\"User Behavior by Risk Vector Over Time\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"count_\"],\"group\":\"RiskVectorLabel\"}},\"name\":\"query - 15\"},{\"type\":1,\"content\":{\"json\":\"##### Diligence by Risk Vector Over Time\"},\"name\":\"text - 13\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"4d26ba1c-db98-437a-9a0c-63126f341afb\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Risk_Vector\",\"label\":\"Risk Vector\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}' and RiskCategory == \\\"Diligence\\\"\\r\\n| distinct RiskVectorLabel\\r\\n\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 12\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}' and RiskCategory == \\\"Diligence\\\" and ('*' in ({Risk_Vector}) or RiskVectorLabel in ({Risk_Vector}))\\r\\n| extend Date = format_datetime(todatetime(LastSeen), 'yyyy-MM')\\r\\n| summarize count() by RiskVectorLabel,Date\\r\\n| project Date, count_, RiskVectorLabel\\r\\n| order by Date asc\\r\\n\",\"size\":0,\"aggregation\":4,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Date\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"count_\"],\"group\":\"RiskVectorLabel\",\"createOtherGroup\":0,\"showDataPoints\":true}},\"name\":\"query - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightDiligenceHistoricalStatistics\\r\\n| where todatetime(Date) {Timer} and CompanyName == '{company}'\\r\\n| extend yyyy_mm = format_datetime(todatetime(Date), 'yyyy-MM')\\r\\n| summarize round(avg(Count),2) by yyyy_mm, Category\\r\\n| project Category, avg_Count, yyyy_mm = strcat(yyyy_mm,\\\" (Avg)\\\")\\r\\n| order by yyyy_mm asc, Category asc\\r\\n| limit 15\",\"size\":0,\"aggregation\":4,\"title\":\"Diligence Observations by Severity\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\",\"chartSettings\":{\"xAxis\":\"yyyy_mm\",\"yAxis\":[\"avg_Count\"],\"group\":\"Category\"}},\"name\":\"query - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsData\\r\\n| where todatetime(LastSeen) {Timer} and CompanyName == '{company}' and RiskCategory == \\\"Compromised Systems\\\" and RiskVectorLabel == \\\"Botnet Infections\\\"\\r\\n| extend d=parse_json(Details) \\r\\n| mv-expand asset = todynamic(Assets)\\r\\n| project Infection = dynamic_to_json(d[0].infection.family), [\\\"Detection Method\\\"] = dynamic_to_json(d[0].detection_method), [\\\"Last Seen\\\"] = column_ifexists(\\\"LastSeen\\\",\\\"\\\"), Asset = dynamic_to_json(asset.asset)\\r\\n| distinct Infection, [\\\"Detection Method\\\"], Asset, [\\\"Last Seen\\\"]\\r\\n| order by [\\\"Last Seen\\\"] desc\",\"size\":0,\"title\":\"Infections\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"##### Vulnerabilities\"},\"name\":\"text - 11\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c7ff4374-c346-4c43-9354-8936687c2704\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Severity\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"BitSightFindingsSummary\\r\\n| where todatetime(StartDate) {Timer} and Company == '{company}'\\r\\n| extend Filter = case(toreal(Severity) <= 3.9 and toreal(Severity) >= 0.0, \\\"Minor\\\", \\r\\n                       toreal(Severity) <= 6.9 and toreal(Severity) >= 4.0, \\\"Moderate\\\",\\r\\n                       toreal(Severity) <= 8.9 and toreal(Severity) >= 7.0, \\\"Material\\\",\\r\\n                       toreal(Severity) <= 10.0 and toreal(Severity) >= 9.0, \\\"Severe\\\",\\r\\n                       \\\"\\\")\\r\\n| distinct Filter\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightFindingsSummary\\r\\n| where todatetime(StartDate) {Timer} and Company == '{company}'\\r\\n| distinct Name, Severity, StartDate, EndDate, Description\\r\\n| extend [\\\"Severity Details\\\"] = case(toreal(Severity) <= 3.9 and toreal(Severity) >= 0.0, \\\"Minor\\\", \\r\\n                       toreal(Severity) <= 6.9 and toreal(Severity) >= 4.0, \\\"Moderate\\\",\\r\\n                       toreal(Severity) <= 8.9 and toreal(Severity) >= 7.0, \\\"Material\\\",\\r\\n                       toreal(Severity) <= 10.0 and toreal(Severity) >= 9.0, \\\"Severe\\\",\\r\\n                       \\\"\\\")\\r\\n| where ('*' in ({Severity}) or [\\\"Severity Details\\\"] in ({Severity}))\\r\\n| project-rename Name = Name, [\\\"Start Date\\\"] = StartDate, [\\\"End Date\\\"] = EndDate\\r\\n| project Name, [\\\"Severity Details\\\"], [\\\"Start Date\\\"], [\\\"End Date\\\"], Description\\r\\n\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 9\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"My Company\"},\"name\":\"My Company\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Work from Home - Remote Office\"},\"name\":\"text - 8\"},{\"type\":1,\"content\":{\"json\":\"Many companies continue to adjust to employees shifting from working in offices to working remotely. This environment introduces new cybersecurity risks and BitSight wants to help users identify and manage those new risks with Work From Home - Remote Office. Using BitSight Work From Home - Remote Office, organizations can identify security risks in remote offices and networks. Splunk administrators can leverage Splunk's Network Sessions data model, or specify a custom query to submit IP addresses known to be associated with remote working environments to BitSight. BitSight Work From Home - Remote Office identifies vulnerabilities and infections detected on those IPs. Organizations can use this information to discover security issues, more closely monitor and manage higher-risk remote operating environments, and provide greater education for end-users, ultimately reducing the risk that their networks and data will be compromised.\"},\"name\":\"text - 0\"},{\"type\":1,\"content\":{\"json\":\"**The BitSight Work from Home - Remote Office tool requires that your BitSight subscription includes access to BitSight’s Attack Surface Analytics (ASA) module.\\r\\n**\"},\"name\":\"text - 1\"},{\"type\":1,\"content\":{\"json\":\"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"},\"name\":\"text - 3\"},{\"type\":1,\"content\":{\"json\":\"\"},\"name\":\"text - 5\"},{\"type\":1,\"content\":{\"json\":\"\"},\"name\":\"text - 6\"},{\"type\":1,\"content\":{\"json\":\"**Privacy Policy**\"},\"name\":\"text - 2\"},{\"type\":1,\"content\":{\"json\":\"By checking the box or uploading IP addresses into the BitSight platform as part of the \\\"Remote Office\\\" product, you represent, warrant and covenant that: (1) you will only provide employee home IP addresses (the \\\"Home Office IP Addresses\\\") where you have complied with applicable data protection laws, including ensuring (a) you have a legal basis to provide us, and enable us to process, the Home Office IP Addresses data to provide the service (including the \\\"Insights Service\\\" described below), and (b) you have notified your employees, contractors or other individuals to whom the Home Office IP Addresses relate that you will be processing their IP addresses and other data, including by using the BitSight platform as a data processor for security monitoring and risk assessment purposes, and that we (\\\"BitSight\\\") will aggregate and anonymize their data and use it to provide the Insights Service for security trends, benchmarking or marketing data, and to improve our products and services as a controller on the basis set out in our Privacy Policy, (2) you will only use the information for security and risk purposes, and (3) you have full rights, power, and authority to enter into and perform this agreement on behalf of your company. We will delete the Home Office IP Addresses 60 days after you provide them to us, but may continue to use any aggregated, non-identifiable analytical data to provide you and others with insights and analysis (the \\\"Insights Service\\\") for internal use, for security trends, benchmarking and marketing purposes, which may be shared publicly, with customers, and other third parties, unless you opt-out of the Insights Service (in which case you will no longer have access to these features). Please see our WFH Privacy Notice for further details on how to opt-out of the Insights Service and for more information on our data processing practices.\"},\"name\":\"text - 4\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"503b3f6c-7650-4b16-955d-c76d82277c96\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Timer\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":7776000000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"BitSightWorkFromHome\\r\\n| where todatetime(EventDate) {Timer}\\r\\n| project [\\\"Event Date\\\"] = EventDate, [\\\"Host IP\\\"] = ForensicsHostIP, [\\\"Risk Type\\\"] = RiskType, Response = column_ifexists(\\\"DetailsResponse\\\",\\\"\\\"), Service = column_ifexists(\\\"DetailsService\\\",\\\"\\\"), [\\\"Service Providers\\\"]= ServiceProviders,Infection = column_ifexists(\\\"DetailsInfection\\\",\\\"\\\"), [\\\"Detection Method\\\"] = column_ifexists(\\\"DetailsDetectionMethod\\\",\\\"\\\")\\r\\n| sort by [\\\"Event Date\\\"] desc\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Work from Home - Remote Office\"},\"name\":\"wfh\"}]},\"name\":\"Main\",\"styleSettings\":{\"showBorder\":true}}],\"fromTemplateId\":\"sentinel-BitSightWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": ".description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": []
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 1 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "BitSightDropInCompanyRatings_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect when there is a drop of 10% or more in BitSight company ratings.",
                "displayName": "BitSight - drop in company ratings",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightGraphData\n| where ingestion_time() > ago(timeframe)and toint(RatingDifferance) < 0\n| extend percentage = -(toreal(RatingDifferance)/toreal(Rating))*100\n| where percentage >= 10\n| project RatingDate, Rating, CompanyName, percentage\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightGraphData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "entityType": "Sentinel entities",
                    "fieldMappings": [
                      {
                        "columnName": "AlertId",
                        "identifier": "Entities"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "BitSight : Alert for >10% drop in ratings of {{CompanyName}}.",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nRating Date: {{RatingDate}}\\nPercentage Drop: {{percentage}}%"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 2 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "BitSightNewAlertFound_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect a new alerts generated in BitSight.",
                "displayName": "BitSight - new alert found",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightAlerts\n| where ingestion_time() > ago(timeframe)\n| extend Severity = case( Severity contains \"INCREASE\", \"Low\",\n                          Severity contains \"WARN\" or Severity contains \"DECREASE\", \"Medium\",\n                          Severity contains \"CRITICAL\", \"High\",\n                          \"Informational\")\n| extend CompanyURL = strcat(\"https://service.bitsighttech.com/app/spm\",CompanyURL)\n| project CompanyName, Severity, Trigger, CompanyURL, AlertDate, GUID\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightAlerts"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "entityMappings": [
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "CompanyURL",
                        "identifier": "Url"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert generated on {{AlertDate}} in BitSight.\\n\\nCompany URL: {{CompanyURL}}\\nAlert GUID: {{GUID}}",
                  "alertDisplayNameFormat": "BitSight: Alert for {{Trigger}} in {{CompanyName}} from bitsight."
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 3 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "BitSightCompromisedSystemsDetected_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId3')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect whenever there is a compromised systems found in BitSight.",
                "displayName": "BitSight - compromised systems detected",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightFindingsData\n| where ingestion_time() > ago(timeframe)\n| where RiskCategory == \"Compromised Systems\"\n| extend Severity = toreal(Severity)\n| extend Severity = case( Severity <= 6.9 and Severity >= 4.0, \"Low\",\n                          Severity <= 8.9 and Severity >= 7.0, \"Medium\",\n                          Severity <= 10.0 and Severity >= 9.0, \"High\",\n                          \"Informational\")\n| project FirstSeen, CompanyName, Severity, RiskCategory, RiskVector, TemporaryId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightFindingsData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "entityMappings": [
                  {
                    "entityType": "Malware",
                    "fieldMappings": [
                      {
                        "columnName": "RiskVector",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "RiskCategory",
                        "identifier": "Category"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nTemporaryId: {{TemporaryId}}\\nRisk Vector: {{RiskVector}}",
                  "alertDisplayNameFormat": "BitSight: Alert for {{RiskCategory}} in {{CompanyName}} from BitSight"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 3",
                "parentId": "[variables('analyticRuleId3')]",
                "contentId": "[variables('_analyticRulecontentId3')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 4 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "BitSightDiligenceRiskCategoryDetected_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId4')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect whenever there is a diligence risk category found in BitSight.",
                "displayName": "BitSight - diligence risk category detected",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightFindingsData\n| where ingestion_time() > ago(timeframe)\n| where RiskCategory == \"Diligence\"\n| extend Severity = toreal(Severity)\n| extend Severity = case( Severity <= 6.9 and Severity >= 4.0, \"Low\",\n                          Severity <= 8.9 and Severity >= 7.0, \"Medium\",\n                          Severity <= 10.0 and Severity >= 9.0, \"High\",\n                          \"Informational\")\n| project FirstSeen, CompanyName, Severity, RiskCategory, TemporaryId, RiskVector\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightFindingsData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "entityMappings": [
                  {
                    "entityType": "Malware",
                    "fieldMappings": [
                      {
                        "columnName": "RiskVector",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "RiskCategory",
                        "identifier": "Category"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nTemporaryId: {{TemporaryId}}\\nRisk Vector: {{RiskVector}}",
                  "alertDisplayNameFormat": "BitSight: Alert for {{RiskCategory}} in {{CompanyName}} from BitSight"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 4",
                "parentId": "[variables('analyticRuleId4')]",
                "contentId": "[variables('_analyticRulecontentId4')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 5 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "BitSightDropInHeadlineRating_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId5')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect if headline ratings is drop in BitSight.",
                "displayName": "BitSight - drop in the headline rating",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightGraphData\n| where ingestion_time() > ago(timeframe)\n| where toint(RatingDifferance) < 0\n| project RatingDate, Rating, CompanyName, RatingDifferance\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightGraphData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "entityMappings": [
                  {
                    "entityType": "Sentinel entities",
                    "fieldMappings": [
                      {
                        "columnName": "AlertId",
                        "identifier": "Entities"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "BitSight : Alert for drop in the headline rating of {{CompanyName}}.",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nRating Date: {{RatingDate}}\\nRating Drop: {{RatingDifferance}}"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 5",
                "parentId": "[variables('analyticRuleId5')]",
                "contentId": "[variables('_analyticRulecontentId5')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 6 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName6'),'/',variables('analyticRuleVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "BitSightNewBreachFound_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId6')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect a new breach generated in BitSight.",
                "displayName": "BitSight - new breach found",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightBreaches\n| where ingestion_time() > ago(timeframe)\n| extend Severity = toreal(Severity)\n| extend Severity = case( Severity == 1, \"Low\",\n                          Severity == 2, \"Medium\",\n                          Severity == 3, \"High\",\n                          \"Informational\")\n| project DateCreated, Companyname, Severity, PreviwURL, GUID\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightBreaches"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "entityMappings": [
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "PreviwURL",
                        "identifier": "Url"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert is generated on {{DateCreated}} at BitSight.\\n\\nGUID: {{GUID}}\\nPreview URL: {{PreviwURL}}",
                  "alertDisplayNameFormat": "BitSight: Alert for new breach in {{Companyname}}."
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId6'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 6",
                "parentId": "[variables('analyticRuleId6')]",
                "contentId": "[variables('_analyticRulecontentId6')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 7 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName7'),'/',variables('analyticRuleVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "BitSightBadOpenPortsDetected_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId7')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect whenever there is a new bad open ports found in BitSight.",
                "displayName": "BitSight - bad open ports detected",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightFindingsData\n| where ingestion_time() > ago(timeframe)\n| where RiskVector == \"open_ports\"\n| extend Severity = toreal(Severity)\n| extend Severity = case( Severity <= 6.9 and Severity >= 4.0, \"Low\",\n                          Severity <= 8.9 and Severity >= 7.0, \"Medium\",\n                          Severity <= 10.0 and Severity >= 9.0, \"High\",\n                          \"Informational\")\n| project FirstSeen, CompanyName, Severity, RiskVector, TemporaryId, RiskCategory\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightFindingsData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "entityMappings": [
                  {
                    "entityType": "Malware",
                    "fieldMappings": [
                      {
                        "columnName": "RiskVector",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "RiskCategory",
                        "identifier": "Category"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nTemporaryId: {{TemporaryId}}\\nRisk Category: {{RiskCategory}}",
                  "alertDisplayNameFormat": "BitSight: Alert for {{RiskVector}} in {{CompanyName}} for bad ports in opened state"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId7'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 7",
                "parentId": "[variables('analyticRuleId7')]",
                "contentId": "[variables('_analyticRulecontentId7')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 8 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName8'),'/',variables('analyticRuleVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "BitSightBotnetInfectionDetected_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId8')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect whenever there is a botnet infection found in BitSight.",
                "displayName": "BitSight - botnet infection detected",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightFindingsData\n| where ingestion_time() > ago(timeframe)\n| where RiskVector == \"botnet_infections\"\n| extend Severity = toreal(Severity)\n| extend Severity = case( Severity <= 6.9 and Severity >= 4.0, \"Low\",\n                          Severity <= 8.9 and Severity >= 7.0, \"Medium\",\n                          Severity <= 10.0 and Severity >= 9.0, \"High\",\n                          \"Informational\")\n| project FirstSeen, CompanyName, Severity, RiskVector, TemporaryId, RiskCategory\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightFindingsData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "entityMappings": [
                  {
                    "entityType": "Malware",
                    "fieldMappings": [
                      {
                        "columnName": "RiskVector",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "RiskCategory",
                        "identifier": "Category"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nTemporaryId: {{TemporaryId}}\\nRisk Category: {{RiskCategory}}",
                  "alertDisplayNameFormat": "BitSight: Alert for {{RiskVector}} in {{CompanyName}} from BitSight"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId8'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 8",
                "parentId": "[variables('analyticRuleId8')]",
                "contentId": "[variables('_analyticRulecontentId8')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 9 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName9'),'/',variables('analyticRuleVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "BitSightPatchingCadenceDetected_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId9')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect whenever there is a patching cadence found in BitSight.",
                "displayName": "BitSight - patching cadence detected",
                "enabled": false,
                "query": "let timeframe = 24h;\nBitSightFindingsData\n| where ingestion_time() > ago(timeframe)\n| where RiskVector == \"patching_cadence\"\n| extend Severity = toreal(Severity)\n| extend Severity = case( Severity <= 6.9 and Severity >= 4.0, \"Low\",\n                          Severity <= 8.9 and Severity >= 7.0, \"Medium\",\n                          Severity <= 10.0 and Severity >= 9.0, \"High\",\n                          \"Informational\")\n| project FirstSeen, CompanyName, Severity, RiskVector, RiskCategory, TemporaryId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "PT24H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "BitSightFindingsData"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "entityMappings": [
                  {
                    "entityType": "Malware",
                    "fieldMappings": [
                      {
                        "columnName": "RiskVector",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "RiskCategory",
                        "identifier": "Category"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "Alert is generated for {{CompanyName}}.\\n\\nTemporaryId: {{TemporaryId}}\\nRisk Category: {{RiskCategory}}",
                  "alertDisplayNameFormat": "BitSight: Alert for {{RiskVector}} in {{CompanyName}} from BitSight"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId9'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 9",
                "parentId": "[variables('analyticRuleId9')]",
                "contentId": "[variables('_analyticRulecontentId9')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "BitSight Analytics Rule 10 with template",
        "displayName": "BitSight Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName10'),'/',variables('analyticRuleVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "BitSightGetWorkFromData_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId10')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to generate an incident while new ip comes in networksession.",
                "displayName": "BitSight - get work from home",
                "enabled": false,
                "query": "ASimNetworkSession\n| where EventSchema == \"NetworkSession\"\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "ASimNetworkSession"
                    ],
                    "connectorId": "BitSight"
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "entityMappings": [
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "Src",
                        "identifier": "Address"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "ip_address": "Src"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "EventSeverity",
                  "alertDisplayNameFormat": "BitSight: got new IP: {{Src}} in ASimNetworkSession."
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId10'),'/'))))]",
              "properties": {
                "description": "BitSight Analytics Rule 10",
                "parentId": "[variables('analyticRuleId10')]",
                "contentId": "[variables('_analyticRulecontentId10')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "BitSight-Get-WFH-Data playbook",
        "displayName": "BitSight-Get-WFH-Data playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "BitSight-Get-WFH-Data Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "BitSight-Get-WFH-Data",
              "type": "string"
            },
            "KeyVaultName": {
              "defaultValue": "BitSightWFHData",
              "type": "string"
            },
            "tenantId": {
              "minLength": 1,
              "type": "string"
            },
            "LogAnalyticsWorkspaceId": {
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "The unique identifier of the Azure Log Analytics workspace."
              }
            },
            "LogAnalyticsWorkspaceKey": {
              "type": "securestring",
              "metadata": {
                "description": "The primary or secondary key of the Azure Log Analytics workspace."
              }
            },
            "WFHTableName": {
              "defaultValue": "BitSight_WFH_data",
              "type": "string",
              "metadata": {
                "description": "The table name in which WFH Data will get store."
              }
            }
          },
          "variables": {
            "AzureloganalyticsdatacollectorConnectionName": "[[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('Keyvault-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Get_API_token": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('API-token')}/value"
                      },
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Get_IP_address_from_incident": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('Get_IP_address_from_incident')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "properties": {
                                "ip_address": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Set_IP_address": {
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "IP_address",
                            "value": "@{body('Parse_JSON')?['ip_address'][0]}"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_to_check_next_page_in_pagination": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_API_token": {
                      "runAfter": {
                        "Get_API_token": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "API_token",
                            "type": "string",
                            "value": "@{concat('Basic ',base64(concat(string(body('Get_API_token')?['value']),':',string(body('Get_API_token')?['value']))))}"
                          }
                        ]
                      }
                    },
                    "Initialize_data_to_post": {
                      "runAfter": {
                        "Initialize_offset_for_API_call": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "data_to_post",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_offset_for_API_call": {
                      "runAfter": {
                        "Initialize_variable_IP_address": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "offset",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "Initialize_variable_IP_address": {
                      "runAfter": {
                        "Initialize_API_token": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IP_address",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_to_check_next_page_in_pagination": {
                      "runAfter": {
                        "Initialize_data_to_post": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "next_exist",
                            "type": "boolean"
                          }
                        ]
                      }
                    },
                    "Post_WFH_data_into_sentinel": {
                      "foreach": "@variables('data_to_post')",
                      "actions": {
                        "Send_Data": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "@{items('Post_WFH_data_into_sentinel')}",
                            "headers": {
                              "Log-Type": "[[parameters('WFHTableName')]"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/api/logs"
                          }
                        }
                      },
                      "runAfter": {
                        "Until": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Until": {
                      "actions": {
                        "Check_for_status_code": {
                          "actions": {
                            "Parse_JSON_2": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_WFH_Data_(API_Call)')",
                                "schema": {
                                  "properties": {
                                    "count": {
                                      "type": "integer"
                                    },
                                    "links": {
                                      "properties": {
                                        "next": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "previous": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "results": {
                                      "items": {
                                        "properties": {
                                          "collection_date": {
                                            "type": "string"
                                          },
                                          "country": {
                                            "properties": {
                                              "code": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "details": {
                                            "properties": {
                                              "grade": {
                                                "properties": {
                                                  "grade": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "low_vulnerabilities": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "message": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "response": {
                                                "type": "string"
                                              },
                                              "service": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "event_date": {
                                            "type": "string"
                                          },
                                          "forensics": {
                                            "properties": {
                                              "host_ip": {
                                                "type": "string"
                                              },
                                              "host_port": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "observation_id": {
                                            "type": "string"
                                          },
                                          "occurrences": {
                                            "properties": {
                                              "count": {
                                                "type": "integer"
                                              },
                                              "event_date": {
                                                "type": "string"
                                              },
                                              "first_seen": {
                                                "type": "string"
                                              },
                                              "last_seen": {
                                                "type": "string"
                                              },
                                              "representative_timestamp": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "risk_type": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "summaries": {
                                      "properties": {
                                        "infections": {
                                          "type": "array"
                                        },
                                        "ips": {
                                          "items": {
                                            "properties": {
                                              "findings": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "grades": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "infections": {
                                                "type": "array"
                                              },
                                              "ip_address": {
                                                "type": "string"
                                              },
                                              "locations": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "risk_types": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "service_providers": {
                                                "type": "array"
                                              },
                                              "services": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "vulnerabilities": {
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "locations": {
                                          "items": {
                                            "properties": {
                                              "country": {
                                                "type": "string"
                                              },
                                              "country_code": {
                                                "type": "string"
                                              },
                                              "findings": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "grades": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "ips": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "non_isp": {
                                          "type": "array"
                                        },
                                        "request": {
                                          "properties": {
                                            "eligible_ip_count": {
                                              "type": "integer"
                                            },
                                            "ineligible_ip_count": {
                                              "type": "integer"
                                            },
                                            "ip_with_event_count": {
                                              "type": "integer"
                                            },
                                            "non_isp": {
                                              "type": "array"
                                            },
                                            "requested_ip_count": {
                                              "type": "integer"
                                            },
                                            "requested_ips": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "risk_types": {
                                          "items": {
                                            "properties": {
                                              "findings": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "grades": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "ips": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "risk_type": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "service_providers": {
                                          "type": "array"
                                        },
                                        "services": {
                                          "items": {
                                            "properties": {
                                              "findings": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "grades": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "ips": {
                                                "properties": {
                                                  "total_count": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "service": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "vulnerabilities": {
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "append_result_data_to_data_to_post_list": {
                              "foreach": "@body('Parse_JSON_2')?['results']",
                              "actions": {
                                "Append_to_array_variable": {
                                  "runAfter": {
                                    "Compose": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "data_to_post",
                                    "value": "@outputs('Compose')"
                                  }
                                },
                                "Compose": {
                                  "type": "Compose",
                                  "inputs": {
                                    "results": "@items('append_result_data_to_data_to_post_list')",
                                    "service_providers": "@body('Parse_JSON_2')?['summaries']?['service_providers']"
                                  }
                                }
                              },
                              "runAfter": {
                                "Parse_JSON_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "check_if_next_page_is_exist_or_not_in_response": {
                              "actions": {
                                "Set_next_exist_variable_to_false": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "next_exist",
                                    "value": "@false"
                                  }
                                }
                              },
                              "runAfter": {
                                "append_result_data_to_data_to_post_list": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Increment_offset_variable": {
                                    "runAfter": {
                                      "Set_next_exist_variable_to_true": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "IncrementVariable",
                                    "inputs": {
                                      "name": "offset",
                                      "value": 1000
                                    }
                                  },
                                  "Set_next_exist_variable_to_true": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "next_exist",
                                      "value": "@true"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@body('Parse_JSON_2')?['links']?['next']",
                                      "@null"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {
                            "Get_WFH_Data_(API_Call)": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@outputs('Get_WFH_Data_(API_Call)')['statusCode']",
                                  200
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_WFH_Data_(API_Call)": {
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "@variables('API_token')"
                            },
                            "method": "GET",
                            "queries": {
                              "ips": "@variables('IP_address')",
                              "limit": "1000",
                              "offset": "@{variables('offset')}"
                            },
                            "uri": "https://api.bitsighttech.com/ratings/v1/findings/wfh/"
                          }
                        }
                      },
                      "runAfter": {
                        "Get_IP_address_from_incident": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@equals(variables('next_exist'), false)",
                      "limit": {
                        "count": 60,
                        "timeout": "PT1H"
                      },
                      "type": "Until"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureloganalyticsdatacollector": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                        "connectionName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]"
                      },
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "BitSight-Get-WFH-Data",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                },
                "parameterValues": {
                  "username": "[[parameters('LogAnalyticsWorkspaceId')]",
                  "password": "[[parameters('LogAnalyticsWorkspaceKey')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('KeyvaultConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                },
                "parameterValues": {
                  "token:TenantId": "[[parameters('tenantId')]",
                  "token:grantType": "code",
                  "vaultName": "[[parameters('keyvaultName')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ],
          "metadata": {
            "title": "BitSightWFHData",
            "description": "This playbook provides an end to end example of the collection of WFH information from BitSight. This will extract the IP from network session ASIM data and call the WFH api of BitSight to get the data of that specific IP and store the relevant WFH custom log table into a log analytic workspace.",
            "prerequisites": [
              "1. Users must have a valid bitsight API token.",
              "2. Need to create a key vault in Microsoft sentinel and store the API token as secret with the name “API-token",
              "3. User needs to have one active log analytic workspace to ingest the WFH data."
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Click the Custom Connector connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "6. Repeat steps for other connections"
            ],
            "lastUpdateTime": "2023-01-25",
            "entities": [
              "account",
              "url"
            ],
            "tags": [
              "Alerts",
              "Ratings",
              "BitSight"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightAlerts Data Parser with template",
        "displayName": "BitSightAlerts Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "BitSightAlerts Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightAlerts",
                "category": "Samples",
                "functionAlias": "BitSightAlerts",
                "query": "\nlet Alerts_view  = view () { \r\n    Alerts_data_CL\r\n    | extend \r\n                EventVendor =\"AlertBitSight\",\r\n                EventProduct =\"AlertBitSight\",\r\n                GUID = column_ifexists('guid_d', ''),\r\n                AlertType = column_ifexists('alert_type_s', ''),\r\n                AlertDate = column_ifexists('alert_date_s', ''),\r\n                StartDate = column_ifexists('start_date_s', ''),\r\n                CompanyName = column_ifexists('company_name_s', ''),\r\n                CompanyGUID = column_ifexists('company_guid_g', ''),\r\n                CompanyURL = column_ifexists('company_url_s', ''),\r\n                FolderGUID = column_ifexists('folder_guid_g', ''),\r\n                FolderName = column_ifexists('folder_name_s', ''),\r\n                Severity = column_ifexists('severity_s', ''),\r\n                Trigger = column_ifexists('trigger_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                GUID,\r\n                AlertType,\r\n                AlertDate,\r\n                StartDate,\r\n                CompanyName,\r\n                CompanyGUID,\r\n                CompanyURL,\r\n                FolderGUID,\r\n                FolderName,\r\n                Severity,\r\n                Trigger,\r\n                Type\r\n};\r\nAlerts_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightAlerts"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightAlerts",
        "category": "Samples",
        "functionAlias": "BitSightAlerts",
        "query": "\nlet Alerts_view  = view () { \r\n    Alerts_data_CL\r\n    | extend \r\n                EventVendor =\"AlertBitSight\",\r\n                EventProduct =\"AlertBitSight\",\r\n                GUID = column_ifexists('guid_d', ''),\r\n                AlertType = column_ifexists('alert_type_s', ''),\r\n                AlertDate = column_ifexists('alert_date_s', ''),\r\n                StartDate = column_ifexists('start_date_s', ''),\r\n                CompanyName = column_ifexists('company_name_s', ''),\r\n                CompanyGUID = column_ifexists('company_guid_g', ''),\r\n                CompanyURL = column_ifexists('company_url_s', ''),\r\n                FolderGUID = column_ifexists('folder_guid_g', ''),\r\n                FolderName = column_ifexists('folder_name_s', ''),\r\n                Severity = column_ifexists('severity_s', ''),\r\n                Trigger = column_ifexists('trigger_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                GUID,\r\n                AlertType,\r\n                AlertDate,\r\n                StartDate,\r\n                CompanyName,\r\n                CompanyGUID,\r\n                CompanyURL,\r\n                FolderGUID,\r\n                FolderName,\r\n                Severity,\r\n                Trigger,\r\n                Type\r\n};\r\nAlerts_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightBreaches Data Parser with template",
        "displayName": "BitSightBreaches Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName2'),'/',variables('parserVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "BitSightBreaches Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName2')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightBreaches",
                "category": "Samples",
                "functionAlias": "BitSightBreaches",
                "query": "\nlet Breaches_view  = view () { \r\n    Breaches_data_CL\r\n    | extend \r\n                EventVendor =\"BreachesBitSight\",\r\n                EventProduct =\"BreachesBitSight\",\r\n                GUID = column_ifexists('guid_d', ''),\r\n                Date = column_ifexists('date_s', ''),\r\n                Severity = column_ifexists('Severity', ''),\r\n                Text = column_ifexists('text_s', ''),\r\n                DateCreated = column_ifexists('date_created_s', ''),\r\n                PreviwURL = column_ifexists('preview_url_s', ''),\r\n                EventType = column_ifexists('event_type_s', ''),\r\n                EventTypeDescription = column_ifexists('event_type_description_s', ''),\r\n                BreachedCompanies = column_ifexists('breached_companies_s', ''),\r\n                DependentCompanies = column_ifexists('dependent_companies_s', ''),\r\n                Companyname = column_ifexists('company_name_s', ''),\r\n                CompanyGUID = column_ifexists('company_guid_g', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                GUID,\r\n                Date,\r\n                Severity,\r\n                Text,\r\n                DateCreated,\r\n                PreviwURL,\r\n                EventType,\r\n                EventTypeDescription,\r\n                BreachedCompanies,\r\n                DependentCompanies,\r\n                Companyname,\r\n                CompanyGUID,\r\n                Type \r\n};\r\nBreaches_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightBreaches"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName2')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
                "contentId": "[variables('_parserContentId2')]",
                "kind": "Parser",
                "version": "[variables('parserVersion2')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName2')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightBreaches",
        "category": "Samples",
        "functionAlias": "BitSightBreaches",
        "query": "\nlet Breaches_view  = view () { \r\n    Breaches_data_CL\r\n    | extend \r\n                EventVendor =\"BreachesBitSight\",\r\n                EventProduct =\"BreachesBitSight\",\r\n                GUID = column_ifexists('guid_d', ''),\r\n                Date = column_ifexists('date_s', ''),\r\n                Severity = column_ifexists('Severity', ''),\r\n                Text = column_ifexists('text_s', ''),\r\n                DateCreated = column_ifexists('date_created_s', ''),\r\n                PreviwURL = column_ifexists('preview_url_s', ''),\r\n                EventType = column_ifexists('event_type_s', ''),\r\n                EventTypeDescription = column_ifexists('event_type_description_s', ''),\r\n                BreachedCompanies = column_ifexists('breached_companies_s', ''),\r\n                DependentCompanies = column_ifexists('dependent_companies_s', ''),\r\n                Companyname = column_ifexists('company_name_s', ''),\r\n                CompanyGUID = column_ifexists('company_guid_g', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                GUID,\r\n                Date,\r\n                Severity,\r\n                Text,\r\n                DateCreated,\r\n                PreviwURL,\r\n                EventType,\r\n                EventTypeDescription,\r\n                BreachedCompanies,\r\n                DependentCompanies,\r\n                Companyname,\r\n                CompanyGUID,\r\n                Type \r\n};\r\nBreaches_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId2')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
        "contentId": "[variables('_parserContentId2')]",
        "kind": "Parser",
        "version": "[variables('parserVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightCompanyDetails Data Parser with template",
        "displayName": "BitSightCompanyDetails Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName3'),'/',variables('parserVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "BitSightCompanyDetails Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName3')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightCompanyDetails",
                "category": "Samples",
                "functionAlias": "BitSightCompanyDetails",
                "query": "\nlet CompanyDetails_view  = view () { \r\n    Company_details_CL\r\n    | extend \r\n                EventVendor =\"CompanyDetailsBitSight\",\r\n                EventProduct =\"CompanyDetailsBitSight\",\r\n                PrimaryCompanyGUID = column_ifexists('primary_company_guid_g', ''),\r\n                PrimaryCompanyName = column_ifexists('primary_company_name_s', ''),\r\n                AvailableUpgradeTypes = column_ifexists('available_upgrade_types_s', ''),\r\n                BulkEmailSenderStatus = column_ifexists('bulk_email_sender_status_s', ''),\r\n                CompanyFeatures = column_ifexists('company_features_s', ''),\r\n                CustomerMonitoringCount = column_ifexists('customer_monitoring_count_d', ''),\r\n                Description = column_ifexists('description_s', ''),\r\n                DisplayURL = column_ifexists('display_url_s', ''),\r\n                GUID = column_ifexists('guid_g', ''),\r\n                HasCompanyTree = column_ifexists('has_company_tree_b', ''),\r\n                HasPreferredContact = column_ifexists('has_preferred_contact_b', ''),\r\n                Hompage = column_ifexists('homepage_s', ''),\r\n                InSpmPortfolio = column_ifexists('in_spm_portfolio_b', ''),\r\n                Industry = column_ifexists('industry_s', ''),\r\n                IndustrySlug = column_ifexists('industry_slug_s', ''),\r\n                Ipv4Count = column_ifexists('ipv4_count_d', ''),\r\n                IsBundle = column_ifexists('is_bundle_b', ''),\r\n                IsCsp = column_ifexists('is_csp_b', ''),\r\n                IsMycompMysubsBundle = column_ifexists('is_mycomp_mysubs_bundle_b', ''),\r\n                IsPrimary = column_ifexists('is_primary_b', ''),\r\n                IsUnsampledAllowed = column_ifexists('is_unsampled_allowed_b', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                PeopleCount = column_ifexists('people_count_d', ''),\r\n                PermissionCanAnnotate = column_ifexists('permissions_can_annotate_b', ''),\r\n                PermissionCanDownloadCompanyReport = column_ifexists('permissions_can_download_company_report_b', ''),\r\n                PermissionCanEnableVendorAccess = column_ifexists('permissions_can_enable_vendor_access_b', ''),\r\n                PermissionCanViewCompanyReports = column_ifexists('permissions_can_view_company_reports_b', ''),\r\n                PermissionCanViewForensics = column_ifexists('permissions_can_view_forensics_b', ''),\r\n                PermissionCanViewInfrastructure = column_ifexists('permissions_can_view_infrastructure_b', ''),\r\n                PermissionCanViewIpAttributions = column_ifexists('permissions_can_view_ip_attributions_b', ''),\r\n                PermissionCanViewServiceProviders = column_ifexists('permissions_can_view_service_providers_b', ''),\r\n                PermissionsHasControl = column_ifexists('permissions_has_control_b', ''),\r\n                PrimaryDomain = column_ifexists('primary_domain_s', ''),\r\n                RatingIndustryMedian = column_ifexists('rating_industry_median_s', ''),\r\n                Ratings = column_ifexists('ratings_s', ''),\r\n                RelatedCompanies = column_ifexists('related_companies_s', ''),\r\n                SearchCount = column_ifexists('search_count_d', ''),\r\n                ServiceProvider = column_ifexists('service_provider_b', ''),\r\n                Shortname = column_ifexists('shortname_s', ''),\r\n                Sparkline = column_ifexists('sparkline_s', ''),\r\n                SubIndustry = column_ifexists('sub_industry_s', ''),\r\n                SubIndustrySlug = column_ifexists('sub_industry_slug_s', ''),\r\n                SubscriptionType = column_ifexists('subscription_type_s', ''),\r\n                SubscriptionTypeKey = column_ifexists('subscription_type_key_s', ''),\r\n                ComplianceClaimCertifications = column_ifexists('compliance_claim_certifications_s', ''),\r\n                ComplianceClaimTrustPage = column_ifexists('compliance_claim_trust_page_s', ''),\r\n                type = column_ifexists('type_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                PrimaryCompanyGUID,\r\n                PrimaryCompanyName,\r\n                AvailableUpgradeTypes,\r\n                BulkEmailSenderStatus,\r\n                CompanyFeatures,\r\n                CustomerMonitoringCount,\r\n                Description,\r\n                DisplayURL,\r\n                GUID,\r\n                HasCompanyTree,\r\n                HasPreferredContact,\r\n                Hompage,\r\n                InSpmPortfolio,\r\n                Industry,\r\n                IndustrySlug,\r\n                Ipv4Count,\r\n                IsBundle,\r\n                IsCsp,\r\n                IsMycompMysubsBundle,\r\n                IsPrimary,\r\n                IsUnsampledAllowed,\r\n                Name,\r\n                PeopleCount,\r\n                PermissionCanAnnotate,\r\n                PermissionCanDownloadCompanyReport,\r\n                PermissionCanEnableVendorAccess,\r\n                PermissionCanViewCompanyReports,\r\n                PermissionCanViewForensics,\r\n                PermissionCanViewInfrastructure,\r\n                PermissionCanViewIpAttributions,\r\n                PermissionCanViewServiceProviders,\r\n                PermissionsHasControl,\r\n                PrimaryDomain,\r\n                RatingIndustryMedian,\r\n                Ratings,\r\n                RelatedCompanies,\r\n                SearchCount,\r\n                ServiceProvider,\r\n                Shortname,\r\n                Sparkline,\r\n                SubIndustry,\r\n                SubIndustrySlug,\r\n                SubscriptionType,\r\n                SubscriptionTypeKey,\r\n                ComplianceClaimCertifications,\r\n                ComplianceClaimTrustPage,\r\n                type,\r\n                Type\r\n};\r\nCompanyDetails_view \r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightCompanyDetails"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName3')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
                "contentId": "[variables('_parserContentId3')]",
                "kind": "Parser",
                "version": "[variables('parserVersion3')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName3')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightCompanyDetails",
        "category": "Samples",
        "functionAlias": "BitSightCompanyDetails",
        "query": "\nlet CompanyDetails_view  = view () { \r\n    Company_details_CL\r\n    | extend \r\n                EventVendor =\"CompanyDetailsBitSight\",\r\n                EventProduct =\"CompanyDetailsBitSight\",\r\n                PrimaryCompanyGUID = column_ifexists('primary_company_guid_g', ''),\r\n                PrimaryCompanyName = column_ifexists('primary_company_name_s', ''),\r\n                AvailableUpgradeTypes = column_ifexists('available_upgrade_types_s', ''),\r\n                BulkEmailSenderStatus = column_ifexists('bulk_email_sender_status_s', ''),\r\n                CompanyFeatures = column_ifexists('company_features_s', ''),\r\n                CustomerMonitoringCount = column_ifexists('customer_monitoring_count_d', ''),\r\n                Description = column_ifexists('description_s', ''),\r\n                DisplayURL = column_ifexists('display_url_s', ''),\r\n                GUID = column_ifexists('guid_g', ''),\r\n                HasCompanyTree = column_ifexists('has_company_tree_b', ''),\r\n                HasPreferredContact = column_ifexists('has_preferred_contact_b', ''),\r\n                Hompage = column_ifexists('homepage_s', ''),\r\n                InSpmPortfolio = column_ifexists('in_spm_portfolio_b', ''),\r\n                Industry = column_ifexists('industry_s', ''),\r\n                IndustrySlug = column_ifexists('industry_slug_s', ''),\r\n                Ipv4Count = column_ifexists('ipv4_count_d', ''),\r\n                IsBundle = column_ifexists('is_bundle_b', ''),\r\n                IsCsp = column_ifexists('is_csp_b', ''),\r\n                IsMycompMysubsBundle = column_ifexists('is_mycomp_mysubs_bundle_b', ''),\r\n                IsPrimary = column_ifexists('is_primary_b', ''),\r\n                IsUnsampledAllowed = column_ifexists('is_unsampled_allowed_b', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                PeopleCount = column_ifexists('people_count_d', ''),\r\n                PermissionCanAnnotate = column_ifexists('permissions_can_annotate_b', ''),\r\n                PermissionCanDownloadCompanyReport = column_ifexists('permissions_can_download_company_report_b', ''),\r\n                PermissionCanEnableVendorAccess = column_ifexists('permissions_can_enable_vendor_access_b', ''),\r\n                PermissionCanViewCompanyReports = column_ifexists('permissions_can_view_company_reports_b', ''),\r\n                PermissionCanViewForensics = column_ifexists('permissions_can_view_forensics_b', ''),\r\n                PermissionCanViewInfrastructure = column_ifexists('permissions_can_view_infrastructure_b', ''),\r\n                PermissionCanViewIpAttributions = column_ifexists('permissions_can_view_ip_attributions_b', ''),\r\n                PermissionCanViewServiceProviders = column_ifexists('permissions_can_view_service_providers_b', ''),\r\n                PermissionsHasControl = column_ifexists('permissions_has_control_b', ''),\r\n                PrimaryDomain = column_ifexists('primary_domain_s', ''),\r\n                RatingIndustryMedian = column_ifexists('rating_industry_median_s', ''),\r\n                Ratings = column_ifexists('ratings_s', ''),\r\n                RelatedCompanies = column_ifexists('related_companies_s', ''),\r\n                SearchCount = column_ifexists('search_count_d', ''),\r\n                ServiceProvider = column_ifexists('service_provider_b', ''),\r\n                Shortname = column_ifexists('shortname_s', ''),\r\n                Sparkline = column_ifexists('sparkline_s', ''),\r\n                SubIndustry = column_ifexists('sub_industry_s', ''),\r\n                SubIndustrySlug = column_ifexists('sub_industry_slug_s', ''),\r\n                SubscriptionType = column_ifexists('subscription_type_s', ''),\r\n                SubscriptionTypeKey = column_ifexists('subscription_type_key_s', ''),\r\n                ComplianceClaimCertifications = column_ifexists('compliance_claim_certifications_s', ''),\r\n                ComplianceClaimTrustPage = column_ifexists('compliance_claim_trust_page_s', ''),\r\n                type = column_ifexists('type_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n\t\t\t\tEventVendor,\r\n                EventProduct,\r\n                PrimaryCompanyGUID,\r\n                PrimaryCompanyName,\r\n                AvailableUpgradeTypes,\r\n                BulkEmailSenderStatus,\r\n                CompanyFeatures,\r\n                CustomerMonitoringCount,\r\n                Description,\r\n                DisplayURL,\r\n                GUID,\r\n                HasCompanyTree,\r\n                HasPreferredContact,\r\n                Hompage,\r\n                InSpmPortfolio,\r\n                Industry,\r\n                IndustrySlug,\r\n                Ipv4Count,\r\n                IsBundle,\r\n                IsCsp,\r\n                IsMycompMysubsBundle,\r\n                IsPrimary,\r\n                IsUnsampledAllowed,\r\n                Name,\r\n                PeopleCount,\r\n                PermissionCanAnnotate,\r\n                PermissionCanDownloadCompanyReport,\r\n                PermissionCanEnableVendorAccess,\r\n                PermissionCanViewCompanyReports,\r\n                PermissionCanViewForensics,\r\n                PermissionCanViewInfrastructure,\r\n                PermissionCanViewIpAttributions,\r\n                PermissionCanViewServiceProviders,\r\n                PermissionsHasControl,\r\n                PrimaryDomain,\r\n                RatingIndustryMedian,\r\n                Ratings,\r\n                RelatedCompanies,\r\n                SearchCount,\r\n                ServiceProvider,\r\n                Shortname,\r\n                Sparkline,\r\n                SubIndustry,\r\n                SubIndustrySlug,\r\n                SubscriptionType,\r\n                SubscriptionTypeKey,\r\n                ComplianceClaimCertifications,\r\n                ComplianceClaimTrustPage,\r\n                type,\r\n                Type\r\n};\r\nCompanyDetails_view \r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId3')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
        "contentId": "[variables('_parserContentId3')]",
        "kind": "Parser",
        "version": "[variables('parserVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightCompanyRatings Data Parser with template",
        "displayName": "BitSightCompanyRatings Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName4'),'/',variables('parserVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "BitSightCompanyRatings Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName4')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightCompanyRatings",
                "category": "Samples",
                "functionAlias": "BitSightCompanyRatings",
                "query": "\nlet CompanyRatings_view  = view () { \r\n    Company_rating_details_CL\r\n    | extend \r\n                EventVendor =\"CompanyRatingBitSight\",\r\n                EventProduct =\"CompanyRatingBitSight\",\r\n                CompanyName = column_ifexists('Company_name_s', ''),\r\n                Beta = column_ifexists('beta_b', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                CategoryOrder = column_ifexists('category_order_d', ''),\r\n                DisplayURL = column_ifexists('display_url_s', ''),\r\n                Grade = column_ifexists('grade_s', ''),\r\n                GradeColor = column_ifexists('grade_color_s', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                Order = column_ifexists('order_d', ''),\r\n                Percentile = column_ifexists('percentile_d', ''),\r\n                Rating = column_ifexists('rating_d', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                CompanyName,\r\n                Beta,\r\n                Category,\r\n                CategoryOrder,\r\n                DisplayURL,\r\n                Grade,\r\n                GradeColor,\r\n                Name,\r\n                Order,\r\n                Percentile,\r\n                Rating,\r\n                Type\r\n};\r\nCompanyRatings_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightCompanyRatings"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId4'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName4')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
                "contentId": "[variables('_parserContentId4')]",
                "kind": "Parser",
                "version": "[variables('parserVersion4')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName4')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightCompanyRatings",
        "category": "Samples",
        "functionAlias": "BitSightCompanyRatings",
        "query": "\nlet CompanyRatings_view  = view () { \r\n    Company_rating_details_CL\r\n    | extend \r\n                EventVendor =\"CompanyRatingBitSight\",\r\n                EventProduct =\"CompanyRatingBitSight\",\r\n                CompanyName = column_ifexists('Company_name_s', ''),\r\n                Beta = column_ifexists('beta_b', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                CategoryOrder = column_ifexists('category_order_d', ''),\r\n                DisplayURL = column_ifexists('display_url_s', ''),\r\n                Grade = column_ifexists('grade_s', ''),\r\n                GradeColor = column_ifexists('grade_color_s', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                Order = column_ifexists('order_d', ''),\r\n                Percentile = column_ifexists('percentile_d', ''),\r\n                Rating = column_ifexists('rating_d', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                CompanyName,\r\n                Beta,\r\n                Category,\r\n                CategoryOrder,\r\n                DisplayURL,\r\n                Grade,\r\n                GradeColor,\r\n                Name,\r\n                Order,\r\n                Percentile,\r\n                Rating,\r\n                Type\r\n};\r\nCompanyRatings_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId4'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId4')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
        "contentId": "[variables('_parserContentId4')]",
        "kind": "Parser",
        "version": "[variables('parserVersion4')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightDiligenceHistoricalStatistics Data Parser with template",
        "displayName": "BitSightDiligenceHistoricalStatistics Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName5'),'/',variables('parserVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "BitSightDiligenceHistoricalStatistics Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName5')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightDiligenceHistoricalStatistics",
                "category": "Samples",
                "functionAlias": "BitSightDiligenceHistoricalStatistics",
                "query": "\nlet DiligenceHistoricalStatistics_view  = view () { \r\n    Diligence_historical_statistics_CL\r\n    | extend \r\n                EventVendor =\"DiligenceHistoricalStatisticsBitSight\",\r\n                EventProduct =\"DiligenceHistoricalStatisticsBitSight\",\r\n                Count = column_ifexists('count_d', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                Date = column_ifexists('date_s', ''),\r\n                CompanyName = column_ifexists('company_name_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                Count,\r\n                Category,\r\n                Date,\r\n                CompanyName,\r\n                Type\r\n};\r\nDiligenceHistoricalStatistics_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightDiligenceHistoricalStatistics"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId5'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName5')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName5'))]",
                "contentId": "[variables('_parserContentId5')]",
                "kind": "Parser",
                "version": "[variables('parserVersion5')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName5')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightDiligenceHistoricalStatistics",
        "category": "Samples",
        "functionAlias": "BitSightDiligenceHistoricalStatistics",
        "query": "\nlet DiligenceHistoricalStatistics_view  = view () { \r\n    Diligence_historical_statistics_CL\r\n    | extend \r\n                EventVendor =\"DiligenceHistoricalStatisticsBitSight\",\r\n                EventProduct =\"DiligenceHistoricalStatisticsBitSight\",\r\n                Count = column_ifexists('count_d', ''),\r\n                Category = column_ifexists('Category', ''),\r\n                Date = column_ifexists('date_s', ''),\r\n                CompanyName = column_ifexists('company_name_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                Count,\r\n                Category,\r\n                Date,\r\n                CompanyName,\r\n                Type\r\n};\r\nDiligenceHistoricalStatistics_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId5'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId5')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName5'))]",
        "contentId": "[variables('_parserContentId5')]",
        "kind": "Parser",
        "version": "[variables('parserVersion5')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightDiligenceStatistics Data Parser with template",
        "displayName": "BitSightDiligenceStatistics Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName6'),'/',variables('parserVersion6'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName6'))]"
      ],
      "properties": {
        "description": "BitSightDiligenceStatistics Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName6')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightDiligenceStatistics",
                "category": "Samples",
                "functionAlias": "BitSightDiligenceStatistics",
                "query": "\nlet DiligenceStatistics_view  = view () {\r\n    Diligence_statistics_CL\r\n    | extend\r\n                EventVendor =\"DiligenceStatisticsBitSight\",\r\n                EventProduct =\"DiligenceStatisticsBitSight\",\r\n                Unknown = column_ifexists('unknown_d', ''),\r\n                Bad = column_ifexists('bad_d', ''),\r\n                Warn = column_ifexists('warn_d', ''),\r\n                Neutral = column_ifexists('neutral_d', ''),\r\n                Fair = column_ifexists('fair_d', ''),\r\n                Good = column_ifexists('good_d', ''),\r\n                RiskVector = column_ifexists('risk_vector_s', ''),\r\n                CompanyName = column_ifexists('Company_name_s', ''),\r\n                SpearPhishing = column_ifexists('spear_phishing_d', ''),\r\n                BitFlip = column_ifexists('bit_flip_d', ''),\r\n                TypographicalErrors = column_ifexists('typographical_errors_d', ''),\r\n                TLDVariant = column_ifexists('tld_variant_d', ''),\r\n                TotalCount = column_ifexists('total_count_d', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                Unknown,\r\n                Bad,\r\n                Warn,\r\n                Neutral,\r\n                Fair,\r\n                Good,\r\n                RiskVector,\r\n                CompanyName,\r\n                SpearPhishing,\r\n                BitFlip,\r\n                TypographicalErrors,\r\n                TLDVariant,\r\n                TotalCount,\r\n                Type\r\n};\r\nDiligenceStatistics_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightDiligenceStatistics"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId6'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName6')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName6'))]",
                "contentId": "[variables('_parserContentId6')]",
                "kind": "Parser",
                "version": "[variables('parserVersion6')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName6')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightDiligenceStatistics",
        "category": "Samples",
        "functionAlias": "BitSightDiligenceStatistics",
        "query": "\nlet DiligenceStatistics_view  = view () {\r\n    Diligence_statistics_CL\r\n    | extend\r\n                EventVendor =\"DiligenceStatisticsBitSight\",\r\n                EventProduct =\"DiligenceStatisticsBitSight\",\r\n                Unknown = column_ifexists('unknown_d', ''),\r\n                Bad = column_ifexists('bad_d', ''),\r\n                Warn = column_ifexists('warn_d', ''),\r\n                Neutral = column_ifexists('neutral_d', ''),\r\n                Fair = column_ifexists('fair_d', ''),\r\n                Good = column_ifexists('good_d', ''),\r\n                RiskVector = column_ifexists('risk_vector_s', ''),\r\n                CompanyName = column_ifexists('Company_name_s', ''),\r\n                SpearPhishing = column_ifexists('spear_phishing_d', ''),\r\n                BitFlip = column_ifexists('bit_flip_d', ''),\r\n                TypographicalErrors = column_ifexists('typographical_errors_d', ''),\r\n                TLDVariant = column_ifexists('tld_variant_d', ''),\r\n                TotalCount = column_ifexists('total_count_d', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                Unknown,\r\n                Bad,\r\n                Warn,\r\n                Neutral,\r\n                Fair,\r\n                Good,\r\n                RiskVector,\r\n                CompanyName,\r\n                SpearPhishing,\r\n                BitFlip,\r\n                TypographicalErrors,\r\n                TLDVariant,\r\n                TotalCount,\r\n                Type\r\n};\r\nDiligenceStatistics_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId6'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId6')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName6'))]",
        "contentId": "[variables('_parserContentId6')]",
        "kind": "Parser",
        "version": "[variables('parserVersion6')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightFindingsData Data Parser with template",
        "displayName": "BitSightFindingsData Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName7'),'/',variables('parserVersion7'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName7'))]"
      ],
      "properties": {
        "description": "BitSightFindingsData Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName7')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightFindingsData",
                "category": "Samples",
                "functionAlias": "BitSightFindingsData",
                "query": "\nlet FindingsData_view  = view () { \r\n    Findings_data_CL  \r\n    | extend \r\n                EventVendor =\"FindingsDataBitSight\",\r\n                EventProduct =\"FindingsDataBitSight\",\r\n                RemediationHistoryLastRequestedRefreshDate = column_ifexists('remediation_history_last_requested_refresh_date_s', ''),\r\n                RemediationHistoryLastRefreshStatusDate = column_ifexists('remediation_history_last_refresh_status_date_s', ''),\r\n                RemediationHistoryLastRefreshStatusLabel = column_ifexists('remediation_history_last_refresh_status_label_s', ''),\r\n                RemediationHistoryLastRefreshReasonCode = column_ifexists('remediation_history_last_refresh_reason_code_s', ''),\r\n                Comments = column_ifexists('comments_s', ''),\r\n                TemporaryId = column_ifexists('temporary_id_s', ''),\r\n                PcapID = column_ifexists('pcap_id_s', ''),\r\n                AffectsRating = column_ifexists('affects_rating_b', ''),\r\n                Assets = column_ifexists('assets_s', ''),\r\n                Details = column_ifexists('details_s', ''),\r\n                EvidenceKey = column_ifexists('evidence_key_s', ''),\r\n                FirstSeen = column_ifexists('first_seen_s', ''),\r\n                LastSeen = column_ifexists('last_seen_s', ''),\r\n                RelatedFindings = column_ifexists('related_findings_s', ''),\r\n                RiskCategory = column_ifexists('risk_category_s', ''),\r\n                RiskVector = column_ifexists('risk_vector_s', ''),\r\n                RiskVectorLabel = column_ifexists('risk_vector_label_s', ''),\r\n                RolledupObservationId = column_ifexists('rolledup_observation_id_s', ''),\r\n                Severity = column_ifexists('Severity', ''),\r\n                SeverityCategory = column_ifexists('severity_category_s', ''),\r\n                Tags = column_ifexists('tags_s', ''),\r\n                AssetOverrides = column_ifexists('asset_overrides_s', ''),\r\n                Duration = column_ifexists('duration_s', ''),\r\n                AttributedCompanies = column_ifexists('attributed_companies_s', ''),\r\n                CompanyName = column_ifexists('company_name_s', ''),\r\n                RemainingDecay = column_ifexists('remaining_decay_d', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                RemediationHistoryLastRequestedRefreshDate,\r\n                RemediationHistoryLastRefreshStatusDate,\r\n                RemediationHistoryLastRefreshStatusLabel,\r\n                RemediationHistoryLastRefreshReasonCode,\r\n                Comments,\r\n                TemporaryId,\r\n                PcapID,\r\n                AffectsRating,\r\n                Assets,\r\n                Details,\r\n                EvidenceKey,\r\n                FirstSeen,\r\n                LastSeen,\r\n                RelatedFindings,\r\n                RiskCategory,\r\n                RiskVector,\r\n                RiskVectorLabel,\r\n                RolledupObservationId,\r\n                Severity,\r\n                SeverityCategory,\r\n                Tags,\r\n                AssetOverrides,\r\n                Duration,\r\n                AttributedCompanies,\r\n                CompanyName,\r\n                RemainingDecay,\r\n                Type\r\n};\r\nFindingsData_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightFindingsData"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId7'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName7')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName7'))]",
                "contentId": "[variables('_parserContentId7')]",
                "kind": "Parser",
                "version": "[variables('parserVersion7')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName7')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightFindingsData",
        "category": "Samples",
        "functionAlias": "BitSightFindingsData",
        "query": "\nlet FindingsData_view  = view () { \r\n    Findings_data_CL  \r\n    | extend \r\n                EventVendor =\"FindingsDataBitSight\",\r\n                EventProduct =\"FindingsDataBitSight\",\r\n                RemediationHistoryLastRequestedRefreshDate = column_ifexists('remediation_history_last_requested_refresh_date_s', ''),\r\n                RemediationHistoryLastRefreshStatusDate = column_ifexists('remediation_history_last_refresh_status_date_s', ''),\r\n                RemediationHistoryLastRefreshStatusLabel = column_ifexists('remediation_history_last_refresh_status_label_s', ''),\r\n                RemediationHistoryLastRefreshReasonCode = column_ifexists('remediation_history_last_refresh_reason_code_s', ''),\r\n                Comments = column_ifexists('comments_s', ''),\r\n                TemporaryId = column_ifexists('temporary_id_s', ''),\r\n                PcapID = column_ifexists('pcap_id_s', ''),\r\n                AffectsRating = column_ifexists('affects_rating_b', ''),\r\n                Assets = column_ifexists('assets_s', ''),\r\n                Details = column_ifexists('details_s', ''),\r\n                EvidenceKey = column_ifexists('evidence_key_s', ''),\r\n                FirstSeen = column_ifexists('first_seen_s', ''),\r\n                LastSeen = column_ifexists('last_seen_s', ''),\r\n                RelatedFindings = column_ifexists('related_findings_s', ''),\r\n                RiskCategory = column_ifexists('risk_category_s', ''),\r\n                RiskVector = column_ifexists('risk_vector_s', ''),\r\n                RiskVectorLabel = column_ifexists('risk_vector_label_s', ''),\r\n                RolledupObservationId = column_ifexists('rolledup_observation_id_s', ''),\r\n                Severity = column_ifexists('Severity', ''),\r\n                SeverityCategory = column_ifexists('severity_category_s', ''),\r\n                Tags = column_ifexists('tags_s', ''),\r\n                AssetOverrides = column_ifexists('asset_overrides_s', ''),\r\n                Duration = column_ifexists('duration_s', ''),\r\n                AttributedCompanies = column_ifexists('attributed_companies_s', ''),\r\n                CompanyName = column_ifexists('company_name_s', ''),\r\n                RemainingDecay = column_ifexists('remaining_decay_d', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                RemediationHistoryLastRequestedRefreshDate,\r\n                RemediationHistoryLastRefreshStatusDate,\r\n                RemediationHistoryLastRefreshStatusLabel,\r\n                RemediationHistoryLastRefreshReasonCode,\r\n                Comments,\r\n                TemporaryId,\r\n                PcapID,\r\n                AffectsRating,\r\n                Assets,\r\n                Details,\r\n                EvidenceKey,\r\n                FirstSeen,\r\n                LastSeen,\r\n                RelatedFindings,\r\n                RiskCategory,\r\n                RiskVector,\r\n                RiskVectorLabel,\r\n                RolledupObservationId,\r\n                Severity,\r\n                SeverityCategory,\r\n                Tags,\r\n                AssetOverrides,\r\n                Duration,\r\n                AttributedCompanies,\r\n                CompanyName,\r\n                RemainingDecay,\r\n                Type\r\n};\r\nFindingsData_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId7'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId7')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName7'))]",
        "contentId": "[variables('_parserContentId7')]",
        "kind": "Parser",
        "version": "[variables('parserVersion7')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightFindingsSummary Data Parser with template",
        "displayName": "BitSightFindingsSummary Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName8'),'/',variables('parserVersion8'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName8'))]"
      ],
      "properties": {
        "description": "BitSightFindingsSummary Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName8')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightFindingsSummary",
                "category": "Samples",
                "functionAlias": "BitSightFindingsSummary",
                "query": "\nlet FindingsSummary_view  = view () { \r\n    Findings_summary_CL   \r\n    | extend \r\n                EventVendor =\"FindingsSummaryBitSight\",\r\n                EventProduct =\"FindingsSummaryBitSight\",\r\n                Company = column_ifexists('Company_s', ''),\r\n                Confidence = column_ifexists('confidence_s', ''),\r\n                EndDate = column_ifexists('end_date_s', ''),\r\n                EventCount = column_ifexists('event_count_d', ''),\r\n                FirstSeen = column_ifexists('first_seen_s', ''),\r\n                HostCount = column_ifexists('host_count_d', ''),\r\n                Id = column_ifexists('id_s', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                Severity = column_ifexists('severity_s', ''),\r\n                StartDate = column_ifexists('start_date_s', ''),\r\n                Description = column_ifexists('description_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                Company,\r\n                Confidence,\r\n                EndDate,\r\n                EventCount,\r\n                FirstSeen,\r\n                HostCount,\r\n                Id,\r\n                Name,\r\n                Severity,\r\n                StartDate,\r\n                Description,\r\n                Type\r\n};\r\nFindingsSummary_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightFindingsSummary"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId8'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName8')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName8'))]",
                "contentId": "[variables('_parserContentId8')]",
                "kind": "Parser",
                "version": "[variables('parserVersion8')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName8')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightFindingsSummary",
        "category": "Samples",
        "functionAlias": "BitSightFindingsSummary",
        "query": "\nlet FindingsSummary_view  = view () { \r\n    Findings_summary_CL   \r\n    | extend \r\n                EventVendor =\"FindingsSummaryBitSight\",\r\n                EventProduct =\"FindingsSummaryBitSight\",\r\n                Company = column_ifexists('Company_s', ''),\r\n                Confidence = column_ifexists('confidence_s', ''),\r\n                EndDate = column_ifexists('end_date_s', ''),\r\n                EventCount = column_ifexists('event_count_d', ''),\r\n                FirstSeen = column_ifexists('first_seen_s', ''),\r\n                HostCount = column_ifexists('host_count_d', ''),\r\n                Id = column_ifexists('id_s', ''),\r\n                Name = column_ifexists('name_s', ''),\r\n                Severity = column_ifexists('severity_s', ''),\r\n                StartDate = column_ifexists('start_date_s', ''),\r\n                Description = column_ifexists('description_s', ''),\r\n                Type = column_ifexists('Type', '')\r\n    | project\r\n                TimeGenerated,\r\n                EventVendor,\r\n                EventProduct,\r\n                Company,\r\n                Confidence,\r\n                EndDate,\r\n                EventCount,\r\n                FirstSeen,\r\n                HostCount,\r\n                Id,\r\n                Name,\r\n                Severity,\r\n                StartDate,\r\n                Description,\r\n                Type\r\n};\r\nFindingsSummary_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId8'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId8')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName8'))]",
        "contentId": "[variables('_parserContentId8')]",
        "kind": "Parser",
        "version": "[variables('parserVersion8')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightGraphData Data Parser with template",
        "displayName": "BitSightGraphData Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName9'),'/',variables('parserVersion9'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName9'))]"
      ],
      "properties": {
        "description": "BitSightGraphData Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName9')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightGraphData",
                "category": "Samples",
                "functionAlias": "BitSightGraphData",
                "query": "\nlet GraphData_view  = view () { \r\n    Graph_data_CL   \r\n    | extend \r\n            EventVendor =\"GraphDataBitSight\",\r\n            EventProduct =\"GraphDataBitSight\",\r\n            RatingDate = column_ifexists('Rating_Date_s', ''),\r\n            Rating = column_ifexists('Rating_d', ''),\r\n            CompanyName = column_ifexists('Company_name_s', ''),\r\n            RatingDifferance = column_ifexists('Rating_differance_d', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            RatingDate,\r\n            Rating,\r\n            CompanyName,\r\n            RatingDifferance,\r\n            Type\r\n};\r\nGraphData_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightGraphData"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId9'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName9')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName9'))]",
                "contentId": "[variables('_parserContentId9')]",
                "kind": "Parser",
                "version": "[variables('parserVersion9')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName9')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightGraphData",
        "category": "Samples",
        "functionAlias": "BitSightGraphData",
        "query": "\nlet GraphData_view  = view () { \r\n    Graph_data_CL   \r\n    | extend \r\n            EventVendor =\"GraphDataBitSight\",\r\n            EventProduct =\"GraphDataBitSight\",\r\n            RatingDate = column_ifexists('Rating_Date_s', ''),\r\n            Rating = column_ifexists('Rating_d', ''),\r\n            CompanyName = column_ifexists('Company_name_s', ''),\r\n            RatingDifferance = column_ifexists('Rating_differance_d', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            RatingDate,\r\n            Rating,\r\n            CompanyName,\r\n            RatingDifferance,\r\n            Type\r\n};\r\nGraphData_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId9'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId9')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName9'))]",
        "contentId": "[variables('_parserContentId9')]",
        "kind": "Parser",
        "version": "[variables('parserVersion9')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightIndustrialStatistics Data Parser with template",
        "displayName": "BitSightIndustrialStatistics Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName10'),'/',variables('parserVersion10'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName10'))]"
      ],
      "properties": {
        "description": "BitSightIndustrialStatistics Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName10')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightIndustrialStatistics",
                "category": "Samples",
                "functionAlias": "BitSightIndustrialStatistics",
                "query": "\nlet IndustrialStatistics_view  = view () { \r\n    Industrial_statistics_CL   \r\n    | extend \r\n            EventVendor =\"IndustrialStatisticsBitSight\",\r\n            EventProduct =\"IndustrialStatisticsBitSight\",\r\n            Count = column_ifexists('count_d', ''),\r\n            CountPeriod = column_ifexists('count_period_s', ''),\r\n            AverageDurationDays = column_ifexists('average_duration_days_d', ''),\r\n            RiskVector = column_ifexists('risk_vector_s', ''),\r\n            CompanyName = column_ifexists('Company_name_s', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            Count,\r\n            CountPeriod,\r\n            AverageDurationDays,\r\n            RiskVector,\r\n            CompanyName,\r\n            Type\r\n};\r\nIndustrialStatistics_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightIndustrialStatistics"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId10'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName10')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName10'))]",
                "contentId": "[variables('_parserContentId10')]",
                "kind": "Parser",
                "version": "[variables('parserVersion10')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName10')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightIndustrialStatistics",
        "category": "Samples",
        "functionAlias": "BitSightIndustrialStatistics",
        "query": "\nlet IndustrialStatistics_view  = view () { \r\n    Industrial_statistics_CL   \r\n    | extend \r\n            EventVendor =\"IndustrialStatisticsBitSight\",\r\n            EventProduct =\"IndustrialStatisticsBitSight\",\r\n            Count = column_ifexists('count_d', ''),\r\n            CountPeriod = column_ifexists('count_period_s', ''),\r\n            AverageDurationDays = column_ifexists('average_duration_days_d', ''),\r\n            RiskVector = column_ifexists('risk_vector_s', ''),\r\n            CompanyName = column_ifexists('Company_name_s', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            Count,\r\n            CountPeriod,\r\n            AverageDurationDays,\r\n            RiskVector,\r\n            CompanyName,\r\n            Type\r\n};\r\nIndustrialStatistics_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId10'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId10')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName10'))]",
        "contentId": "[variables('_parserContentId10')]",
        "kind": "Parser",
        "version": "[variables('parserVersion10')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightObservationStatistics Data Parser with template",
        "displayName": "BitSightObservationStatistics Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName11'),'/',variables('parserVersion11'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName11'))]"
      ],
      "properties": {
        "description": "BitSightObservationStatistics Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion11')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName11')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightObservationStatistics",
                "category": "Samples",
                "functionAlias": "BitSightObservationStatistics",
                "query": "\nlet ObservationStatistics_view  = view () { \r\n    Observation_statistics_CL   \r\n    | extend \r\n            EventVendor =\"ObservationStatisticsBitSight\",\r\n            EventProduct =\"ObservationStatisticsBitSight\",\r\n            Count = column_ifexists('count_d', ''),\r\n            CountPeriod = column_ifexists('count_period_s', ''),\r\n            AverageDurationDays = column_ifexists('average_duration_days_d', ''),\r\n            RiskVector = column_ifexists('risk_vector_s', ''),\r\n            CompanyName = column_ifexists('Company_name_s', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            Count,\r\n            CountPeriod,\r\n            AverageDurationDays,\r\n            RiskVector,\r\n            CompanyName,\r\n            Type\r\n};\r\nObservationStatistics_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightObservationStatistics"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId11'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName11')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName11'))]",
                "contentId": "[variables('_parserContentId11')]",
                "kind": "Parser",
                "version": "[variables('parserVersion11')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName11')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightObservationStatistics",
        "category": "Samples",
        "functionAlias": "BitSightObservationStatistics",
        "query": "\nlet ObservationStatistics_view  = view () { \r\n    Observation_statistics_CL   \r\n    | extend \r\n            EventVendor =\"ObservationStatisticsBitSight\",\r\n            EventProduct =\"ObservationStatisticsBitSight\",\r\n            Count = column_ifexists('count_d', ''),\r\n            CountPeriod = column_ifexists('count_period_s', ''),\r\n            AverageDurationDays = column_ifexists('average_duration_days_d', ''),\r\n            RiskVector = column_ifexists('risk_vector_s', ''),\r\n            CompanyName = column_ifexists('Company_name_s', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            Count,\r\n            CountPeriod,\r\n            AverageDurationDays,\r\n            RiskVector,\r\n            CompanyName,\r\n            Type\r\n};\r\nObservationStatistics_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId11'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId11')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName11'))]",
        "contentId": "[variables('_parserContentId11')]",
        "kind": "Parser",
        "version": "[variables('parserVersion11')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "BitSightWorkFromHome Data Parser with template",
        "displayName": "BitSightWorkFromHome Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName12'),'/',variables('parserVersion12'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName12'))]"
      ],
      "properties": {
        "description": "BitSightWorkFromHome Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion12')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName12')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "BitSightWorkFromHome",
                "category": "Samples",
                "functionAlias": "BitSightWorkFromHome",
                "query": "\nlet WorkFromHome_view  = view () {\r\n    BitSight_WFH_data_CL   \r\n    | extend \r\n            EventVendor =\"WFHBitSight\",\r\n            EventProduct =\"WFHBitSight\",\r\n            RiskType = column_ifexists('results_risk_type_s', ''),\r\n            ObservationID = column_ifexists('results_observation_id_s', ''),\r\n            CollectionDate = column_ifexists('results_collection_date_s', ''),\r\n            EventDate = column_ifexists('results_event_date_s', ''),\r\n            OccurrencesEventDate = column_ifexists('results_occurrences_event_date_s', ''),\r\n            OccurrencesRepresentativeTimestamp = column_ifexists('results_occurrences_representative_timestamp_s', ''),\r\n            OccurrencesCount = column_ifexists('results_occurrences_count_d', ''),\r\n            ForensicsHostIP = column_ifexists('results_forensics_host_ip_s', ''),\r\n            ForensicsHostPort = column_ifexists('results_forensics_host_port_d', ''),\r\n            CompanyName = column_ifexists('results_country_name_s', ''),\r\n            CountryCode = column_ifexists('results_country_code_s', ''),\r\n            DetailsGrade = column_ifexists('results_details_grade_grade_s', ''),\r\n            DetailsResponse = column_ifexists('results_details_response_s', ''),\r\n            DetailsService = column_ifexists('results_details_service_s', ''),\r\n            DetailsMessage = column_ifexists('results_details_message_s', ''),\r\n            DetailsLowVulnerabilities = column_ifexists('results_details_low_vulnerabilities_s', ''),\r\n            DetailsInfection = column_ifexists('results_details_infection_s', ''),\r\n            DetailsDetectionMethod = column_ifexists('results_details_detection_method_s', ''),\r\n            ServiceProviders = column_ifexists('service_providers_s', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            RiskType,\r\n            ObservationID,\r\n            CollectionDate,\r\n            EventDate,\r\n            OccurrencesEventDate,\r\n            OccurrencesRepresentativeTimestamp,\r\n            OccurrencesCount,\r\n            ForensicsHostIP,\r\n            ForensicsHostPort,\r\n            CompanyName,\r\n            CountryCode,\r\n            DetailsGrade,\r\n            DetailsResponse,\r\n            DetailsService,\r\n            DetailsMessage,\r\n            DetailsLowVulnerabilities,\r\n            DetailsInfection,\r\n            DetailsDetectionMethod,\r\n            ServiceProviders,\r\n            Type\r\n};\r\nWorkFromHome_view\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "BitSightWorkFromHome"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId12'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName12')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName12'))]",
                "contentId": "[variables('_parserContentId12')]",
                "kind": "Parser",
                "version": "[variables('parserVersion12')]",
                "source": {
                  "name": "BitSight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName12')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "BitSightWorkFromHome",
        "category": "Samples",
        "functionAlias": "BitSightWorkFromHome",
        "query": "\nlet WorkFromHome_view  = view () {\r\n    BitSight_WFH_data_CL   \r\n    | extend \r\n            EventVendor =\"WFHBitSight\",\r\n            EventProduct =\"WFHBitSight\",\r\n            RiskType = column_ifexists('results_risk_type_s', ''),\r\n            ObservationID = column_ifexists('results_observation_id_s', ''),\r\n            CollectionDate = column_ifexists('results_collection_date_s', ''),\r\n            EventDate = column_ifexists('results_event_date_s', ''),\r\n            OccurrencesEventDate = column_ifexists('results_occurrences_event_date_s', ''),\r\n            OccurrencesRepresentativeTimestamp = column_ifexists('results_occurrences_representative_timestamp_s', ''),\r\n            OccurrencesCount = column_ifexists('results_occurrences_count_d', ''),\r\n            ForensicsHostIP = column_ifexists('results_forensics_host_ip_s', ''),\r\n            ForensicsHostPort = column_ifexists('results_forensics_host_port_d', ''),\r\n            CompanyName = column_ifexists('results_country_name_s', ''),\r\n            CountryCode = column_ifexists('results_country_code_s', ''),\r\n            DetailsGrade = column_ifexists('results_details_grade_grade_s', ''),\r\n            DetailsResponse = column_ifexists('results_details_response_s', ''),\r\n            DetailsService = column_ifexists('results_details_service_s', ''),\r\n            DetailsMessage = column_ifexists('results_details_message_s', ''),\r\n            DetailsLowVulnerabilities = column_ifexists('results_details_low_vulnerabilities_s', ''),\r\n            DetailsInfection = column_ifexists('results_details_infection_s', ''),\r\n            DetailsDetectionMethod = column_ifexists('results_details_detection_method_s', ''),\r\n            ServiceProviders = column_ifexists('service_providers_s', ''),\r\n            Type = column_ifexists('Type', '')\r\n    | project\r\n            TimeGenerated,\r\n            EventVendor,\r\n            EventProduct,\r\n            RiskType,\r\n            ObservationID,\r\n            CollectionDate,\r\n            EventDate,\r\n            OccurrencesEventDate,\r\n            OccurrencesRepresentativeTimestamp,\r\n            OccurrencesCount,\r\n            ForensicsHostIP,\r\n            ForensicsHostPort,\r\n            CompanyName,\r\n            CountryCode,\r\n            DetailsGrade,\r\n            DetailsResponse,\r\n            DetailsService,\r\n            DetailsMessage,\r\n            DetailsLowVulnerabilities,\r\n            DetailsInfection,\r\n            DetailsDetectionMethod,\r\n            ServiceProviders,\r\n            Type\r\n};\r\nWorkFromHome_view\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId12'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId12')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName12'))]",
        "contentId": "[variables('_parserContentId12')]",
        "kind": "Parser",
        "version": "[variables('parserVersion12')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "BitSight data connector with template",
        "displayName": "BitSight template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "BitSight data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Bitsight data connector (using Azure Function)",
                  "publisher": "BitSight Technologies, Inc.",
                  "descriptionMarkdown": "The [BitSight](https://www.BitSight.com/) Data Connector supports evidence-based cyber risk monitoring by bringing BitSight data in Microsoft Sentinel.",
                  "graphQueries": [
                    {
                      "metricName": "Total Alerts data received",
                      "legend": "Alerts_data_CL",
                      "baseQuery": "Alerts_data_CL"
                    },
                    {
                      "metricName": "Total Breaches data received",
                      "legend": "Breaches_data_CL",
                      "baseQuery": "Breaches_data_CL"
                    },
                    {
                      "metricName": "Total Company Details received",
                      "legend": "Company_details_CL",
                      "baseQuery": "Company_details_CL"
                    },
                    {
                      "metricName": "Total Company Ratings received",
                      "legend": "Company_rating_details_CL",
                      "baseQuery": "Company_rating_details_CL"
                    },
                    {
                      "metricName": "Total Diligence Historical Statistics data received",
                      "legend": "Diligence_historical_statistics_CL",
                      "baseQuery": "Diligence_historical_statistics_CL"
                    },
                    {
                      "metricName": "Total Diligence Statistics data received",
                      "legend": "Diligence_statistics_CL",
                      "baseQuery": "Diligence_statistics_CL"
                    },
                    {
                      "metricName": "Total Findings data received",
                      "legend": "Findings_data_CL",
                      "baseQuery": "Findings_data_CL"
                    },
                    {
                      "metricName": "Total Findings Summary data received",
                      "legend": "Findings_summary_CL",
                      "baseQuery": "Findings_summary_CL"
                    },
                    {
                      "metricName": "Total Graph data received",
                      "legend": "Graph_data_CL",
                      "baseQuery": "Graph_data_CL"
                    },
                    {
                      "metricName": "Total Industrial Statistics data received",
                      "legend": "Industrial_statistics_CL",
                      "baseQuery": "Industrial_statistics_CL"
                    },
                    {
                      "metricName": "Total Observation Statistics data received",
                      "legend": "Observation_statistics_CL",
                      "baseQuery": "Observation_statistics_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "BitSight Alert Events - Alerts Event for all Companies in portfolio.",
                      "query": "Alerts_data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Breaches Events - Breaches Event for all Companies in portfolio.",
                      "query": "Breaches_data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Company Details Events - Company Details Event for all Companies in portfolio.",
                      "query": "Company_details_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Company Ratings Events - Company Ratings Event for all Companies.",
                      "query": "Company_rating_details_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Diligence Historical Statistics Events - Diligence Historical Statistics Event for all Companies.",
                      "query": "Diligence_historical_statistics_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Diligence Statistics Events - Diligence Statistics Event for all Companies.",
                      "query": "Diligence_statistics_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Findings Events - Findings Event for all Companies.",
                      "query": "Findings_data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Findings Summary Events - Findings Summary Event for all Companies.",
                      "query": "Findings_summary_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Graph Events - Graph Event for all Companies.",
                      "query": "Graph_data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Industrial Statistics Events - Industrial Statistics Event for all Companies.",
                      "query": "Industrial_statistics_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "BitSight Observation Statistics Events - Observation Statistics Event for all Companies.",
                      "query": "Observation_statistics_CL\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Alerts_data_CL",
                      "lastDataReceivedQuery": "Alerts_data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Breaches_data_CL",
                      "lastDataReceivedQuery": "BitSight_Alerts_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Company_details_CL",
                      "lastDataReceivedQuery": "Company_details_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Company_rating_details_CL",
                      "lastDataReceivedQuery": "Company_rating_details_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Diligence_historical_statistics_CL",
                      "lastDataReceivedQuery": "Diligence_historical_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Diligence_statistics_CL",
                      "lastDataReceivedQuery": "Diligence_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Findings_data_CL",
                      "lastDataReceivedQuery": "Findings_data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Findings_summary_CL",
                      "lastDataReceivedQuery": "Findings_summary_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Graph_data_CL",
                      "lastDataReceivedQuery": "Graph_data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Industrial_statistics_CL",
                      "lastDataReceivedQuery": "Industrial_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "Observation_statistics_CL",
                      "lastDataReceivedQuery": "Observation_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Alerts_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Breaches_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Company_details_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Company_rating_details_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Diligence_historical_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Diligence_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Findings_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Findings_summary_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Graph_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Industrial_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Observation_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "REST API Credentials/permissions",
                        "description": "BitSight API Token is required.  See the documentation to [learn more](https://help.bitsighttech.com/hc/en-us/articles/115014888388-API-Token-Management) about API Token."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the BitSight API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": "**STEP 1 - Steps to Create/Get Bitsight API Token**\n\n Follow these instructions to get a BitSight API Token.\n 1. For SPM App: Refer to the [User Preference](https://service.bitsight.com/app/spm/account) tab of your Account page, \n\t\tGo to Settings > Account > User Preferences > API Token.\n 2. For TPRM App: Refer to the [User Preference](https://service.bitsight.com/app/tprm/account) tab of your Account page, \n\t\tGo to Settings > Account > User Preferences > API Token.\n 3. For Classic BitSight: Go to your [Account](https://service.bitsight.com/settings) page, \n\t\tGo to Settings > Account > API Token."
                    },
                    {
                      "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the BitSight data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.., as well as the BitSight API Token.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the BitSight connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-BitSight-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tAPI_token \n\t\tCompanies \n\t\tAlerts_Table_Name \n\t\tBreaches_Table_Name \n\t\tCompany_Table_Name \n\t\tCompany_Rating_Details_Table_Name \n\t\tDiligence_Historical_Statistics_Table_Name \n\t\tDiligence_Statistics_Table_Name \n\t\tFindings_Summary_Table_Name \n\t\tFindings_Table_Name \n\t\tGraph_Table_Name \n\t\tIndustrial_Statistics_Table_Name \n\t\tObservation_Statistics_Table_Name \n\t\tLog Level \n\t\tBitSight Schedule \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the BitSight data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-BitSight-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. BitSightXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                    },
                    {
                      "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tWorkspaceID \n\t\tWorkspaceKey \n\t\tAPI_token \n\t\tCompanies \n\t\tAlerts_Table_Name \n\t\tBreaches_Table_Name \n\t\tCompany_Table_Name \n\t\tCompany_Rating_Details_Table_Name \n\t\tDiligence_Historical_Statistics_Table_Name \n\t\tDiligence_Statistics_Table_Name \n\t\tFindings_Summary_Table_Name \n\t\tFindings_Table_Name \n\t\tGraph_Table_Name \n\t\tIndustrial_Statistics_Table_Name \n\t\tObservation_Statistics_Table_Name \n\t\tLogLevel \n\t\tSchedule \n4. Once all application settings have been entered, click **Save**."
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "BitSight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Ariela Silberstein",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "BitSight Support",
                  "email": "supprt@bitsight.com",
                  "tier": "Partner",
                  "link": "https://www.bitsight.com/customer-success-support"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Bitsight data connector (using Azure Function)",
          "publisher": "BitSight Technologies, Inc.",
          "descriptionMarkdown": "The [BitSight](https://www.BitSight.com/) Data Connector supports evidence-based cyber risk monitoring by bringing BitSight data in Microsoft Sentinel.",
          "graphQueries": [
            {
              "metricName": "Total Alerts data received",
              "legend": "Alerts_data_CL",
              "baseQuery": "Alerts_data_CL"
            },
            {
              "metricName": "Total Breaches data received",
              "legend": "Breaches_data_CL",
              "baseQuery": "Breaches_data_CL"
            },
            {
              "metricName": "Total Company Details received",
              "legend": "Company_details_CL",
              "baseQuery": "Company_details_CL"
            },
            {
              "metricName": "Total Company Ratings received",
              "legend": "Company_rating_details_CL",
              "baseQuery": "Company_rating_details_CL"
            },
            {
              "metricName": "Total Diligence Historical Statistics data received",
              "legend": "Diligence_historical_statistics_CL",
              "baseQuery": "Diligence_historical_statistics_CL"
            },
            {
              "metricName": "Total Diligence Statistics data received",
              "legend": "Diligence_statistics_CL",
              "baseQuery": "Diligence_statistics_CL"
            },
            {
              "metricName": "Total Findings data received",
              "legend": "Findings_data_CL",
              "baseQuery": "Findings_data_CL"
            },
            {
              "metricName": "Total Findings Summary data received",
              "legend": "Findings_summary_CL",
              "baseQuery": "Findings_summary_CL"
            },
            {
              "metricName": "Total Graph data received",
              "legend": "Graph_data_CL",
              "baseQuery": "Graph_data_CL"
            },
            {
              "metricName": "Total Industrial Statistics data received",
              "legend": "Industrial_statistics_CL",
              "baseQuery": "Industrial_statistics_CL"
            },
            {
              "metricName": "Total Observation Statistics data received",
              "legend": "Observation_statistics_CL",
              "baseQuery": "Observation_statistics_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "Alerts_data_CL",
              "lastDataReceivedQuery": "Alerts_data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Breaches_data_CL",
              "lastDataReceivedQuery": "BitSight_Alerts_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Company_details_CL",
              "lastDataReceivedQuery": "Company_details_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Company_rating_details_CL",
              "lastDataReceivedQuery": "Company_rating_details_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Diligence_historical_statistics_CL",
              "lastDataReceivedQuery": "Diligence_historical_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Diligence_statistics_CL",
              "lastDataReceivedQuery": "Diligence_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Findings_data_CL",
              "lastDataReceivedQuery": "Findings_data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Findings_summary_CL",
              "lastDataReceivedQuery": "Findings_summary_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Graph_data_CL",
              "lastDataReceivedQuery": "Graph_data_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Industrial_statistics_CL",
              "lastDataReceivedQuery": "Industrial_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Observation_statistics_CL",
              "lastDataReceivedQuery": "Observation_statistics_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Alerts_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Breaches_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Company_details_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Company_rating_details_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Diligence_historical_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Diligence_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Findings_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Findings_summary_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Graph_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Industrial_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Observation_statistics_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "BitSight Alert Events - Alerts Event for all Companies in portfolio.",
              "query": "Alerts_data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Breaches Events - Breaches Event for all Companies in portfolio.",
              "query": "Breaches_data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Company Details Events - Company Details Event for all Companies in portfolio.",
              "query": "Company_details_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Company Ratings Events - Company Ratings Event for all Companies.",
              "query": "Company_rating_details_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Diligence Historical Statistics Events - Diligence Historical Statistics Event for all Companies.",
              "query": "Diligence_historical_statistics_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Diligence Statistics Events - Diligence Statistics Event for all Companies.",
              "query": "Diligence_statistics_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Findings Events - Findings Event for all Companies.",
              "query": "Findings_data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Findings Summary Events - Findings Summary Event for all Companies.",
              "query": "Findings_summary_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Graph Events - Graph Event for all Companies.",
              "query": "Graph_data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Industrial Statistics Events - Industrial Statistics Event for all Companies.",
              "query": "Industrial_statistics_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "BitSight Observation Statistics Events - Observation Statistics Event for all Companies.",
              "query": "Observation_statistics_CL\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "REST API Credentials/permissions",
                "description": "BitSight API Token is required.  See the documentation to [learn more](https://help.bitsighttech.com/hc/en-us/articles/115014888388-API-Token-Management) about API Token."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the BitSight API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": "**STEP 1 - Steps to Create/Get Bitsight API Token**\n\n Follow these instructions to get a BitSight API Token.\n 1. For SPM App: Refer to the [User Preference](https://service.bitsight.com/app/spm/account) tab of your Account page, \n\t\tGo to Settings > Account > User Preferences > API Token.\n 2. For TPRM App: Refer to the [User Preference](https://service.bitsight.com/app/tprm/account) tab of your Account page, \n\t\tGo to Settings > Account > User Preferences > API Token.\n 3. For Classic BitSight: Go to your [Account](https://service.bitsight.com/settings) page, \n\t\tGo to Settings > Account > API Token."
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the BitSight data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.., as well as the BitSight API Token.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the BitSight connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-BitSight-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tAPI_token \n\t\tCompanies \n\t\tAlerts_Table_Name \n\t\tBreaches_Table_Name \n\t\tCompany_Table_Name \n\t\tCompany_Rating_Details_Table_Name \n\t\tDiligence_Historical_Statistics_Table_Name \n\t\tDiligence_Statistics_Table_Name \n\t\tFindings_Summary_Table_Name \n\t\tFindings_Table_Name \n\t\tGraph_Table_Name \n\t\tIndustrial_Statistics_Table_Name \n\t\tObservation_Statistics_Table_Name \n\t\tLog Level \n\t\tBitSight Schedule \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the BitSight data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-BitSight-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. BitSightXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tWorkspaceID \n\t\tWorkspaceKey \n\t\tAPI_token \n\t\tCompanies \n\t\tAlerts_Table_Name \n\t\tBreaches_Table_Name \n\t\tCompany_Table_Name \n\t\tCompany_Rating_Details_Table_Name \n\t\tDiligence_Historical_Statistics_Table_Name \n\t\tDiligence_Statistics_Table_Name \n\t\tFindings_Summary_Table_Name \n\t\tFindings_Table_Name \n\t\tGraph_Table_Name \n\t\tIndustrial_Statistics_Table_Name \n\t\tObservation_Statistics_Table_Name \n\t\tLogLevel \n\t\tSchedule \n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "BitSight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Ariela Silberstein",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "BitSight Support",
          "email": "supprt@bitsight.com",
          "tier": "Partner",
          "link": "https://www.bitsight.com/customer-success-support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId4')]",
              "version": "[variables('analyticRuleVersion4')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId5')]",
              "version": "[variables('analyticRuleVersion5')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId6')]",
              "version": "[variables('analyticRuleVersion6')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId7')]",
              "version": "[variables('analyticRuleVersion7')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId8')]",
              "version": "[variables('analyticRuleVersion8')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId9')]",
              "version": "[variables('analyticRuleVersion9')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId10')]",
              "version": "[variables('analyticRuleVersion10')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_GetWFHData')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId2')]",
              "version": "[variables('parserVersion2')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId3')]",
              "version": "[variables('parserVersion3')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId4')]",
              "version": "[variables('parserVersion4')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId5')]",
              "version": "[variables('parserVersion5')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId6')]",
              "version": "[variables('parserVersion6')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId7')]",
              "version": "[variables('parserVersion7')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId8')]",
              "version": "[variables('parserVersion8')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId9')]",
              "version": "[variables('parserVersion9')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId10')]",
              "version": "[variables('parserVersion10')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId11')]",
              "version": "[variables('parserVersion11')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId12')]",
              "version": "[variables('parserVersion12')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2023-02-20",
        "lastPublishDate": "2024-02-20",
        "providers": [
          "Bitsight"
        ],
        "categories": {
          "domains": [
            "Security - Others"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
