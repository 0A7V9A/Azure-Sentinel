// Title:           ESI - Exchange Configuration Parser
// Author:          Microsoft
// Version:         1.0
// Last Updated:    08/24/2022
// Comment:         Inital Content
//  
// DESCRIPTION:
// This parser takes raw ESI Exchange Configuration Collector to pivot raw information and retrieve a specific date configuration
//
// USAGE:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter the Function Name "ExchangeConfiguration".
// Parameters : 3 parameters to add during creation. 
//    1. SpecificSectionList, type string, default value ""
//    2. SpecificConfigurationDate, type string, default value "lastdate"
//    3. Target, type string, default value "On-Premises"
// 3. Function App usually take 10-15 minutes to activate. You can then use Function Alias for other queries
//
//
// REFERENCE: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
//
// LOG SAMPLES:
// This parser assumes the raw log from the ESI Exchange Collector are on the ESIExchangeConfig_CL table and are uploaded using the builtin REST API uploader of the Collector.
//
//

// Parameters
let _SpecificSectionList = split(SpecificSectionList,',');
let _configurationDate = iff(isnull(SpecificConfigurationDate) or isempty(SpecificConfigurationDate),"lastdate",tostring(SpecificConfigurationDate));
let _target = iff(isnull(Target) or isempty(Target),"On-Premises",Target);
let ScalarbaseRequest = union(ESIExchangeOnlineConfig_CL | where _target == 'Online'), (ESIAPIExchangeConfig_CL | where _target == 'On-Premises');
// Base Request
let baseRequest = materialize (ScalarbaseRequest
    | where iff(_configurationDate == "lastdate", todatetime(EntryDate_s) > ago(7d), todatetime(EntryDate_s) > todatetime(_configurationDate))
    | extend EntryDate = todatetime(EntryDate_s)
    | project-away EntryDate_s
    );
// Find Config Id
let findConfigDate = toscalar(baseRequest
    | summarize count() by GenerationInstanceID_g,EntryDate
    | extend distance = iff(_configurationDate == "lastdate", now() - EntryDate, (EntryDate - todatetime(_configurationDate)))
    | top 1 by distance asc nulls last
    | project GenerationInstanceID_g);
// Parse Result
let ParseExchangeConfig = () { baseRequest 
 | where GenerationInstanceID_g  == findConfigDate
 | where isempty(_SpecificSectionList[0]) or Section_s in (_SpecificSectionList)
 | extend TimeGenerated = EntryDate
 | extend Identity = Identity_Name_s
 | project-rename ConfigurationInstanceID = GenerationInstanceID_g, ESIEnvironment = ESIEnvironment_s, Section = Section_s, CmdletResultValue = rawData_s, PSCmdlet = PSCmdL_s, CmdletResultType = ExecutionResult_s, WhenChanged = WhenChanged_t, WhenCreated = WhenCreated_t, Name = Name_s
 | project-away TenantId,SourceSystem,Type,EntryDate
};
ParseExchangeConfig