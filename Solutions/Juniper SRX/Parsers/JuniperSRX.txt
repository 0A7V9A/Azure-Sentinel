// Title:           Juniper SRX Parser
// Author:          Microsoft
// Version:         1.0
// Last Updated:    11/17/2020
// Comment:         Inital Release
//  
// DESCRIPTION:
// This parser takes raw Juniper SRX logs from a Syslog stream and parses the logs into a normalized schema.
//
// USAGE:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. In the query window, on the second line of the query, enter the hostname(s) of your Juniper SRX device(s) and any other unique identifiers for the logstream. 
//    For example: | where Computer in ("server1", "server2")
// 3. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter a Function Name.
//    It is recommended to name the Function Alias, as JuniperSRX
// 4. Kusto Functions can typically take up to 15 minutes to activate. You can then use Function Alias for other queries.
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// 
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
//
// <14>Nov 14 06:13:55 JuniperSRX_FW4 RT_FLOW session created 172.20.22.237/161->134.207.87.33/162 0x0 None 155.117.69.171/52344->134.207.87.33/162 0x0 source rule source-nat-rule N/A N/A 17 trust_to_Untrust_Internet trust untrust 25620 N/A(N/A) reth4.0 UNKNOWN UNKNOWN UNKNOWN
// <37>Nov 14 06:14:33 JuniperSRX_FW1 sshd Login failed for user 'root' from host '123.45.67.89'
// <38>Nov 14 06:13:47 JuniperSRX_FW2 sshd[42227] Disconnected from 183.13.25.46 [preauth]
// <14>Nov 14 06:21:12 JuniperSRX_FW1 RT_FLOW session closed TCP FIN: 172.20.21.51/49266->172.20.22.254/80 0x0 junos-http 172.20.21.51/49266->172.20.22.254/80 0x0 N/A N/A N/A N
//
Syslog
| where SyslogMessage contains "junos"
| parse-kv SyslogMessage as (['time']:datetime, reason:string, ['source-address']:string, ['source-port']:string, ['destination-address']:string, ['destination-port']:int, ['service-name']:string, ['nat-source-address']:string, ['nat-source-port']:string, ['nat-destination-address']:string, ['nat-destination-port']:string, ['src-nat-rule-type']:string, ['src-nat-rule-name']:string, ['dst-nat-rule-type']:string, ['dst-nat-rule-name']:string, ['protocol-id']:int, ['policy-name']:string, ['source-zone-name']:string, ['destination-zone-name']:string, ['session-id-32']:long, ['packets-from-client']:int, ['bytes-from-client']:int, ['packets-from-server']:int, ['bytes-from-server']:int, ['elapsed-time']:int, application:string, ['nested-application']:string, username:string, roles:string, ['packet-incoming-interface']:string, encrypted:string) with (pair_delimiter=' ', kv_delimiter='=', quote='"')
|project-rename UserName = username
                , SrcIpAddr = ['source-address']
                , SrcPortNumber = ['source-port']
                , DstIpAddr = ['destination-address']
                , DstPortNumber = ['destination-port']
                , ServiceName = ['service-name']
                , SrcNatIpAddr = ['nat-source-address']
                , SrcNatPortNumber = ['nat-source-port']
                , DstNatIpAddr = ['nat-destination-address']
                , DstNatPortNumber = ['nat-destination-port']
                , ProtocolId = ['protocol-id']
                , PolicyName = ['policy-name']
                , SrcNatRuleName = ['src-nat-rule-name']
                , DstNatRuleName = ['dst-nat-rule-name']
                , ProcessId = ['session-id-32']