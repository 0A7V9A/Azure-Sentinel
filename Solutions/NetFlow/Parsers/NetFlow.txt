// Title:          NetFlow Parser
// Author:          Microsoft
// Version:         1.0
// Last Updated:    10/14/2021
// Comment:         Inital Release
//  
// DESCRIPTION:
// This parser takes NetFlow records ingested from the NetFlow (FileBeat/Logstash) custom connector and parses the data into a normalized schema
//
// USAGE:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter a Function Name.
//    It is recommended to name the Function Alias, as QualysKB
// 3. Kusto Functions usually take 10-15 minutes to activate. You can then use Function Alias for other queries
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
//
// 
netflow_CL
| project SourceSystem, TimeGenerated, Type, TenantId, MG, ManagementGroupName, Computer, RawData, _ResourceId,
    netflow_sourceASN_as_org = column_ifexists("netflow_sourceASN_as_org_s", ""),
    netflow_sourceASN_asn = column_ifexists("netflow_sourceASN_asn_d", ""),
    netflow_sourceASN_ip = column_ifexists("netflow_sourceASN_ip_s", ""),
    netflow_sourceGeo_country_code3 = column_ifexists("netflow_sourceGeo_country_code3_s", ""),
    netflow_sourceGeo_timezone = column_ifexists("netflow_sourceGeo_timezone_s", ""),
    netflow_sourceGeo_country_code2 = column_ifexists("netflow_sourceGeo_country_code2_s", ""),
    netflow_sourceGeo_country_name = column_ifexists("netflow_sourceGeo_country_name_s", ""),
    netflow_sourceGeo_continent_code = column_ifexists("netflow_sourceGeo_continent_code_s", ""),
    netflow_sourceGeo_location_lat = column_ifexists("netflow_sourceGeo_location_lat_d", ""),
    netflow_sourceGeo_location_lon = column_ifexists("netflow_sourceGeo_location_lon_d", ""),
    netflow_sourceGeo_longitude = column_ifexists("netflow_sourceGeo_longitude_d", ""),
    netflow_sourceGeo_latitude = column_ifexists("netflow_sourceGeo_latitude_d", ""),
    netflow_sourceGeo_ip = column_ifexists("netflow_sourceGeo_ip_s", ""),
    netflow_destinationGeo_country_code3 = column_ifexists("netflow_destinationGeo_country_code3_s", ""),
    netflow_destinationGeo_timezone = column_ifexists("netflow_destinationGeo_timezone_s", ""),
    netflow_destinationGeo_country_code2 = column_ifexists("netflow_destinationGeo_country_code2_s", ""),
    netflow_destinationGeo_country_name = column_ifexists("netflow_destinationGeo_country_name_s", ""),
    netflow_destinationGeo_continent_code = column_ifexists("netflow_destinationGeo_continent_code_s", ""),
    netflow_destinationGeo_location_lat = column_ifexists("netflow_destinationGeo_location_lat_d", ""),
    netflow_destinationGeo_location_lon = column_ifexists("netflow_destinationGeo_location_lon_d", ""),
    netflow_destinationGeo_longitude = column_ifexists("netflow_destinationGeo_longitude_d", ""),
    netflow_destinationGeo_latitude = column_ifexists("netflow_destinationGeo_latitude_d", ""),
    netflow_destinationGeo_ip = column_ifexists("netflow_destinationGeo_ip_s", ""),
    netflow_destinationASN_as_org = column_ifexists("netflow_destinationASN_as_org_s", ""),
    netflow_destinationASN_asn = column_ifexists("netflow_destinationASN_asn_d", ""),
    netflow_destinationASN_ip = column_ifexists("netflow_destinationASN_ip_s", ""),
    netflow_destinationGeo_region_code = column_ifexists("netflow_destinationGeo_region_code_s", ""),
    netflow_destinationGeo_dma_code = column_ifexists("netflow_destinationGeo_dma_code_d", ""),
    netflow_destinationGeo_region_name = column_ifexists("netflow_destinationGeo_region_name_s", ""),
    netflow_destinationGeo_postal_code = column_ifexists("netflow_destinationGeo_postal_code_s", ""),
    netflow_destinationGeo_city_name = column_ifexists("netflow_destinationGeo_city_name_s", ""),
    netflow_sourceGeo_region_code = column_ifexists("netflow_sourceGeo_region_code_s", ""),
    netflow_sourceGeo_region_name = column_ifexists("netflow_sourceGeo_region_name_s", ""),
    netflow_sourceGeo_dma_code = column_ifexists("netflow_sourceGeo_dma_code_d", ""),
    netflow_sourceGeo_postal_code = column_ifexists("netflow_sourceGeo_postal_code_s", ""),
    netflow_sourceGeo_city_name = column_ifexists("netflow_sourceGeo_city_name_s", ""),
    event_type = column_ifexists("event_type_s", ""),
    event_module = column_ifexists("event_module_s", ""),
    event_created = column_ifexists("event_created_t", ""),
    event_action = column_ifexists("event_action_s", ""),
    event_category = column_ifexists("event_category_s", ""),
    event_kind = column_ifexists("event_kind_s", ""),
    event_dataset = column_ifexists("event_dataset_s", ""),
    flow_locality = column_ifexists("flow_locality_s", ""),
    flow_id = column_ifexists("flow_id_s", ""),
    related_ip = column_ifexists("related_ip_s", ""),
    service_type = column_ifexists("service_type_s", ""),
    ecs_version = column_ifexists("ecs_version_s", ""),
    destination_port = column_ifexists("destination_port_d", ""),
    destination_ip = column_ifexists("destination_ip_s", ""),
    destination_locality = column_ifexists("destination_locality_s", ""),
    agent_ephemeral_id = column_ifexists("agent_ephemeral_id_g", ""),
    agent_type = column_ifexists("agent_type_s", ""),
    agent_hostname = column_ifexists("agent_hostname_s", ""),
    agent_id = column_ifexists("agent_id_g", ""),
    agent_name = column_ifexists("agent_name_s", ""),
    agent_version = column_ifexists("agent_version_s", ""),
    network_packets = column_ifexists("network_packets_d", ""),
    network_direction = column_ifexists("network_direction_s", ""),
    network_community_id = column_ifexists("network_community_id_s", ""),
    network_transport = column_ifexists("network_transport_s", ""),
    network_iana_number = column_ifexists("network_iana_number_d", ""),
    network_bytes = column_ifexists("network_bytes_d", ""),
    _version = column_ifexists("_version_s", ""),
    netflow_egress_interface = column_ifexists("netflow_egress_interface_d", ""),
    netflow_source_ipv4_address = column_ifexists("netflow_source_ipv4_address_s", ""),
    netflow_delta_flow_count = column_ifexists("netflow_delta_flow_count_d", ""),
    netflow_source_transport_port = column_ifexists("netflow_source_transport_port_d", ""),
    netflow_packet_delta_count = column_ifexists("netflow_packet_delta_count_d", ""),
    netflow_protocol_identifier = column_ifexists("netflow_protocol_identifier_d", ""),
    netflow_sampler_id = column_ifexists("netflow_sampler_id_d", ""),
    netflow_destination_ipv4_address = column_ifexists("netflow_destination_ipv4_address_s", ""),
    netflow_type = column_ifexists("netflow_type_s", ""),
    netflow_post_destination_mac_address = column_ifexists("netflow_post_destination_mac_address_s", ""),
    netflow_octet_delta_count = column_ifexists("netflow_octet_delta_count_d", ""),
    netflow_flow_start_sys_up_time = column_ifexists("netflow_flow_start_sys_up_time_d", ""),
    netflow_exporter_address = column_ifexists("netflow_exporter_address_s", ""),
    netflow_exporter_version = column_ifexists("netflow_exporter_version_d", ""),
    netflow_exporter_timestamp = column_ifexists("netflow_exporter_timestamp_t", ""),
    netflow_exporter_source_id = column_ifexists("netflow_exporter_source_id_d", ""),
    netflow_exporter_uptime_millis = column_ifexists("netflow_exporter_uptime_millis_d", ""),
    netflow_ip_version = column_ifexists("netflow_ip_version_d", ""),
    netflow_tcp_control_bits = column_ifexists("netflow_tcp_control_bits_d", ""),
    netflow_post_source_mac_address = column_ifexists("netflow_post_source_mac_address_s", ""),
    netflow_post_vlan_id = column_ifexists("netflow_post_vlan_id_d", ""),
    netflow_mpls_label_stack_length = column_ifexists("netflow_mpls_label_stack_length_d", ""),
    netflow_flow_end_sys_up_time = column_ifexists("netflow_flow_end_sys_up_time_d", ""),
    netflow_ip_class_of_service = column_ifexists("netflow_ip_class_of_service_d", ""),
    netflow_destination_transport_port = column_ifexists("netflow_destination_transport_port_d", ""),
    netflow_flow_direction = column_ifexists("netflow_flow_direction_d", ""),
    netflow_ingress_interface = column_ifexists("netflow_ingress_interface_d", ""),
    _timestamp = column_ifexists("_timestamp_t", ""),
    input_type = column_ifexists("input_type_s", ""),
    source_packets = column_ifexists("source_packets_d", ""),
    source_port = column_ifexists("source_port_d", ""),
    source_ip = column_ifexists("source_ip_s", ""),
    source_locality = column_ifexists("source_locality_s", ""),
    source_bytes = column_ifexists("source_bytes_d", ""),
    fileset_name = column_ifexists("fileset_name_s", ""),
    observer_ip = column_ifexists("observer_ip_s", ""),
    tags = column_ifexists("tags_s", ""),
    destination_mac = column_ifexists("destination_mac_s", ""),
    netflow_vlan_id = column_ifexists("netflow_vlan_id_d", ""),
    netflow_source_mac_address = column_ifexists("netflow_source_mac_address_s", ""),
    netflow_destination_mac_address = column_ifexists("netflow_destination_mac_address_s", ""),
    source_mac = column_ifexists("source_mac_s", ""),
    netflow_options_sampler_mode = column_ifexists("netflow_options_sampler_mode_d", ""),
    netflow_options_sampler_random_interval = column_ifexists("netflow_options_sampler_random_interval_d", ""),
    netflow_options_sampler_id = column_ifexists("netflow_options_sampler_id_d", ""),
    netflow_scope_exporting_process_id = column_ifexists("netflow_scope_exporting_process_id_d", "")