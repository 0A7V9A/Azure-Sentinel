{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Julian Wang - julian.wang@forescout.com",
    "comments": "Solution template for ForescoutHostPropertyMonitor"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "playbook1-PlaybookName": {
      "defaultValue": "Forescout-DNS_Sniff_Event_Playbook",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-forescout-host-property-monitor",
    "_solutionId": "[variables('solutionId')]",
    "email": "julian.wang@forescout.com",
    "_email": "[variables('email')]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "d272e277-f285-4dbc-ae2d-7f65ba64a79e",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "Playbooks": "Playbooks",
    "_Playbooks": "[variables('Playbooks')]",
    "playbook1-MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('playbook1-PlaybookName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2022-04-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule creates an incident when more than certain number of Dnsniff events are generated from a host",
        "displayName": "Forescout-DNS_Sniff_Event_Monitor",
        "enabled": false,
        "query": "ForescoutHostProperties_CL | where HostProperties_DnsniffEvent_s matches regex \"DNS Query Type:.A;DNS Query/Response:.Query\" | extend ipaddress = iif(isnotempty(HostProperties_Ipv4Addr_s), HostProperties_Ipv4Addr_s, (iif(isnotempty(HostProperties_Ipv6Addr_s), HostProperties_Ipv6Addr_s, HostProperties_IpAddr_s))) | summarize NumEvents_d =count() by ipaddress, HostProperties_DnsniffEvent_s, HostProperties_EmIpAddr_s | where NumEvents_d > 2 | where isnotempty(ipaddress) and isnotempty(HostProperties_EmIpAddr_s) | sort by NumEvents_d asc | project NumEvents_d, ipaddress, HostProperties_EmIpAddr_s",
        "queryFrequency": "PT5M",
        "queryPeriod": "PT5M",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "customDetails": {
          "NumEvents": "NumEvents_d",
          "EmIp": "HostProperties_EmIpAddr_s",
          "Ip": "ipaddress"
        },
        "alertDetailsOverride": {
          "alertDescriptionFormat": "Dnsniff-Address-Check alert",
          "alertDisplayNameFormat": "Dnsniff-Address-Check"
        }
      }
    },
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "For_each": {
              "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
              "actions": {
                "Condition": {
                  "actions": {
                    "Set_variable_4": {
                      "runAfter": {
                        "Set_variable_6": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Info",
                        "value": "\"block network access\""
                      }
                    },
                    "Set_variable_6": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Action_group",
                        "value": "\"restrict\""
                      }
                    }
                  },
                  "runAfter": {
                    "For_each_5": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Set_variable_5": {
                        "runAfter": {
                          "Set_variable_7": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Info",
                          "value": "\"Unauthorized app detected\""
                        }
                      },
                      "Set_variable_7": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Action_group",
                          "value": "\"notify\""
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "greaterOrEquals": [
                          "@variables('CurNumEventVar')",
                          5
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "For_each_5": {
                  "foreach": "@variables('NumEventsVar')",
                  "actions": {
                    "Set_variable": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "CurNumEventVar",
                        "value": "@int(items('For_each_5'))"
                      }
                    }
                  },
                  "runAfter": {
                    "Set_variable_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Parse_JSON": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each')?['properties']?['additionalData']?['Custom Details']",
                    "schema": {
                      "properties": {
                        "EmIp": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "Ip": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "NumEvents": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Set_variable_2": {
                  "runAfter": {
                    "Set_variable_8": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "NumEventsVar",
                    "value": "@body('Parse_JSON')?['NumEvents']"
                  }
                },
                "Set_variable_3": {
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "HostIpVar",
                    "value": "@body('Parse_JSON')?['Ip']"
                  }
                },
                "Set_variable_8": {
                  "runAfter": {
                    "Set_variable_3": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "EmIpVar",
                    "value": "@body('Parse_JSON')?['EmIp']"
                  }
                },
                "Update_incident": {
                  "runAfter": {
                    "Condition": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "description": "action_group=@{variables('Action_group')};endpoint_ip=@{body('Parse_JSON')?['Ip']};em_ip=@{body('Parse_JSON')?['EmIp']};info=@{variables('Info')}",
                      "incidentArmId": "@triggerBody()?['object']?['id']"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "put",
                    "path": "/Incidents"
                  }
                }
              },
              "runAfter": {
                "Initialize_variable_4": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "EmIpVar",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_variable_2": {
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "HostIpVar",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_variable_3": {
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "NumEventsVar",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_variable_4": {
              "runAfter": {
                "Initialize_variable_6": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Info",
                    "type": "string",
                    "value": "\"\""
                  }
                ]
              }
            },
            "Initialize_variable_5": {
              "runAfter": {
                "Initialize_variable_3": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Action_group",
                    "type": "string",
                    "value": "\"notify\""
                  }
                ]
              }
            },
            "Initialize_variable_6": {
              "runAfter": {
                "Initialize_variable_5": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "CurNumEventVar",
                    "type": "integer",
                    "value": 0
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[variables('workspace-location-inline')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('MicrosoftSentinelConnectionName')]",
      "location": "[variables('workspace-location-inline')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('MicrosoftSentinelConnectionName')]",
        "parameterValueType": "Alternative",
        "api": {
          "id": "[variables('_connection-2')]"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Forescout Host Property Monitor",
          "publisher": "Forescout",
          "descriptionMarkdown": "The Forescout Host Property Monitor connector allows you to connect host properties from Forescout platform with Microsoft Sentinel, to view, create custom incidents, and improve investigation. This gives you more insight into your organization network and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "ForescoutHostProperties_CL",
              "baseQuery": "ForescoutHostProperties_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "ForescoutHostProperties_CL",
              "lastDataReceivedQuery": "ForescoutHostProperties_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "ForescoutHostProperties_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Get 5 latest host property entries",
              "query": "ForescoutHostProperties_CL | take 5"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Forescout Plugin requirement",
                "description": "Please make sure Forescout Microsoft Sentinel plugin is running on Forescout platform"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Instructions on how to configure Forescout Microsoft Sentinel plugin are provided at Forescout Documentation Portal (https://docs.forescout.com/bundle/sentinel-1-0-h)",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            }
          ]
        }
      },
      "id": "[variables('_connector1-source')]"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "ForescoutHostPropertyMonitor",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Julian Wang",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Playbooks')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_')]",
              "version": "2.0.0"
            }
          ]
        },
        "firstPublishDate": "2022-06-28",
        "providers": [
          "Forescout"
        ],
        "categories": {
          "domains": [
            "Security – Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
