{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": false,
      "basics": {
        "description": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Armis.svg\" width=\"75px\" height=\"75px\">\n\n**Important:** _This Microsoft Sentinel Solution is currently in public preview. This feature is provided without a service level agreement, and it's not recommended for production workloads. Certain features might not be supported or might have constrained capabilities. For more information, see [Supplemental Terms of Use for Microsoft Azure Previews](https://azure.microsoft.com/support/legal/preview-supplemental-terms/)._\n\n**Note:** _There may be [known issues](https://aka.ms/sentinelsolutionsknownissues) pertaining to this Solution, please refer to them before installing._\n\nThe [Armis](https://www.armis.com/) Solution gives the capability to ingest Armis Devices, Alerts and device Activities into Microsoft Sentinel through the Armis REST API.\n\nMicrosoft Sentinel Solutions provide a consolidated way to acquire Microsoft Sentinel content like data connectors, workbooks, analytics, and automations in your workspace with a single deployment step.\n\n**Data Connectors:** 3, **Parsers:** 3, **Playbooks:** 1\n\n[Learn more about Microsoft Sentinel](https://aka.ms/azuresentinel) | [Learn more about Solutions](https://aka.ms/azuresentinelsolutionsdoc)",
        "subscription": {
          "resourceProviders": [
            "Microsoft.OperationsManagement/solutions",
            "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "Microsoft.Insights/workbooks",
            "Microsoft.Logic/workflows"
          ]
        },
        "location": {
          "metadata": {
            "hidden": "Hiding location, we get it from the log analytics workspace"
          },
          "visible": false
        },
        "resourceGroup": {
          "allowExisting": true
        }
      }
    },
    "basics": [
      {
        "name": "getLAWorkspace",
        "type": "Microsoft.Solutions.ArmApiControl",
        "toolTip": "This filters by workspaces that exist in the Resource Group selected",
        "condition": "[greater(length(resourceGroup().name),0)]",
        "request": {
          "method": "GET",
          "path": "[concat(subscription().id,'/providers/Microsoft.OperationalInsights/workspaces?api-version=2020-08-01')]"
        }
      },
      {
        "name": "workspace",
        "type": "Microsoft.Common.DropDown",
        "label": "Workspace",
        "placeholder": "Select a workspace",
        "toolTip": "This dropdown will list only workspace that exists in the Resource Group selected",
        "constraints": {
          "allowedValues": "[map(filter(basics('getLAWorkspace').value, (filter) => contains(toLower(filter.id), toLower(resourceGroup().name))), (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
          "required": true
        },
        "visible": true
      }
    ],
    "steps": [
      {
        "name": "dataconnectors",
        "label": "Data Connectors",
        "bladeTitle": "Data Connectors",
        "elements": [
          {
            "name": "dataconnectors1-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This Solution installs the data connector for Armis. You can get Armis custom log data in your Microsoft Sentinel workspace. Configure and enable this data connector in the Data Connector gallery after this Solution deploys. This data connector creates custom log table(s) Armis_Activities_CL in your Microsoft Sentinel / Azure Log Analytics workspace."
            }
          },
          {
            "name": "dataconnectors2-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This Solution installs the data connector for Armis. You can get Armis custom log data in your Microsoft Sentinel workspace. Configure and enable this data connector in the Data Connector gallery after this Solution deploys. This data connector creates custom log table(s) Armis_Devices_CL in your Microsoft Sentinel / Azure Log Analytics workspace."
            }
          },
          {
            "name": "dataconnectors3-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This Solution installs the data connector for Armis. You can get Armis custom log data in your Microsoft Sentinel workspace. Configure and enable this data connector in the Data Connector gallery after this Solution deploys. This data connector creates custom log table(s) Armis_Alerts_CL in your Microsoft Sentinel / Azure Log Analytics workspace."
            }
          },
          {
            "name": "dataconnectors-parser-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "The Solution installs a parser that transforms the ingested data into Microsoft Sentinel normalized format. The normalized format enables better correlation of different types of data from different data sources to drive end-to-end outcomes seamlessly in security monitoring, hunting, incident investigation and response scenarios in Microsoft Sentinel."
            }
          },
          {
            "name": "dataconnectors-link1",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "link": {
                "label": "Learn more about normalized format",
                "uri": "https://docs.microsoft.com/azure/sentinel/normalization-schema"
              }
            }
          },
          {
            "name": "dataconnectors-link2",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "link": {
                "label": "Learn more about connecting data sources",
                "uri": "https://docs.microsoft.com/azure/sentinel/connect-data-sources"
              }
            }
          }
        ]
      },
      {
        "name": "playbooks",
        "label": "Playbooks",
        "subLabel": {
          "preValidation": "Configure the playbooks",
          "postValidation": "Done"
        },
        "bladeTitle": "Playbooks",
        "elements": [
          {
            "name": "playbooks-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs playbook resources.  A security playbook is a collection of procedures that can be run from Microsoft Sentinel in response to an alert. A security playbook can help automate and orchestrate your response, and can be run manually or set to run automatically when specific alerts are triggered. Security playbooks in Microsoft Sentinel are based on Azure Logic Apps, which means that you get all the power, customizability, and built-in templates of Logic Apps. Each playbook is created for the specific subscription you choose, but when you look at the Playbooks page, you will see all the playbooks across any selected subscriptions.",
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/tutorial-respond-threats-playbook?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef"
              }
            }
          },
          {
            "name": "playbook1",
            "type": "Microsoft.Common.Section",
            "label": "ArmisUpdateAlertStatus",
            "elements": [
              {
                "name": "playbook1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This playbook ingests events from Armis into Log Analytics using the API."
                }
              },
              {
                "name": "playbook1-PlaybookName",
                "type": "Microsoft.Common.TextBox",
                "label": "Playbook Name",
                "defaultValue": "ArmisUpdateAlertStatus",
                "toolTip": "Resource name for the logic app playbook.  No spaces are allowed",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter a playbook resource name"
                }
              },
              {
                "name": "playbook1-ArmisInstanceBaseURL",
                "type": "Microsoft.Common.TextBox",
                "label": "Armis Instance Base U R L",
                "defaultValue": "https://integration-crestdata.armis.com",
                "toolTip": "Please enter Armis Instance Base U R L",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter the Armis Instance Base U R L"
                }
              },
              {
                "name": "playbook1-keyvaultName",
                "type": "Microsoft.Common.TextBox",
                "label": "keyvault Name",
                "defaultValue": "ArmisSentinelKeyVault",
                "toolTip": "Please enter keyvault Name",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter the keyvault Name"
                }
              },
              {
                "name": "playbook1-tenantId",
                "type": "Microsoft.Common.TextBox",
                "label": "tenant Id",
                "defaultValue": "",
                "toolTip": "Please enter tenant Id",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter the tenant Id"
                }
              }
            ]
          }
        ]
      }
    ],
    "outputs": {
      "workspace-location": "[first(map(filter(basics('getLAWorkspace').value, (filter) => and(contains(toLower(filter.id), toLower(resourceGroup().name)),equals(filter.name,basics('workspace')))), (item) => item.location))]",
      "location": "[location()]",
      "workspace": "[basics('workspace')]",
      "playbook1-PlaybookName": "[steps('playbooks').playbook1.playbook1-PlaybookName]",
      "playbook1-ArmisInstanceBaseURL": "[steps('playbooks').playbook1.playbook1-ArmisInstanceBaseURL]",
      "playbook1-keyvaultName": "[steps('playbooks').playbook1.playbook1-keyvaultName]",
      "playbook1-tenantId": "[steps('playbooks').playbook1.playbook1-tenantId]"
    }
  }
}
