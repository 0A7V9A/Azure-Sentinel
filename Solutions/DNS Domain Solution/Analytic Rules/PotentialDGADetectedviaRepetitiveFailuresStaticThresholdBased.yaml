id: 89ba52fa-96a7-4653-829a-ca49bb13336c
name: Potential DGA(Domain Generation Algorithm) detected via Repetitive Failures - Static threshold based (ASIM DNS Solution)
description: |
  'Identifies clients with a high NXDomain count which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). Alert is generated when a new IP address is seen (based on not being seen associated with NXDomain records in prior 10-day baseline period).\n\nThe rule utilize [ASIM](https://aka.ms/AboutASIM) normalization, and is applied to any source which supports the ASIM DNS schema'
severity: Medium
status: Available 
tags:
  - Schema: ASimDns
    SchemaVersion: 0.1.6
requiredDataConnectors:
  - connectorId: GCPDNSDataConnector
    dataTypes:
      - GCPCloudDNS
  - connectorId: AzureFirewall
    dataTypes:
      - AzureDiagnostics
  - connectorId: CiscoUmbrellaDataConnector
    dataTypes:
      - Cisco_Umbrella_proxy_CL
  - connectorId: Corelight
    dataTypes:
      - Corelight
  - connectorId: InfobloxNIOS
    dataTypes:
      - Syslog
  - connectorId: NXLogDnsLogs
    dataTypes:
      - NXLog_DNS_Server_CL
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: AIVectraStream
    dataTypes:
      - VectraStream
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog
  - connectorId: ISCBind
    dataTypes:
      - Syslog

queryFrequency: 1d
queryPeriod: 10d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CommandAndControl
relevantTechniques:
query: |
  let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')
    | where wl_RuleName == 'Rare client observed with high reverse DNS lookup'
        and wl_Type == 'Detection'
    | project toint(wl_Threshold));
  let stime = 10d;
  let etime = 1d;
  //let threshold = 10;
  let SearchDomain = dynamic(["in-addr.arpa"]);
  imDns(starttime=ago(etime), domain_has_any=SearchDomain)
  | summarize
    StartTimeUtc = min(TimeGenerated),
    EndTimeUtc = max(TimeGenerated),
    dcount(DnsQuery)
    by SrcIpAddr
  | where dcount_DnsQuery > toscalar(threshold)
  | project StartTimeUtc, EndTimeUtc, SrcIpAddr, dcount_DnsQuery 
  | join kind=leftanti (imDns(starttime=ago(stime), endtime=etime, domain_has_any=SearchDomain) 
    | where DnsQuery contains "in-addr.arpa" 
    | summarize dcount(DnsQuery) by SrcIpAddr, bin(TimeGenerated, 1d)
    | where dcount_DnsQuery > toscalar(threshold)
    | project SrcIpAddr, dcount_DnsQuery 
    )
    on SrcIpAddr
  | join kind=inner (imDns(starttime=ago(etime), domain_has_any=SearchDomain)
    | summarize DNSQueries=make_set(DnsQuery, 1000) by SrcIpAddr)
    on SrcIpAddr

eventGroupingSettings:
  aggregationKind: AlertPerResult
customDetails:

alertDetailsOverride:
  alertDisplayNameFormat: "[Static threshold] Potential DGA (Domain Generation Algorithm) originating from ClientIP: '{{SrcIpAddr}}' has been detected."
  alertDescriptionFormat: "Identified clients with a high NXDomain count which could be indicative of a DGA (cycling through possible C2 domains where most C2s are not live). Alert is generated when a new IP address is seen (based on not being seen associated with NXDomain records in prior 10-day baseline period).\n\nDNSQueries requested by this client inlcude: '{{sampleNXDomainList}}'"
version: 1.0.0
kind: Scheduled