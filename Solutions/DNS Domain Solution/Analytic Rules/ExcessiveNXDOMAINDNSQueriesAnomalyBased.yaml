id: 02f23312-1a33-4390-8b80-f7cd4df4dea0
name: Detect excessive NXDOMAIN DNS queries - Anomaly based (ASIM DNS Solution)
description: |
  'This rule creates an incident in the event where client generates excessive amount of DNS queries for non-existent domains. This uses anomaly based dynamic thresholding method.\n\nThe rule utilize [ASIM](https://aka.ms/AboutASIM) normalization, and is applied to any source which supports the ASIM DNS schema'
severity: Medium
status: Available 
tags:
  - Schema: ASimNetworkSessions
    SchemaVersion: 0.2.4
requiredDataConnectors:
  - connectorId: GCPDNSDataConnector
    dataTypes:
      - GCPCloudDNS
  - connectorId: AzureFirewall
    dataTypes:
      - AzureDiagnostics
  - connectorId: CiscoUmbrellaDataConnector
    dataTypes:
      - Cisco_Umbrella_proxy_CL
  - connectorId: Corelight
    dataTypes:
      - Corelight
  - connectorId: InfobloxNIOS
    dataTypes:
      - Syslog
  - connectorId: NXLogDnsLogs
    dataTypes:
      - NXLog_DNS_Server_CL
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: AIVectraStream
    dataTypes:
      - VectraStream
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog
  - connectorId: ISCBind
    dataTypes:
      - Syslog

queryFrequency: 1d
queryPeriod: 14d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CommandAndControl
relevantTechniques:
query: |
  let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')
    | where wl_RuleName == 'Anomaly - Excessive NXDOMAIN DNS Queries'
        and wl_Type == 'Detection'
    | project toint(wl_AnomalyThreshold));
  //let lookback = 14d;
  let min_t = ago(14d);
  let max_t = now();
  let dt = 1d;
  let summarizationexist = materialize(
    union isfuzzy=true 
        (
        DNS_Summarized_Logs_ip1_CL
        | where EventTime_t > ago(1d) 
        | project v = int(2)
        ),
        (
        print int(1) 
        | project v = print_0
        )
    | summarize maxv = max(v)
    | extend sumexist = (maxv > 1)
    );
  let allData = union isfuzzy=true
        (
        (datatable(exists: int, sumexist: bool)[1, false]
        //| where toscalar(eps) >= 0
        | join (summarizationexist) on sumexist)
        | join (
            imDns(responsecodename='NXDOMAIN', starttime=todatetime(min_t), endtime=max_t)
            //| where TimeGenerated > min_t
            | summarize Count=count() by SrcIpAddr, bin(TimeGenerated, 1h)
            | extend EventTime = TimeGenerated, Count = toint(Count), exists=int(1)
            )
            on exists
        | project-away exists, maxv, sum*
        ),
        (
        DNS_Summarized_Logs_ip1_CL
        | where EventTime_t > min_t and EventResultDetails_s == 'NXDOMAIN'
        | project-rename
            SrcIpAddr=SrcIpAddr_s,
            Count=count__d,
            EventTime=EventTime_t
        | extend Count = toint(Count)
        );
  allData
  | make-series EventCount=sum(Count) on EventTime in range (min_t, max_t, dt) by SrcIpAddr
  | extend (anomalies, score, baseline) = series_decompose_anomalies(EventCount, toscalar(threshold), -1, 'linefit')
  | mv-expand anomalies, score, baseline, EventTime, EventCount
  | extend
    anomalies = toint(anomalies),
    score = toint(score),
    baseline = toint(baseline),
    EventTime = todatetime(EventTime),
    Total = tolong(EventCount)
  | where EventTime >= ago(dt)
  | where score >= toscalar(threshold)
  | join kind=inner(imDns(responsecodename='NXDOMAIN', starttime=ago(dt), endtime=max_t)
    | summarize DNSQueries = make_set(DnsQuery) by SrcIpAddr)
    on SrcIpAddr

eventGroupingSettings:
  aggregationKind: AlertPerResult
customDetails:

alertDetailsOverride:
  alertDisplayNameFormat: "[Anomaly] Excessive NXDOMAIN DNS Queries has been detected from ClientIP: '{{SrcIpAddr}}'"
  alertDescriptionFormat: "Client source is generating excessive amount of DNS queries for non-existent domains.\n\n'NXDOMAIN' error count baseline for this client is: '{{baseline}}'\n\nCurrent 'NXDOMAIN' error count from this client showing as: '{{Total}}'\n\nDNSQuery list include:\n\n'{{DNSQueries}}'"
version: 1.0.0
kind: Scheduled