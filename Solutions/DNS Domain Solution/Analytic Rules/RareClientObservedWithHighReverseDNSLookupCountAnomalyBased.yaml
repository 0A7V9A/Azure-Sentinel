id: 0fe6bde4-b215-480c-99b4-84a96edcdbd7
name: Rare client observed with high reverse DNS lookup count - Anomaly based (ASIM DNS Solution)
description: |
  'Identifies clients with a high reverse DNS counts which could be carrying out reconnaissance or discovery activity.\n\nThis uses anomaly based dynamic thresholding method.\n\nThe rule utilize [ASIM](https://aka.ms/AboutASIM) normalization, and is applied to any source which supports the ASIM DNS schema'
severity: Medium
status: Available 
tags:
  - Schema: ASimNetworkSessions
    SchemaVersion: 0.2.4
requiredDataConnectors:
  - connectorId: GCPDNSDataConnector
    dataTypes:
      - GCPCloudDNS
  - connectorId: AzureFirewall
    dataTypes:
      - AzureDiagnostics
  - connectorId: CiscoUmbrellaDataConnector
    dataTypes:
      - Cisco_Umbrella_proxy_CL
  - connectorId: Corelight
    dataTypes:
      - Corelight
  - connectorId: InfobloxNIOS
    dataTypes:
      - Syslog
  - connectorId: NXLogDnsLogs
    dataTypes:
      - NXLog_DNS_Server_CL
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: AIVectraStream
    dataTypes:
      - VectraStream
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog
  - connectorId: ISCBind
    dataTypes:
      - Syslog

queryFrequency: 1d
queryPeriod: 14d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - Reconnaissance
relevantTechniques:
query: |
  let threshold = materialize (_GetWatchlist('DNS_Solution_Monitoring_Configuration')
    | where wl_RuleName == 'Anomaly - Rare client observed with high reverse DNS lookup'
        and wl_Type == 'Detection'
    | project toint(wl_AnomalyThreshold));
  let SearchDomain = dynamic(["in-addr.arpa"]);
  let lookback = 14days;
  let timeframe = 1day;
  //let threshold = 10;
  let DNSEvents=(stime: datetime, etime: datetime) {
    imDns(starttime=stime, endtime=etime, domain_has_any=SearchDomain)
  //| where DnsQuery has "in-addr.arpa"
  };
  DNSEvents(stime=ago(lookback), etime=now())
  | make-series EventCount=count() on TimeGenerated in range (ago(lookback), now(), timeframe) by SrcIpAddr
  | extend (anomalies, score, baseline) = series_decompose_anomalies(EventCount, toscalar(threshold), -1, 'linefit')
  | mv-expand anomalies, score, baseline, TimeGenerated, EventCount
  | extend
    anomalies = toint(anomalies),
    score = toint(score),
    baseline = toint(baseline),
    EventTime = todatetime(TimeGenerated),
    Total = tolong(EventCount)
  | where TimeGenerated >= ago(timeframe)
  | where score >= toscalar(threshold)
  //| where score > 2 * AnomalyThreshold
  | extend Severity='Medium', Tactic='Discovery'
  | join kind = inner (DNSEvents(stime=ago(timeframe), etime=now())
    | summarize DNSQueries=make_set(DnsQuery, 1000) by SrcIpAddr)
    on SrcIpAddr

eventGroupingSettings:
  aggregationKind: AlertPerResult
customDetails:

alertDetailsOverride:
  alertDisplayNameFormat: "[Anomaly] Rare client has been observed as making high reverse DNS lookup count  - ClientIP: '{{SrcIpAddr}}'"
  alertDescriptionFormat: "Client identified as making high reverse DNS counts which could be carrying out reconnaissance or discovery activity.\n\nReverse lookup count baseline for this client is: '{{baseline}}'\n\nCurrent reverse lookup count by this client showing as: '{{Total}}'\nIdentifies clients with a high reverse DNS counts which could be carrying out reconnaissance or discovery activity."
version: 1.0.0
kind: Scheduled