// Title:           Infoblox parser for type - DNS-client
// Author:          Microsoft
// Version:         1.2
// Last Updated:    19/09/2022
// Comment:         Updated parser to replace use of Regex functions with Parse operator.
//
// REFERENCES: 
// Infoblox NIOS logging formats: https://docs.infoblox.com/space/NAG8/22252254/Capturing+DNS+Queries+and+Responses
//
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
// 
//      07-Apr-2013 20:16:49.083 client 10.120.20.198#57398 UDP: query: a2.foo.com IN A response: NOERROR +AED a2.foo.com. 28800 IN A 1.1.1.2;
//      30-Apr-2013 13:35:02.187 client 10.120.20.32#42386: query: foo.com IN A + (100.90.80.102)
// Response Section
let response =
    Syslog
    | where ProcessName == "named" and SyslogMessage has_all ("client", "query:", "response:")
    | parse SyslogMessage with *
        "client " SrcIpAddr: string
        "#" SrcPortNumber: string
        " " NetworkProtocol: string
        ": query: " DnsQuery: string
        " " DnsQueryClassName: string
        " " DnsQueryType: string
        " response: " DnsResponseCode: string
        " " DnsFlags: string
    | extend DNSResourceRecordIndex= indexof(DnsFlags, " ")
    | extend DNSResourceRecord =iif(DNSResourceRecordIndex != "-1", substring(DnsFlags, DNSResourceRecordIndex), "")
    | extend DnsFlags =iif(DNSResourceRecordIndex != "-1", substring(DnsFlags, 0, DNSResourceRecordIndex), DnsFlags);
// Request Section
let request =
    Syslog 
    | where ProcessName == "named"
        and SyslogMessage has_all ("client", "query:")
        and SyslogMessage !has "response:"
    | parse SyslogMessage with *
        "client " restData: string
    | extend restData = iif(restData startswith "@", (substring(restData, indexof(restData, " "))), restData)
    | extend restData = replace_string(restData,"\\ ","@@@")
    | parse restData with 
        SrcIpAddr: string
        "#" SrcPortNumber: string
        " " *
        "query: " DnsQuery: string
        " " DnsQueryClassName: string
        " " DnsQueryType: string
        " " DnsFlags: string
    | extend DnsQuery = replace_string (DnsQuery, '@@@', ' ')
    | extend ServerIPAddressIndex= indexof(DnsFlags, " ")
    | extend ServerIPAddress = iif(ServerIPAddressIndex != "-1", substring(DnsFlags, ServerIPAddressIndex), "")
    | extend ServerIPAddress = replace_regex(ServerIPAddress,@"[()]","")
    | extend DnsFlags =iif(ServerIPAddressIndex != "-1", substring(DnsFlags, 0, ServerIPAddressIndex), DnsFlags)
    | extend SrcPortNumber = replace_regex(SrcPortNumber,@"[^\d]","");
let Infoblox_NIOS_ParsedData =
    union response, request
    | project-away
        DNSResourceRecordIndex,
        ServerIPAddressIndex,
        restData,
        SyslogMessage;
Infoblox_NIOS_ParsedData
