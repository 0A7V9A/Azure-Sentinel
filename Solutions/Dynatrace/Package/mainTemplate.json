{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Dynatrace - microsoftalliances@dynatrace.com",
    "comments": "Solution template for Dynatrace"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Dynatrace",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "dynatrace.",
    "_solutionId": "[variables('solutionId')]",
    "email": "microsoftalliances@dynatrace.com",
    "_email": "[variables('email')]",
    "workbookVersion1": "2.0.0",
    "workbookContentId1": "DynatraceWorkbooks",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "analyticRuleVersion1": "1.0.0",
    "analyticRulecontentId1": "1b0b2065-8bac-5a00-83c4-1b58f69ac212",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "analyticRuleVersion2": "1.0.0",
    "analyticRulecontentId2": "305093b4-0fa2-57bc-bced-caea782a6e9c",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "analyticRuleVersion3": "1.0.0",
    "analyticRulecontentId3": "af99b078-124b-543a-9a50-66ef87c09f6a",
    "_analyticRulecontentId3": "[variables('analyticRulecontentId3')]",
    "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId3'))]",
    "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId3')))]",
    "analyticRuleVersion4": "1.0.0",
    "analyticRulecontentId4": "ff0af873-a2f2-4233-8412-0ef4e00b0156",
    "_analyticRulecontentId4": "[variables('analyticRulecontentId4')]",
    "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId4'))]",
    "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId4')))]",
    "analyticRuleVersion5": "1.0.0",
    "analyticRulecontentId5": "415978ff-074e-4203-824a-b06153d77bf7",
    "_analyticRulecontentId5": "[variables('analyticRulecontentId5')]",
    "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId5'))]",
    "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId5')))]",
    "Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence": "Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence",
    "_Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence": "[variables('Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "Enrich_DynatraceApplicationSecurityAttackIncident": "Enrich_DynatraceApplicationSecurityAttackIncident",
    "_Enrich_DynatraceApplicationSecurityAttackIncident": "[variables('Enrich_DynatraceApplicationSecurityAttackIncident')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Enrich_DynatraceApplicationSecurityAttackIncident",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
    "Enrich-DynatraceAppSecAttackAADIDPRiskySignins": "Enrich-DynatraceAppSecAttackAADIDPRiskySignins",
    "_Enrich-DynatraceAppSecAttackAADIDPRiskySignins": "[variables('Enrich-DynatraceAppSecAttackAADIDPRiskySignins')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Enrich-DynatraceAppSecAttackAADIDPRiskySignins",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]",
    "uiConfigId1": "DynatraceAttacks",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "DynatraceAttacks",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "uiConfigId2": "DynatraceRuntimeVulnerabilities",
    "_uiConfigId2": "[variables('uiConfigId2')]",
    "dataConnectorContentId2": "DynatraceRuntimeVulnerabilities",
    "_dataConnectorContentId2": "[variables('dataConnectorContentId2')]",
    "dataConnectorId2": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
    "_dataConnectorId2": "[variables('dataConnectorId2')]",
    "dataConnectorTemplateSpecName2": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId2')))]",
    "dataConnectorVersion2": "1.0.0",
    "uiConfigId3": "DynatraceProblems",
    "_uiConfigId3": "[variables('uiConfigId3')]",
    "dataConnectorContentId3": "DynatraceProblems",
    "_dataConnectorContentId3": "[variables('dataConnectorContentId3')]",
    "dataConnectorId3": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
    "_dataConnectorId3": "[variables('dataConnectorId3')]",
    "dataConnectorTemplateSpecName3": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId3')))]",
    "dataConnectorVersion3": "1.0.0",
    "uiConfigId4": "DynatraceAuditLogs",
    "_uiConfigId4": "[variables('uiConfigId4')]",
    "dataConnectorContentId4": "DynatraceAuditLogs",
    "_dataConnectorContentId4": "[variables('dataConnectorContentId4')]",
    "dataConnectorId4": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId4'))]",
    "_dataConnectorId4": "[variables('dataConnectorId4')]",
    "dataConnectorTemplateSpecName4": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId4')))]",
    "dataConnectorVersion4": "1.0.0",
    "parserVersion1": "1.0.0",
    "parserContentId1": "DynatraceAttacks-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "DynatraceAttacks",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]",
    "parserVersion2": "1.0.0",
    "parserContentId2": "DynatraceAuditLogs-Parser",
    "_parserContentId2": "[variables('parserContentId2')]",
    "parserName2": "DynatraceAuditLogs",
    "_parserName2": "[concat(parameters('workspace'),'/',variables('parserName2'))]",
    "parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
    "_parserId2": "[variables('parserId2')]",
    "parserTemplateSpecName2": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId2')))]",
    "parserVersion3": "1.0.0",
    "parserContentId3": "DynatraceProblems-Parser",
    "_parserContentId3": "[variables('parserContentId3')]",
    "parserName3": "DynatraceProblems",
    "_parserName3": "[concat(parameters('workspace'),'/',variables('parserName3'))]",
    "parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
    "_parserId3": "[variables('parserId3')]",
    "parserTemplateSpecName3": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId3')))]",
    "parserVersion4": "1.0.0",
    "parserContentId4": "DynatraceSecurityProblems-Parser",
    "_parserContentId4": "[variables('parserContentId4')]",
    "parserName4": "DynatraceSecurityProblems",
    "_parserName4": "[concat(parameters('workspace'),'/',variables('parserName4'))]",
    "parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
    "_parserId4": "[variables('parserId4')]",
    "parserTemplateSpecName4": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId4')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "Dynatrace Workbook with template",
        "displayName": "Dynatrace workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "DynatraceWorkbook Workbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This workbook brings together queries and visualizations to assist you in identifying potential threats surfaced by Dynatrace."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Overview\\n---\\nGet best-in-class APM from the category leader. Automatic and intelligent observability at scale for cloud native workloads and enterprise apps helps you ensure end-to-end hybrid cloud distributed tracing, optimize service performance, innovate faster, collaborate efficiently, and deliver more value with less effort.\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let attacks=DynatraceAttacks\\n    | project id=AttackId, TimeStamp, Type=\\\"attacks\\\";\\n\\nlet problems=DynatraceProblems\\n    | project id=ProblemId, TimeStamp=StartTime, Type=\\\"problems\\\";\\n\\nlet securityProblems=DynatraceSecurityProblems\\n    | project id=SecurityProblemId, TimeStamp=LastUpdatedTimeStamp, Type=\\\"vulnerabilities\\\";\\n\\nattacks\\n| union problems, securityProblems\\n| summarize  arg_max(TimeStamp, *) by id\\n| summarize  count() by Type\\n| render piechart;\",\"size\":0,\"title\":\"Dynatrace Events by Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"DynatraceEventsbyType\"},{\"type\":1,\"content\":{\"json\":\"## Application Events\\n---\\n\"},\"name\":\"ApplicationsAndMicroservices\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceProblems \\n| summarize  arg_max(StartTime, *) by ProblemId\\n| summarize count() by SeverityLevel\\n| render piechart\",\"size\":1,\"title\":\"Events By Problem Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"EventsByProblemType\"},{\"type\":1,\"content\":{\"json\":\"## Application Security Events\\n---\\nEmpower DevSecOps at scale with a unique approach to securing cloud-native applications at runtime combined with intelligent automation.\"},\"name\":\"ApplicationSecurity\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceSecurityProblems \\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\\n| summarize count() by Severity\\n| render piechart\",\"size\":0,\"title\":\"Vulnerabilities by Severity\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"SecurityProblemsBySeverity\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceAttacks\\n| summarize  arg_max(TimeStamp, *) by AttackId \\n| summarize count() by AttackType \\n| render piechart\",\"size\":1,\"title\":\"Attacks By Attack Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"AttacksByAttackType\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceSecurityProblems \\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\\n| summarize count() by Technology, ExternalVulnerabilityId\\n| render piechart;\",\"size\":0,\"title\":\"Vulnerability Count by Technology\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"VulnerabilityCountbyTechnology\"},{\"type\":1,\"content\":{\"json\":\"## Tenant Audit Events\\n---\\nAudit logs are crucial for tracking changes and security-relevant events. Dynatrace can log such events so that you can review important changes: when the change was made, by whom, and what was changed.\"},\"name\":\"TenantAuditing\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceAuditLogs \\n| summarize  arg_max(TimeStamp, *) by LogId \\n| where Category in (\\\"WEB_UI\\\",\\\"TOKEN\\\")\\n| summarize count() by Operation=strcat(EventType , \\\"-\\\" , Category)\\n| render piechart\",\"size\":0,\"title\":\"Audit Events By Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"AuditLogEventsByType\"}],\"fromTemplateId\":\"sentinel-DynatraceWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=DynatraceWorkbooks; logoFileName=dynatrace.svg; description=This workbook brings together queries and visualizations to assist you in identifying potential threats surfaced by Dynatrace.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=2.0.0; title=Dynatrace; templateRelativePath=Dynatrace.json; subtitle=; provider=Dynatrace}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "DynatraceAttacks",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceAuditLogs",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceProblems",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceSecurityProblems",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceAttacks",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DynatraceAuditLogs",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DynatraceProblems",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DynatraceRuntimeVulnerabilities",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Dynatrace Analytics Rule 1 with template",
        "displayName": "Dynatrace Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_AttackDetection_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Dynatrace has detected an ongoing attack in your environment.",
                "displayName": "Dynatrace Application Security - Attack detection",
                "enabled": false,
                "query": "DynatraceAttacks\n| where State != 'ALLOWLISTED'\n| summarize  arg_max(TimeStamp, *) by AttackId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceAttacks",
                    "dataTypes": [
                      "DynatraceAttacks_CL"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "PrivilegeEscalation"
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "AttackState": "State",
                  "DisplayIdentifier": "DisplayId",
                  "AttackType": "AttackType",
                  "AttackIdentifier": "AttackId"
                },
                "alertDetailsOverride": {
                  "alertDescriptionFormat": "Dynatrace has detected an ongoing attack in your environment which was {{State}}.\n",
                  "alertDisplayNameFormat": "Dynatrace Attack {{State}} - {{DisplayId}} : {{DisplayName}}"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "reopenClosedIncident": true,
                    "matchingMethod": "Selected",
                    "lookbackDuration": "7d",
                    "groupByCustomDetails": [
                      "AttackId"
                    ],
                    "enabled": true
                  },
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Dynatrace Analytics Rule 2 with template",
        "displayName": "Dynatrace Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_CodeLevelVulnerabilityDetection_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect Code-level runtime vulnerabilities in your environment insights by snyk",
                "displayName": "Dynatrace Application Security - Code-Level runtime vulnerability detection",
                "enabled": false,
                "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"CODE_LEVEL\" and DAVISRiskLevel == \"CRITICAL\" and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceRuntimeVulnerabilities",
                    "dataTypes": [
                      "DynatraceSecurityProblems_CL"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "LateralMovement",
                  "Persistence",
                  "PrivilegeEscalation"
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                  "VulnerabilityType": "VulnerabilityType",
                  "SecurityProblemUrl": "Url",
                  "DAVISRiskLevel": "DAVISRiskLevel",
                  "SecProbIdentifier": "SecurityProblemId",
                  "DAVISExposure": "DAVISExposure",
                  "DAVISRiskVector": "DAVISRiskVector",
                  "Technology": "Technology",
                  "DAVISPublicExploit": "DAVISPublicExploit",
                  "DAVISDataAssets": "DAVISDataAssets",
                  "CVEIds": "CVEIds",
                  "ExternVulnIdentifier": "ExternalVulnerabilityId",
                  "PackageName": "PackageName",
                  "DAVISRiskScore": "DAVISRiskScore",
                  "DAVISVulnFuncUsage": "DAVISVulnerableFunctionUsage",
                  "DisplayIdentifier": "DisplayId"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Code-Level runtime vulnerability detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "Code-Level runtime vulnerability ({{ExternalVulnerabilityId}}) detected in package ({{PackageName}}), more details available from Dynatrace at {{Url}}.\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Dynatrace Analytics Rule 3 with template",
        "displayName": "Dynatrace Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName3'),'/',variables('analyticRuleVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_ThirdPartyVulnerabilityDetection_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId3')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect Third-Party runtime vulnerabilities in your environment insights by snyk",
                "displayName": "Dynatrace Application Security - Third-Party runtime vulnerability detection",
                "enabled": false,
                "query": "DynatraceSecurityProblems\n| where VulnerabilityType != \"CODE_LEVEL\" and DAVISRiskLevel == \"CRITICAL\"  and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceRuntimeVulnerabilities",
                    "dataTypes": [
                      "DynatraceSecurityProblems_CL"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "LateralMovement",
                  "Persistence",
                  "PrivilegeEscalation"
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                  "VulnerabilityType": "VulnerabilityType",
                  "SecurityProblemUrl": "Url",
                  "DAVISRiskLevel": "DAVISRiskLevel",
                  "SecProbIdentifier": "SecurityProblemId",
                  "DAVISExposure": "DAVISExposure",
                  "DAVISRiskVector": "DAVISRiskVector",
                  "Technology": "Technology",
                  "DAVISPublicExploit": "DAVISPublicExploit",
                  "DAVISDataAssets": "DAVISDataAssets",
                  "CVEIds": "CVEIds",
                  "ExternVulnIdentifier": "ExternalVulnerabilityId",
                  "PackageName": "PackageName",
                  "DAVISRiskScore": "DAVISRiskScore",
                  "DAVISVulnFuncUsage": "DAVISVulnerableFunctionUsage",
                  "DisplayIdentifier": "DisplayId"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Third-party runtime vulnerability detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "Third-party runtime vulnerability ({{ExternalVulnerabilityId}}) detected in package ({{PackageName}}), more details available from Dynatrace at {{Url}}.\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId3'),'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 3",
                "parentId": "[variables('analyticRuleId3')]",
                "contentId": "[variables('_analyticRulecontentId3')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Dynatrace Analytics Rule 4 with template",
        "displayName": "Dynatrace Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName4'),'/',variables('analyticRuleVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_NonCriticalVulnerabilityDetection_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId4')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect runtime vulnerabilities in your environment insights by snyk",
                "displayName": "Dynatrace Application Security - Non-critical runtime vulnerability detection",
                "enabled": false,
                "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel != \"CRITICAL\"  and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceRuntimeVulnerabilities",
                    "dataTypes": [
                      "DynatraceSecurityProblems_CL"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "LateralMovement",
                  "Persistence",
                  "PrivilegeEscalation"
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                  "VulnerabilityType": "VulnerabilityType",
                  "SecurityProblemUrl": "Url",
                  "DAVISRiskLevel": "DAVISRiskLevel",
                  "SecProbIdentifier": "SecurityProblemId",
                  "DAVISExposure": "DAVISExposure",
                  "DAVISRiskVector": "DAVISRiskVector",
                  "Technology": "Technology",
                  "DAVISPublicExploit": "DAVISPublicExploit",
                  "DAVISDataAssets": "DAVISDataAssets",
                  "CVEIds": "CVEIds",
                  "ExternVulnIdentifier": "ExternalVulnerabilityId",
                  "PackageName": "PackageName",
                  "DAVISRiskScore": "DAVISRiskScore",
                  "DAVISVulnFuncUsage": "DAVISVulnerableFunctionUsage",
                  "DisplayIdentifier": "DisplayId"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Non-critical runtime vulnerability detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "Non-critical runtime vulnerability ({{ExternalVulnerabilityId}}) detected in package ({{PackageName}}), more details available from Dynatrace at {{Url}}.\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId4'),'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 4",
                "parentId": "[variables('analyticRuleId4')]",
                "contentId": "[variables('_analyticRulecontentId4')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Dynatrace Analytics Rule 5 with template",
        "displayName": "Dynatrace Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName5'),'/',variables('analyticRuleVersion5'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName5'))]"
      ],
      "properties": {
        "description": "Dynatrace_ProblemDetection_AnalyticalRules Analytics Rule with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId5')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect application & infrastructure problems in your environment",
                "displayName": "Dynatrace - Problem detection",
                "enabled": false,
                "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceProblems",
                    "dataTypes": [
                      "DynatraceProblems_CL"
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                },
                "customDetails": {
                  "SeverityLevel": "SeverityLevel",
                  "ImpactLevel": "ImpactLevel",
                  "ProblemIdentifier": "ProblemId",
                  "DisplayIdentifier": "DisplayId"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace problem detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "A application and/or infrastructure problem has been detected in your environment\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId5'),'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 5",
                "parentId": "[variables('analyticRuleId5')]",
                "contentId": "[variables('_analyticRulecontentId5')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "AddDynatraceApplicationSecurityAttackSourceIPAddressTI playbook",
        "displayName": "AddDynatraceApplicationSecurityAttackSourceIPAddressTI playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "AddDynatraceApplicationSecurityAttackSourceIPAddressTI Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "AddDynatraceApplicationSecurityAttackSourceIPAddressTI",
              "type": "string",
              "metadata": {
                "description": "Alert trigger"
              }
            },
            "DynatraceEnvironmentUrl": {
              "defaultValue": "<Dynatrace environment url>",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "DynatraceApiToken": {
              "type": "securestring",
              "metadata": {
                "description": "Dynatrace Api Token"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "MicrosoftGraphSecurityConnectionName": "[[concat('microsoftgraphsecurity-', parameters('PlaybookName'))]",
            "connection-1": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'microsoftgraphsecurity')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftGraphSecurityConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftGraphSecurityConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "AddDynatraceApplicationSecurityAttackSourceIPAddressThreatIntelligence-Alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftGraphSecurityConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "ApiToken": {
                      "type": "SecureString"
                    },
                    "EnvironmentUrl": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{parameters('ApiToken')}"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker"
                        },
                        "uri": "@{parameters('EnvironmentUrl')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['attackId'])}"
                      }
                    },
                    "If_SourceIP_available_create_threat_indicator": {
                      "actions": {
                        "Does_tiIndicator_already_Exist": {
                          "actions": {
                            "Create_tiIndicator_for_attackers_source_ip": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "action": "alert",
                                  "confidence": 0,
                                  "description": "Dynatrace Application Security - @{body('Parse_Dynatrace_Attack_JSON')?['attackType']} Attack Detected",
                                  "expirationDateTime": "@{addDays(utcNow(),7)}",
                                  "externalId": "@body('Parse_Dynatrace_Attack_JSON')?['attackId']",
                                  "networkSourceCidrBlock": "@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}/32",
                                  "severity": 0,
                                  "targetProduct": "Azure Sentinel",
                                  "threatType": "WatchList",
                                  "tlpLevel": "white"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/beta/security/tiIndicators"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_Existing_tiIndicator": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "For_each_tiIndicator": {
                                "foreach": "@body('Get_Existing_tiIndicator')?['value']",
                                "actions": {
                                  "Update_tiIndicator_expiration": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": {
                                        "expirationDateTime": "@{addDays(utcNow(),7)}",
                                        "targetProduct": "Azure Sentinel"
                                      },
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                        }
                                      },
                                      "method": "patch",
                                      "path": "/beta/security/tiIndicators/@{encodeURIComponent(items('For_each_tiIndicator')?['id'])}"
                                    }
                                  }
                                },
                                "type": "Foreach"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "lessOrEquals": [
                                  "@body('Get_Existing_tiIndicator')?['@odata.count']",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Existing_tiIndicator": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/beta/security/tiIndicators",
                            "queries": {
                              "$count": "true",
                              "$filter": "externalId eq '@{body('Parse_Dynatrace_Attack_JSON')?['attackId']}' and networkSourceCidrBlock eq '@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}/32'"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Dynatrace_did_not_supply_a_source_ip_for_attack": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Succeeded"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']",
                                ""
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['ExtendedProperties']?['Custom Details']",
                        "schema": {
                          "properties": {
                            "attackId": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "attackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "displayId": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "state": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "microsoftgraphsecurity": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftGraphSecurityConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftGraphSecurityConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'microsoftgraphsecurity')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "ApiToken": {
                    "value": "[[parameters('DynatraceApiToken')]"
                  },
                  "EnvironmentUrl": {
                    "value": "[[parameters('DynatraceEnvironmentUrl')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add Dynatrace Application Security Attack Source IP Address to Threat Intelligence",
            "description": "This playbook will add an attackers source ip to Threat Intelligence when a new incident is opened in Microsoft Sentinel.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add Dynatrace Application Security Attack Source IP Address to Threat Intelligence",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "EnrichDynatraceApplicationSecurityAttackIncident playbook",
        "displayName": "EnrichDynatraceApplicationSecurityAttackIncident playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "EnrichDynatraceApplicationSecurityAttackIncident Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "EnrichDynatraceApplicationSecurityAttackIncident",
              "type": "string",
              "metadata": {
                "description": "Incident trigger"
              }
            },
            "DynatraceEnvironmentUrl": {
              "defaultValue": "<Dynatrace environment url>",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "DynatraceApiToken": {
              "type": "securestring",
              "metadata": {
                "description": "Dynatrace Api Token"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "AzureMonitorLogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "AzureLogAnalyticsDataCollectorConnectionName": "[[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
            "connection-1": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azureloganalyticsdatacollector')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureMonitorLogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureMonitorLogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureLogAnalyticsDataCollectorConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureLogAnalyticsDataCollectorConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "EnrichDynatraceApplicationSecurityAttack-Incident",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureLogAnalyticsDataCollectorConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "ApiToken": {
                      "type": "SecureString"
                    },
                    "EnvironmentUrl": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "For_each_management_zone": {
                      "foreach": "@body('Parse_Dynatrace_Attack_JSON')?['managementZones']",
                      "actions": {
                        "Append_management_zone_tag": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "tags",
                            "value": "ManagementZone : @{items('For_each_management_zone')['name']}"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_incident_tag_array": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{parameters('ApiToken')}"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker, +entrypoint,+vulnerability,+managementZones,+request"
                        },
                        "uri": "@{parameters('EnvironmentUrl')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['attackId'])}"
                      }
                    },
                    "Initialize_incident_tag_array": {
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "tags",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "entrypoint": {
                              "properties": {
                                "entrypointFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "payload": {
                                  "properties": {
                                    "truncationInfo": {
                                      "properties": {
                                        "truncated": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "values": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "managementZones": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            },
                            "vulnerability": {
                              "properties": {
                                "codeLocation": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                },
                                "displayName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "vulnerabilityId": {
                                  "type": "string"
                                },
                                "vulnerableFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "vulnerableFunctionInput": {
                                  "properties": {
                                    "inputSegments": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "value",
                                          "type"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['Alerts'][0]['properties']['additionalData']['Custom Details']",
                        "schema": {
                          "properties": {
                            "attackId": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "attackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "displayId": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "state": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Update_incident_with_tags": {
                      "runAfter": {
                        "For_each_management_zone": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "description": "<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-baqh{text-align:center;vertical-align:top}\n.tg .tg-0lax{text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\">\n<tbody>\n  <tr>\n    <td class=\"tg-1wig\">Process group instance</th>\n    <td class=\"tg-0lax\">@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['name']}</th>\n  </tr>\n  <tr>\n    <td class=\"tg-1wig\">Vulnerability</td>\n    <td class=\"tg-0lax\">@{body('Parse_Dynatrace_Attack_JSON')?['attackType']}</td>\n  </tr>\n  <tr>\n    <td class=\"tg-1wig\">Source IP</td>\n    <td class=\"tg-0lax\">@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}</td>\n  </tr>\n  <tr>\n    <td class=\"tg-baqh\" colspan=\"2\"><a href=\"@{parameters('EnvironmentUrl')}/ui/security/attacks/@{body('Parse_Dynatrace_Attack_JSON')?['attackId']}\" target=\"_blank\" rel=\"noopener noreferrer\">Go to Dynatrace</a></td>\n  </tr>\n</tbody>\n</table>",
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "tagsToAdd": {
                            "TagsToAdd": "@variables('tags')"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "/Incidents"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                        "connectionName": "[[variables('AzureMonitorLogsConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuremonitorlogs')]"
                      },
                      "azureloganalyticsdatacollector": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureLogAnalyticsDataCollectorConnectionName'))]",
                        "connectionName": "[[variables('AzureLogAnalyticsDataCollectorConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azureloganalyticsdatacollector')]"
                      }
                    }
                  },
                  "ApiToken": {
                    "value": "[[parameters('DynatraceApiToken')]"
                  },
                  "EnvironmentUrl": {
                    "value": "[[parameters('DynatraceEnvironmentUrl')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Enrich Dynatrace Application Security Attack Incident",
            "description": "This playbook will enriche Dynatrace Application Security Attack Incidents with additional information when new incident is opened.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Enrich Dynatrace Application Security Attack Incident",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "Enrich-DynatraceAppSecAttackAADIDPRiskySignins playbook",
        "displayName": "Enrich-DynatraceAppSecAttackAADIDPRiskySignins playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "Enrich-DynatraceAppSecAttackAADIDPRiskySignins Playbook with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Enrich-DynatraceAppSecAttackAADIDPRiskySignins",
              "type": "string",
              "metadata": {
                "description": "Incident trigger"
              }
            },
            "DynatraceEnvironmentUrl": {
              "defaultValue": "<Dynatrace environment url>",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "DynatraceApiToken": {
              "type": "securestring",
              "metadata": {
                "description": "Dynatrace Api Token"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "AzureMonitorLogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "connection-1": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureMonitorLogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureMonitorLogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "EnrichDynatraceAppSecAttackAADIDPRiskySignins-Incident",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "ApiToken": {
                      "type": "SecureString"
                    },
                    "EnvironmentUrl": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "For_Each_Security_Alert": {
                      "foreach": "@body('Get_IDP_Security_Alerts')?['value']",
                      "actions": {
                        "Append_Extended_Properties_to_LogEntries": {
                          "runAfter": {
                            "For_each_Security_Alert_Entity": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "logentries",
                            "value": "@addProperty(addProperty(json(items('For_Each_Security_Alert')?['ExtendedProperties']),'MicrosoftSentinelSystemAlertId',items('For_Each_Security_Alert')['SystemAlertId']),'timestamp',variables('Timestamp'))\n"
                          }
                        },
                        "Append_Payload_Item_to_LogEntries": {
                          "runAfter": {
                            "Compose_Ingest_Payload_Item": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "logentries",
                            "value": "@outputs('Compose_Ingest_Payload_Item')"
                          }
                        },
                        "Compose_Ingest_Payload_Item": {
                          "type": "Compose",
                          "inputs": {
                            "AlertName": "@{items('For_Each_Security_Alert')?['AlertName']}",
                            "AlertType": "@{items('For_Each_Security_Alert')?['AlertType']}",
                            "Description": "@{items('For_Each_Security_Alert')?['Description']}",
                            "EndTime": "@{items('For_Each_Security_Alert')?['EndTime']}",
                            "MicrosoftSentinelSystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                            "ProductName": "@{items('For_Each_Security_Alert')?['ProductName']}",
                            "ProviderName": "@{items('For_Each_Security_Alert')?['ProviderName']}",
                            "StartTime": "@{items('For_Each_Security_Alert')?['StartTime']}",
                            "Tactics": "@{items('For_Each_Security_Alert')?['Tactics']}",
                            "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                            "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                            "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                            "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                            "severity": "@{items('For_Each_Security_Alert')?['AlertSeverity']}",
                            "timestamp": "@{variables('Timestamp')}"
                          }
                        },
                        "For_each_Security_Alert_Entity": {
                          "foreach": "@json(items('For_Each_Security_Alert')?['Entities'])",
                          "actions": {
                            "Append_Entity_Item_to_LogEntries": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@addProperty(addProperty(items('For_each_Security_Alert_Entity'),'MicrosoftSentinelSystemAlertId',items('For_Each_Security_Alert')['SystemAlertId']),'timestamp',variables('Timestamp'))"
                              }
                            }
                          },
                          "runAfter": {
                            "Append_Payload_Item_to_LogEntries": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Get_IDP_Security_Alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{parameters('ApiToken')}"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker, +entrypoint,+vulnerability,+managementZones,+request"
                        },
                        "uri": "@{parameters('EnvironmentUrl')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['AttackIdentifier'])}"
                      }
                    },
                    "Get_IDP_Security_Alerts": {
                      "runAfter": {
                        "Initialize_Timestamp": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "let start_date=datetime_add(\"day\", 1, todatetime(\"@{variables('Timestamp')}\"));\nlet end_date=datetime_add(\"day\", -1,  todatetime(\"@{variables('Timestamp')}\"));\n\nSecurityAlert \n| where ProductName == \"Azure Active Directory Identity Protection\"\n| where TimeGenerated between (start_date .. end_date) and \n    ExtendedProperties contains \"@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}\"\n| top 10 by TimeGenerated;",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                          "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                          "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                          "resourcetype": "Log Analytics Workspace",
                          "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                          "timerange": "Last 7 days"
                        }
                      }
                    },
                    "Ingest_Dynatrace_Log_Entries": {
                      "runAfter": {
                        "For_Each_Security_Alert": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "@variables('logentries')",
                        "headers": {
                          "Authorization": "Api-Token @{parameters('ApiToken')}",
                          "Content-Type": "application/json; charset=utf-8"
                        },
                        "method": "POST",
                        "uri": "@{parameters('EnvironmentUrl')}/api/v2/logs/ingest"
                      }
                    },
                    "Initialize_LogEntries": {
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "logentries",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Timestamp": {
                      "runAfter": {
                        "Initialize_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Timestamp",
                            "type": "string",
                            "value": "@{addSeconds('1970-01-01T00:00:00Z', int(first(split(string(mul(body('Parse_Dynatrace_Attack_JSON')?['timestamp'], 0.001)),'.'))))}"
                          }
                        ]
                      }
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "entrypoint": {
                              "properties": {
                                "entrypointFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "payload": {
                                  "properties": {
                                    "truncationInfo": {
                                      "properties": {
                                        "truncated": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "values": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "managementZones": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            },
                            "vulnerability": {
                              "properties": {
                                "codeLocation": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                },
                                "displayName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "vulnerabilityId": {
                                  "type": "string"
                                },
                                "vulnerableFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "vulnerableFunctionInput": {
                                  "properties": {
                                    "inputSegments": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "value",
                                          "type"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['Alerts'][0]['properties']['additionalData']['Custom Details']",
                        "schema": {
                          "properties": {
                            "AttackIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackState": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "DisplayIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                        "connectionName": "[[variables('AzureMonitorLogsConnectionName')]",
                        "id": "[[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'),'azuremonitorlogs')]"
                      }
                    }
                  },
                  "ApiToken": {
                    "value": "[[parameters('DynatraceApiToken')]"
                  },
                  "EnvironmentUrl": {
                    "value": "[[parameters('DynatraceEnvironmentUrl')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Report Azure Active Directory Identity Protection Risky Sign-ins related to Dynatrace Application Security Attack",
            "description": "This playbook will report Azure Active Directory Identity Protection Risky Sign-ins related to Dynatrace Application Security Attack back to Dynatrace.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Report Azure Active Directory Identity Protection Risky Sign-ins related to Dynatrace Application Security Attack",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Dynatrace data connector with template",
        "displayName": "Dynatrace template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Dynatrace Attacks",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the Dynatrace Attacks REST API to ingest detected attacks into Microsoft Sentinel Log Analytics",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceAttacks_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Attack Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Attack Events",
                      "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
                    },
                    {
                      "description": "All Exploited Attack Events",
                      "query": "DynatraceAttacks\n| where State == \"EXPLOITED\"\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
                    },
                    {
                      "description": "Count Attacks by Type",
                      "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n| summarize count() by AttackType\n| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read attacks*** (attacks.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security). \n Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace Environment Url",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Attack Events to Microsoft Sentinel"
                    }
                  ]
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/attacks",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json"
                    }
                  },
                  "paging": {
                    "pagingType": "PageToken",
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 500
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.attacks"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId1')]",
          "title": "Dynatrace Attacks",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the Dynatrace Attacks REST API to ingest detected attacks into Microsoft Sentinel Log Analytics",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceAttacks_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Attack Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Attack Events",
              "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
            },
            {
              "description": "All Exploited Attack Events",
              "query": "DynatraceAttacks\n| where State == \"EXPLOITED\"\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
            },
            {
              "description": "Count Attacks by Type",
              "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n| summarize count() by AttackType\n| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read attacks*** (attacks.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security). \n Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace Environment Url",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Attack Events to Microsoft Sentinel"
            }
          ]
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/attacks",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json"
            }
          },
          "paging": {
            "pagingType": "PageToken",
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 500
          },
          "response": {
            "eventsJsonPaths": [
              "$.attacks"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Dynatrace data connector with template",
        "displayName": "Dynatrace template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName2'),'/',variables('dataConnectorVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId2')]",
                  "title": "Dynatrace Runtime Vulnerabilities",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the [Dynatrace Security Problem REST API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/application-security/security-problems) to ingest detected runtime vulnerabilities into Microsoft Sentinel Log Analytics.",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceSecurityProblems_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Vulnerabilities Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "All Third-Party Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"THIRD_PARTY\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "All Code-level Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"CODE_LEVEL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "All Runtime Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"RUNTIME\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "Critical Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"CRITICAL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
                    },
                    {
                      "description": "High Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"HIGH\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
                    },
                    {
                      "description": "Count Vulnerability Events by Technology and Vulnerability",
                      "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| summarize count() by Technology, ExternalVulnerabilityId\n| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read security problems*** (securityProblems.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security). \n Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace Environment Url",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Vulnerabilities Events to Microsoft Sentinel"
                    }
                  ]
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/securityProblems",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json"
                    },
                    "queryParameters": {
                      "fields": "+riskAssessment"
                    }
                  },
                  "paging": {
                    "pagingType": "PageToken",
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 10
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.securityProblems"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
                "contentId": "[variables('_dataConnectorContentId2')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId2')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId2')]",
          "title": "Dynatrace Runtime Vulnerabilities",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the [Dynatrace Security Problem REST API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/application-security/security-problems) to ingest detected runtime vulnerabilities into Microsoft Sentinel Log Analytics.",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceSecurityProblems_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Vulnerabilities Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "All Third-Party Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"THIRD_PARTY\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "All Code-level Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"CODE_LEVEL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "All Runtime Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"RUNTIME\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "Critical Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"CRITICAL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
            },
            {
              "description": "High Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"HIGH\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
            },
            {
              "description": "Count Vulnerability Events by Technology and Vulnerability",
              "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| summarize count() by Technology, ExternalVulnerabilityId\n| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read security problems*** (securityProblems.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security). \n Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace Environment Url",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Vulnerabilities Events to Microsoft Sentinel"
            }
          ]
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/securityProblems",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json"
            },
            "queryParameters": {
              "fields": "+riskAssessment"
            }
          },
          "paging": {
            "pagingType": "PageToken",
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 10
          },
          "response": {
            "eventsJsonPaths": [
              "$.securityProblems"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Dynatrace data connector with template",
        "displayName": "Dynatrace template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName3'),'/',variables('dataConnectorVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId3')]",
                  "title": "Dynatrace Problems",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the [Dynatrace Problem REST API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/problems-v2) to ingest problem events into Microsoft Sentinel Log Analytics",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceProblems_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Problem Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Problem Events",
                      "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "All Open Problem Events",
                      "query": "DynatraceProblems\n| summarize  arg_max(EndTime, *) by ProblemId\n| where isnull(EndTime) or Status == \"OPEN\"\n|  take 10"
                    },
                    {
                      "description": "Error Problem Events",
                      "query": "DynatraceProblems\n| where SeverityLevel == \"ERROR\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "Availability Problem Events",
                      "query": "DynatraceProblems\n| where SeverityLevel == \"AVAILABILITY\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "Performance Problem Events",
                      "query": "DynatraceProblems\n| where SeverityLevel == \"PERFORMANCE\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "Count Problem Events by impact level",
                      "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by ImpactLevel\n| take 10"
                    },
                    {
                      "description": "Count Problem Events by severity level",
                      "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by SeverityLevel\n| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read problems*** (problems.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace Environment Url",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Problem Events to Microsoft Sentinel"
                    }
                  ]
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/problems",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json"
                    },
                    "queryParameters": {
                      "fields": "+evidenceDetails,+impactAnalysis"
                    }
                  },
                  "paging": {
                    "pagingType": "PageToken",
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 10
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.problems"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
                "contentId": "[variables('_dataConnectorContentId3')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId3')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId3')]",
          "title": "Dynatrace Problems",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the [Dynatrace Problem REST API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/problems-v2) to ingest problem events into Microsoft Sentinel Log Analytics",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceProblems_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Problem Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Problem Events",
              "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "All Open Problem Events",
              "query": "DynatraceProblems\n| summarize  arg_max(EndTime, *) by ProblemId\n| where isnull(EndTime) or Status == \"OPEN\"\n|  take 10"
            },
            {
              "description": "Error Problem Events",
              "query": "DynatraceProblems\n| where SeverityLevel == \"ERROR\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "Availability Problem Events",
              "query": "DynatraceProblems\n| where SeverityLevel == \"AVAILABILITY\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "Performance Problem Events",
              "query": "DynatraceProblems\n| where SeverityLevel == \"PERFORMANCE\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "Count Problem Events by impact level",
              "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by ImpactLevel\n| take 10"
            },
            {
              "description": "Count Problem Events by severity level",
              "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by SeverityLevel\n| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read problems*** (problems.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace Environment Url",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Problem Events to Microsoft Sentinel"
            }
          ]
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/problems",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json"
            },
            "queryParameters": {
              "fields": "+evidenceDetails,+impactAnalysis"
            }
          },
          "paging": {
            "pagingType": "PageToken",
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 10
          },
          "response": {
            "eventsJsonPaths": [
              "$.problems"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Dynatrace data connector with template",
        "displayName": "Dynatrace template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName4'),'/',variables('dataConnectorVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId4'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId4')]",
                  "title": "Dynatrace Audit Logs",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the [Dynatrace Audit Logs REST API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/audit-logs) to ingest tenant audit logs into Microsoft Sentinel Log Analytics",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceAuditLogs_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Audit Log Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Audit Log Events",
                      "query": "DynatraceAuditLogs\n| take 10"
                    },
                    {
                      "description": "User Login Events",
                      "query": "DynatraceAuditLogs\n| where EventType == \"LOGIN\"\n and Category == \"WEB_UI\"\n | take 10"
                    },
                    {
                      "description": "Access Token Creation Events",
                      "query": "DynatraceAuditLogs\n| where EventType == \"CREATE\"\n and Category == \"TOKEN\"\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read audit logs*** (auditLogs.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Enable Dynatrace Audit [Logging](https://www.dynatrace.com/support/help/how-to-use-dynatrace/data-privacy-and-security/configuration/audit-logs#enable-audit-logging). \n Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace Environment Url",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Audit Log Events to Microsoft Sentinel"
                    }
                  ]
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/auditlogs",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json"
                    }
                  },
                  "paging": {
                    "pagingType": "PageToken",
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 1000
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.auditLogs"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId4'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId4'))]",
                "contentId": "[variables('_dataConnectorContentId4')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId4'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId4')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId4'))]",
        "contentId": "[variables('_dataConnectorContentId4')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion4')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId4'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId4')]",
          "title": "Dynatrace Audit Logs",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the [Dynatrace Audit Logs REST API](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/audit-logs) to ingest tenant audit logs into Microsoft Sentinel Log Analytics",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceAuditLogs_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Audit Log Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Audit Log Events",
              "query": "DynatraceAuditLogs\n| take 10"
            },
            {
              "description": "User Login Events",
              "query": "DynatraceAuditLogs\n| where EventType == \"LOGIN\"\n and Category == \"WEB_UI\"\n | take 10"
            },
            {
              "description": "Access Token Creation Events",
              "query": "DynatraceAuditLogs\n| where EventType == \"CREATE\"\n and Category == \"TOKEN\"\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read audit logs*** (auditLogs.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Enable Dynatrace Audit [Logging](https://www.dynatrace.com/support/help/how-to-use-dynatrace/data-privacy-and-security/configuration/audit-logs#enable-audit-logging). \n Follow [these instructions](https://www.dynatrace.com/support/help/get-started/access-tokens#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace Environment Url",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Audit Log Events to Microsoft Sentinel"
            }
          ]
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/auditlogs",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json"
            }
          },
          "paging": {
            "pagingType": "PageToken",
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 1000
          },
          "response": {
            "eventsJsonPaths": [
              "$.auditLogs"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "DynatraceAttacks Data Parser with template",
        "displayName": "DynatraceAttacks Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "DynatraceAttacks Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "DynatraceAttacks",
                "category": "Samples",
                "functionAlias": "DynatraceAttacks",
                "query": "\n\r\nDynatraceAttacks_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Application Security'\r\n| extend Severity = 'High'\r\n| project-rename\r\n    AttackId = attackId_s,\r\n    AttackType = attackType_s,\r\n    DisplayId = displayId_s,\r\n    DisplayName = displayName_s,\r\n    State = state_s,\r\n    TimeStamp = timestamp_d",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "DynatraceAttacks"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "DynatraceAttacks",
        "category": "Samples",
        "functionAlias": "DynatraceAttacks",
        "query": "\n\r\nDynatraceAttacks_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Application Security'\r\n| extend Severity = 'High'\r\n| project-rename\r\n    AttackId = attackId_s,\r\n    AttackType = attackType_s,\r\n    DisplayId = displayId_s,\r\n    DisplayName = displayName_s,\r\n    State = state_s,\r\n    TimeStamp = timestamp_d",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "DynatraceAuditLogs Data Parser with template",
        "displayName": "DynatraceAuditLogs Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName2'),'/',variables('parserVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "DynatraceAuditLogs Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName2')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "DynatraceAuditLogs",
                "category": "Samples",
                "functionAlias": "DynatraceAuditLogs",
                "query": "\n\r\nDynatraceAuditLogs_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Audit'\r\n| extend Severity = 'Informational'\r\n| project-rename\r\n    LogId = logId_s,\r\n    EnvironmentId = environmentId_s,\r\n    EventType = eventType_s,\r\n    UserOrigin = userOrigin_s,\r\n    UserType = userType_s,\r\n    User = user_s,\r\n    Success = success_b,\r\n    TimeStamp = timestamp_d\r\n| project-away entityId_s, patch_s, user_g",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "DynatraceAuditLogs"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName2')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
                "contentId": "[variables('_parserContentId2')]",
                "kind": "Parser",
                "version": "[variables('parserVersion2')]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName2')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "DynatraceAuditLogs",
        "category": "Samples",
        "functionAlias": "DynatraceAuditLogs",
        "query": "\n\r\nDynatraceAuditLogs_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Audit'\r\n| extend Severity = 'Informational'\r\n| project-rename\r\n    LogId = logId_s,\r\n    EnvironmentId = environmentId_s,\r\n    EventType = eventType_s,\r\n    UserOrigin = userOrigin_s,\r\n    UserType = userType_s,\r\n    User = user_s,\r\n    Success = success_b,\r\n    TimeStamp = timestamp_d\r\n| project-away entityId_s, patch_s, user_g",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId2')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
        "contentId": "[variables('_parserContentId2')]",
        "kind": "Parser",
        "version": "[variables('parserVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "DynatraceProblems Data Parser with template",
        "displayName": "DynatraceProblems Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName3'),'/',variables('parserVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "DynatraceProblems Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName3')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "DynatraceProblems",
                "category": "Samples",
                "functionAlias": "DynatraceProblems",
                "query": "\n\r\nDynatraceProblems_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Application Monitoring'\r\n| extend Severity = case(severityLevel_s  == 'ERROR', 'High', \r\n                       severityLevel_s == 'INFO', 'Informational', \r\n                       'Medium')\r\n| project-rename\r\n    ProblemId = problemId_s,\r\n    AffectedEntities = affectedEntities_s ,\r\n    ImpactedEntities = impactedEntities_s ,\r\n    ManagementZones = managementZones_s ,\r\n    DisplayId = displayId_s,\r\n    EndTime = endTime_d ,\r\n    EntityTags = entityTags_s ,\r\n    ImpactLevel = impactLevel_s ,\r\n    StartTime = startTime_d ,\r\n    Status = status_s ,\r\n    Title = title_s, \r\n    SeverityLevel = severityLevel_s\r\n| project-away evidenceDetails_details_s, evidenceDetails_totalCount_d, impactAnalysis_impacts_s, problemFilters_s, rootCauseEntity_entityId_id_s ,rootCauseEntity_entityId_type_s , rootCauseEntity_name_s\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "DynatraceProblems"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName3')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
                "contentId": "[variables('_parserContentId3')]",
                "kind": "Parser",
                "version": "[variables('parserVersion3')]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName3')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "DynatraceProblems",
        "category": "Samples",
        "functionAlias": "DynatraceProblems",
        "query": "\n\r\nDynatraceProblems_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Application Monitoring'\r\n| extend Severity = case(severityLevel_s  == 'ERROR', 'High', \r\n                       severityLevel_s == 'INFO', 'Informational', \r\n                       'Medium')\r\n| project-rename\r\n    ProblemId = problemId_s,\r\n    AffectedEntities = affectedEntities_s ,\r\n    ImpactedEntities = impactedEntities_s ,\r\n    ManagementZones = managementZones_s ,\r\n    DisplayId = displayId_s,\r\n    EndTime = endTime_d ,\r\n    EntityTags = entityTags_s ,\r\n    ImpactLevel = impactLevel_s ,\r\n    StartTime = startTime_d ,\r\n    Status = status_s ,\r\n    Title = title_s, \r\n    SeverityLevel = severityLevel_s\r\n| project-away evidenceDetails_details_s, evidenceDetails_totalCount_d, impactAnalysis_impacts_s, problemFilters_s, rootCauseEntity_entityId_id_s ,rootCauseEntity_entityId_type_s , rootCauseEntity_name_s\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId3')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
        "contentId": "[variables('_parserContentId3')]",
        "kind": "Parser",
        "version": "[variables('parserVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "DynatraceSecurityProblems Data Parser with template",
        "displayName": "DynatraceSecurityProblems Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName4'),'/',variables('parserVersion4'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName4'))]"
      ],
      "properties": {
        "description": "DynatraceSecurityProblems Data Parser with template version 2.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName4')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "DynatraceSecurityProblems",
                "category": "Samples",
                "functionAlias": "DynatraceSecurityProblems",
                "query": "\n\r\nDynatraceSecurityProblems_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Application Security'\r\n| extend Severity = case(riskAssessment_riskLevel_s == 'CRITICAL', 'High', \r\n                       riskAssessment_riskLevel_s == 'HIGH', 'Medium', \r\n                       riskAssessment_riskLevel_s == 'MEDIUM', 'Low',\r\n                       'Informational')\r\n| project-rename\r\n    SecurityProblemId = securityProblemId_s,\r\n    CVEIds = cveIds_s,\r\n    DisplayId = displayId_s,\r\n    ExternalVulnerabilityId = externalVulnerabilityId_s ,\r\n    FirstSeenTimeStamp = firstSeenTimestamp_d ,\r\n    LastUpdatedTimeStamp = lastUpdatedTimestamp_d,\r\n    Muted = muted_b,\r\n    PackageName = packageName_s,\r\n    DAVISRiskLevel = riskAssessment_riskLevel_s,\r\n    DAVISRiskScore = riskAssessment_riskScore_d,\r\n    DAVISRiskVector = riskAssessment_riskVector_s,\r\n    DAVISVulnerableFunctionUsage = riskAssessment_vulnerableFunctionUsage_s ,\r\n    DAVISExposure = riskAssessment_exposure_s,\r\n    DAVISDataAssets = riskAssessment_dataAssets_s,\r\n    DAVISPublicExploit = riskAssessment_publicExploit_s,\r\n    Status = status_s,\r\n    Technology = technology_s ,\r\n    Title = title_s ,\r\n    Url = url_s,\r\n    VulnerabilityType = vulnerabilityType_s\r\n| project-away riskAssessment_baseRiskLevel_s, riskAssessment_baseRiskScore_d, riskAssessment_baseRiskVector_s,riskAssessment_assessmentAccuracy_s \r\n\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "DynatraceSecurityProblems"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId4'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName4')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
                "contentId": "[variables('_parserContentId4')]",
                "kind": "Parser",
                "version": "[variables('parserVersion4')]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName4')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "DynatraceSecurityProblems",
        "category": "Samples",
        "functionAlias": "DynatraceSecurityProblems",
        "query": "\n\r\nDynatraceSecurityProblems_CL\r\n| extend EventVendor = 'Dynatrace'\r\n| extend EventProduct = 'Application Security'\r\n| extend Severity = case(riskAssessment_riskLevel_s == 'CRITICAL', 'High', \r\n                       riskAssessment_riskLevel_s == 'HIGH', 'Medium', \r\n                       riskAssessment_riskLevel_s == 'MEDIUM', 'Low',\r\n                       'Informational')\r\n| project-rename\r\n    SecurityProblemId = securityProblemId_s,\r\n    CVEIds = cveIds_s,\r\n    DisplayId = displayId_s,\r\n    ExternalVulnerabilityId = externalVulnerabilityId_s ,\r\n    FirstSeenTimeStamp = firstSeenTimestamp_d ,\r\n    LastUpdatedTimeStamp = lastUpdatedTimestamp_d,\r\n    Muted = muted_b,\r\n    PackageName = packageName_s,\r\n    DAVISRiskLevel = riskAssessment_riskLevel_s,\r\n    DAVISRiskScore = riskAssessment_riskScore_d,\r\n    DAVISRiskVector = riskAssessment_riskVector_s,\r\n    DAVISVulnerableFunctionUsage = riskAssessment_vulnerableFunctionUsage_s ,\r\n    DAVISExposure = riskAssessment_exposure_s,\r\n    DAVISDataAssets = riskAssessment_dataAssets_s,\r\n    DAVISPublicExploit = riskAssessment_publicExploit_s,\r\n    Status = status_s,\r\n    Technology = technology_s ,\r\n    Title = title_s ,\r\n    Url = url_s,\r\n    VulnerabilityType = vulnerabilityType_s\r\n| project-away riskAssessment_baseRiskLevel_s, riskAssessment_baseRiskScore_d, riskAssessment_baseRiskVector_s,riskAssessment_assessmentAccuracy_s \r\n\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId4'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId4')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
        "contentId": "[variables('_parserContentId4')]",
        "kind": "Parser",
        "version": "[variables('parserVersion4')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId3')]",
              "version": "[variables('analyticRuleVersion3')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId4')]",
              "version": "[variables('analyticRuleVersion4')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId5')]",
              "version": "[variables('analyticRuleVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich_DynatraceApplicationSecurityAttackIncident')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-DynatraceAppSecAttackAADIDPRiskySignins')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId2')]",
              "version": "[variables('dataConnectorVersion2')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId3')]",
              "version": "[variables('dataConnectorVersion3')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId4')]",
              "version": "[variables('dataConnectorVersion4')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId2')]",
              "version": "[variables('parserVersion2')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId3')]",
              "version": "[variables('parserVersion3')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId4')]",
              "version": "[variables('parserVersion4')]"
            }
          ]
        },
        "firstPublishDate": "2022-10-18",
        "providers": [
          "Dynatrace"
        ],
        "categories": {
          "domains": [
            "Security – Observability"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
