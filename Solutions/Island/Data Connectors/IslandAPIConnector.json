{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "workspace": {
        "type": "string",
        "defaultValue": ""
      }
    },
    "resources": [
      {
        "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',guid(subscription().subscriptionId))]",
        "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',guid(subscription().subscriptionId))]",
        "apiVersion": "2021-03-01-preview",
        "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
        "kind": "APIPolling",
        "properties": {
          "connectorUiConfig": {
            "title": "Island Enterprise Browser (Polling CCP)",
            "id":"Island_Polling",
            "publisher": "Island",
            "descriptionMarkdown": "The [Island](https://www.island.io) connector provides the capability to ingest Island logs into Microsoft Sentinel.",
            "graphQueriesTableName": "Island_CL",
            "graphQueries": [
              {
                "metricName": "Total events received",
                "legend": "Island Events",
                "baseQuery": "{{graphQueriesTableName}}"
              }
            ],
            "sampleQueries": [
              {
                "description": "Grab 10 Island log entries",
                "query": "{{graphQueriesTableName}}\n | sort by TimeGenerated\n | take 10"
              }
            ],
            "dataTypes": [
              {
                "name": "{{graphQueriesTableName}}",
                "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
              }
            ],
            "connectivityCriterias": [
              {
                "type": "SentinelKindsV2",
                "value": []
              }
            ],
            "availability": {
              "status": 1,
              "isPreview": false
            },
            "permissions": {
              "resourceProvider": [
                {
                  "provider": "Microsoft.OperationalInsights/workspaces",
                  "permissionsDisplayText": "read and write permissions are required.",
                  "providerDisplayName": "Workspace",
                  "scope": "Workspace",
                  "requiredPermissions": {
                    "action": true,
                    "write": true,
                    "read": true,
                    "delete": true
                  }
                }
              ],
              "customs": [
                {
                  "name": "Island API Key",
                  "description": "An Island API key is required."
                }
              ]
            },
            "instructionSteps": [
              {
                "title": "Connect Island to Microsoft Sentinel",
                "description": "Provide the Island API Key.",
                "instructions": [
                  {
                    "parameters": {
                      "enable": "true",
                      "userRequestPlaceHoldersInput": [
                        {
                          "displayText": "Organization Name",
										      "requestObjectKey": "apiEndpoint",
										      "placeHolderName": "{{placeHolder1}}",
										      "placeHolderValue": ""
                        }
                      ]
                    },
                    "type": "APIKey"
                  }
                ]
              }
            ]
          },
          "pollingConfig": {
            "auth": {
                "authType": "APIKey",
                "APIKeyName": "Api-Key",
                "IsAPIKeyInPostPayload": false
             },
             "request": {
                "apiEndpoint": "https://management.island.io/api/external/v1/timeline",
                "rateLimitQPS": 2,
                "queryWindowInMin": 5,
                "httpMethod": "Post",
                "startTimeAttributeName": "start",
                "endTimeAttributeName": "end",
                "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "retryCount": 3,
                "timeoutInSeconds": 120,
                "isPostPayloadJson": true,
                "headers": {
                   "Accept": "*/*",
                   "Content-Type": "application/json-patch+json"
                }
             },
             "paging": {
                "pagingType": "Offset",
                "offsetParaName": "offset",
                "pageSizeParaName": "limit",
                "pageSize": 100
             },
             "response": {
                "eventsJsonPaths": [
                  "$"
                ]
             }
        }
        }
      }
    ]
}